1
00:00:01,810 --> 00:00:05,500
So we have a forum to reset passwords displaying properly.

2
00:00:06,190 --> 00:00:10,550
And now, of course, the last step we need to do is to actually reset the user's password.

3
00:00:10,570 --> 00:00:12,160
And that's pretty easy at this point.

4
00:00:12,610 --> 00:00:18,740
So I'm still in my app and I'm still looking at after handlers talk, and it's very bottom of this file.

5
00:00:18,760 --> 00:00:24,670
I'll add a new function that allows us to reset the password funk with a receiver of h a pointer to

6
00:00:24,670 --> 00:00:25,300
handlers.

7
00:00:26,080 --> 00:00:38,350
And I'll call this post reset password and it takes W Active Response Writer and our pointer to request.

8
00:00:40,760 --> 00:00:42,230
And of course, what are we going to do in here?

9
00:00:42,260 --> 00:00:52,580
Well, we need to pass this one and then we need to get and decrypt the email and then we need to get

10
00:00:52,580 --> 00:00:57,860
the user and then we need to reset the password.

11
00:01:01,130 --> 00:01:02,210
And we want to redirect.

12
00:01:03,590 --> 00:01:06,650
Now just a note about this redirecting bit.

13
00:01:07,160 --> 00:01:15,770
You may recall that at one point not too long ago, over here in the celebrities project in the render

14
00:01:15,770 --> 00:01:22,610
dark go file inside the render package, we actually added error and flash to template did it, and

15
00:01:22,610 --> 00:01:23,810
we never did anything with those.

16
00:01:24,080 --> 00:01:26,180
And now's a good time to do something with those.

17
00:01:26,960 --> 00:01:32,060
So what these are going to be, of course, error will be an error message and flash will be some kind

18
00:01:32,060 --> 00:01:32,690
of message.

19
00:01:32,720 --> 00:01:38,990
But then the sort of message you only want to display on the next time a request is sent to the server

20
00:01:38,990 --> 00:01:40,520
and comes back from the server.

21
00:01:41,240 --> 00:01:45,770
So in other words, it's a sessional variable that only exists for one more request.

22
00:01:46,130 --> 00:01:47,360
And that's really easy to do.

23
00:01:47,930 --> 00:01:53,330
So here in the default data function, this is the data we're passing to every single template in our

24
00:01:53,330 --> 00:01:53,780
system.

25
00:01:53,930 --> 00:01:55,460
We're just going to add value here, aren't you?

26
00:01:55,460 --> 00:02:01,610
Two of them will say to do an error and that will be equal to see dot session.

27
00:02:03,760 --> 00:02:07,390
Pop string and pop string, we can roll over it and read about it.

28
00:02:08,200 --> 00:02:13,270
Pop string actually returns the string value for a given key and then deletes it from the session data,

29
00:02:13,280 --> 00:02:14,830
and that's exactly what we want to do.

30
00:02:14,920 --> 00:02:22,210
So we'll handed context and we'll look for the word error as the key in the session that we'll duplicate

31
00:02:22,210 --> 00:02:28,510
this and this will be TDK flash, which is another message I want to display only once.

32
00:02:28,510 --> 00:02:32,560
But it's not an error, and we'll look for the key flash in the session.

33
00:02:32,800 --> 00:02:36,760
And that's all we have to do in is to make this available to us.

34
00:02:37,690 --> 00:02:42,490
So back over here now, when I get to this redirect part, let's actually put a message in there.

35
00:02:43,120 --> 00:02:50,230
And if you look for example at the Reset Password Dot jet file, you'll see I've already put some logic

36
00:02:50,230 --> 00:02:51,610
in here that does that sort of thing.

37
00:02:51,640 --> 00:02:53,230
Now, I'm not taking advantage of it.

38
00:02:53,620 --> 00:02:58,360
I'm leaving server side error validation up to you because you already know how to do it, and it's

39
00:02:58,360 --> 00:03:01,210
really easy to implement and there's no point in you watching me do it.

40
00:03:01,960 --> 00:03:05,440
But this is the kind of thing I want to be available say.

41
00:03:05,450 --> 00:03:09,030
For example, I want to send a flash message on the log in screen.

42
00:03:09,040 --> 00:03:13,170
So while I'm here, I'll copy this from Reset Dash Password Jet.

43
00:03:13,450 --> 00:03:19,960
I'll just copy it and then I'll open log in chat and I'll put it say right here after the error, but

44
00:03:19,960 --> 00:03:20,800
before the form.

45
00:03:20,980 --> 00:03:27,520
OK, so if that variable flashed exists in the template data and is not an empty string, then I'll

46
00:03:27,520 --> 00:03:31,510
display that flash message and that's really kind of helpful and very easy to implement.

47
00:03:31,690 --> 00:03:32,090
All right.

48
00:03:32,110 --> 00:03:32,770
So that's out of the way.

49
00:03:32,890 --> 00:03:37,150
So let's go back to our handler and implement this logic.

50
00:03:37,270 --> 00:03:38,440
And this is really easy.

51
00:03:38,710 --> 00:03:45,190
So again, we pass the form errors, assign the value of our Dot Pass form, and we check for an error

52
00:03:45,340 --> 00:03:46,900
if error is not equal to nil.

53
00:03:46,960 --> 00:03:54,760
Then I'll just say each dot app got error five hundred and give it w an error return.

54
00:03:55,000 --> 00:03:56,080
I can't pers the form.

55
00:03:56,080 --> 00:03:57,610
Something has gone wrong.

56
00:03:59,000 --> 00:04:03,860
Now I need to get in decrypted email, and I can do that in one step with an check, so I'll create

57
00:04:03,860 --> 00:04:10,850
a variable called email and I will check for an error and those come from calling each dot decrypt and

58
00:04:10,850 --> 00:04:13,260
I'm going to decrypt our dot form.

59
00:04:13,290 --> 00:04:16,670
Don't get email, which is what it's called in the form.

60
00:04:17,150 --> 00:04:18,650
And again, I'll just copy this error.

61
00:04:18,650 --> 00:04:20,960
Check and paste it here.

62
00:04:24,830 --> 00:04:27,890
That's part of why I'm not there to perform, that's better.

63
00:04:28,640 --> 00:04:34,430
Now I need to get the user, so I'll create a variable you, which is of type data, not user, and

64
00:04:34,430 --> 00:04:39,050
I'm just creating that so I can call a method on it and I'll get the user and check for an error that

65
00:04:39,050 --> 00:04:40,130
comes from you, dot.

66
00:04:41,620 --> 00:04:45,190
Get by email and I handled the email, I just decrypted.

67
00:04:45,790 --> 00:04:46,120
OK.

68
00:04:46,480 --> 00:04:47,830
And I'll pursue my error check.

69
00:04:48,860 --> 00:04:51,710
And if I get past that and then I can reset the password.

70
00:04:52,130 --> 00:04:59,320
And that's as simple as saying error is equal to user reset password and that requires the user I.D.

71
00:04:59,480 --> 00:05:04,200
Sorry, have I just pulled the user out of the database and the password that was posted to us?

72
00:05:04,220 --> 00:05:07,880
So we'll get that from the forum post art form Typekit.

73
00:05:08,730 --> 00:05:13,520
I'm looking for a password and again, I'll check for an error.

74
00:05:14,090 --> 00:05:17,300
And here when I do the redirect yourself some room.

75
00:05:18,890 --> 00:05:24,560
At this point, I can pop a value in the session, a message that will now be displayed when I redirect

76
00:05:24,560 --> 00:05:25,750
them to the login page.

77
00:05:25,760 --> 00:05:30,320
And that's as simple as saying a short app that session.

78
00:05:34,510 --> 00:05:42,610
That put in give it the context and context and call it flash, which I have to spell right or won't

79
00:05:42,610 --> 00:05:47,290
work, and I'll just say password reset.

80
00:05:47,710 --> 00:05:53,710
You can now log in and I'll redirect the user to the appropriate page.

81
00:05:54,310 --> 00:05:55,240
Repeat on redirect.

82
00:05:57,340 --> 00:06:05,110
And that requires W and R the path to go to slash users slash log in and some status in the 200 range

83
00:06:05,230 --> 00:06:06,620
issue status.

84
00:06:06,640 --> 00:06:07,210
See other.

85
00:06:08,900 --> 00:06:09,200
OK.

86
00:06:11,450 --> 00:06:12,850
Of course, there's one more step.

87
00:06:13,150 --> 00:06:16,790
None of this is going to work until we actually create the necessary route.

88
00:06:16,810 --> 00:06:17,890
So let's open our routes.

89
00:06:21,650 --> 00:06:26,720
And go down to here and I'll just duplicate the password reset route and modify it.

90
00:06:26,990 --> 00:06:34,250
I'll make it a post request and I'll call the handler post reset password.

91
00:06:35,570 --> 00:06:39,680
Now I should be able to open my terminal, say make restart.

92
00:06:52,230 --> 00:06:52,710
Perfect.

93
00:06:52,800 --> 00:07:00,330
Now let's switch for a Web browser, reload this page, go to log user and I'll start the whole process

94
00:07:00,330 --> 00:07:00,640
over.

95
00:07:00,660 --> 00:07:01,680
I forgot my password.

96
00:07:02,460 --> 00:07:04,400
My email is me at here.

97
00:07:04,410 --> 00:07:05,070
Dot com.

98
00:07:05,130 --> 00:07:07,230
Send me a link, OK?

99
00:07:07,260 --> 00:07:11,550
And again, you could display a little message up there that says, check your email by popping in a

100
00:07:11,550 --> 00:07:12,390
flash variable.

101
00:07:13,530 --> 00:07:16,050
So I'll go to my email client or server my fake one.

102
00:07:16,650 --> 00:07:19,990
There's my password reset email that just came in a few seconds ago.

103
00:07:20,040 --> 00:07:26,040
I'll click on it and I will open this in any tab and switch to that tab.

104
00:07:26,190 --> 00:07:27,000
And there it is.

105
00:07:27,150 --> 00:07:39,870
So I'll put a new password password on the Republican S.W.O.R.D. to the S.W.O.R.D. to see if I got those

106
00:07:39,870 --> 00:07:40,350
the same.

107
00:07:43,020 --> 00:07:46,330
I did, and there's my message, password reset, you can now log in.

108
00:07:46,350 --> 00:07:48,540
Let's make sure it actually worked me out here.

109
00:07:48,540 --> 00:07:52,050
RT.com Password two and I log in.

110
00:07:54,310 --> 00:07:57,460
And everything works exactly as expected.

111
00:07:58,720 --> 00:08:01,690
OK, so there's how we reset our users password.

112
00:08:01,720 --> 00:08:05,650
Now, obviously, we want to take all of this logic we just built.

113
00:08:05,770 --> 00:08:12,900
And we want to put it into the Celebrity House package and add it whenever a user types celebrities

114
00:08:12,910 --> 00:08:13,840
make off.

115
00:08:13,870 --> 00:08:18,880
We want all of those handlers, all the views, all of the middleware, everything to be copied over.

116
00:08:18,880 --> 00:08:23,530
Most of it's already there, but some of it needs to be updated and some needs to be added, and we'll

117
00:08:23,530 --> 00:08:25,990
take care of that in the next lecture.
