1
00:00:00,870 --> 00:00:04,000
So we've put a fair bit of basic functionality into this project.

2
00:00:04,020 --> 00:00:10,560
We have excellent access to the database, we have caching, we have sessions, we have mail, we have

3
00:00:10,560 --> 00:00:11,730
all sorts of functionality.

4
00:00:11,940 --> 00:00:16,860
And even if we went no further, you'd have a great starter module you could use for every new project

5
00:00:16,860 --> 00:00:17,340
you begin.

6
00:00:17,730 --> 00:00:22,800
And with one command, you have a lot of the core functionality that you need, including user authentication.

7
00:00:23,460 --> 00:00:24,940
But there's lots we could add to this.

8
00:00:24,960 --> 00:00:29,340
And right now, I'm looking at the Laravel site and I'm looking, for example, at the file storage.

9
00:00:29,340 --> 00:00:35,970
And this is a really useful function you find in Laravel that allows you to write to an FTP server or

10
00:00:35,970 --> 00:00:39,330
to an Amazon S3 bucket and all sorts of file systems.

11
00:00:39,330 --> 00:00:44,970
And we could duplicate that or actually improve upon that pretty easily, simply by including a package

12
00:00:44,970 --> 00:00:45,710
like this.

13
00:00:46,080 --> 00:00:51,320
Viant AIFS And if you scroll to the very bottom of this module, which you can import right into a go

14
00:00:51,330 --> 00:00:56,730
project, you can see that you have lots of different file systems you can write to so you can write

15
00:00:56,730 --> 00:01:01,170
to file in memory CPP or SSA to web servers.

16
00:01:01,170 --> 00:01:06,420
TERS, IWC and it would be really simple to implement this and add this functionality.

17
00:01:06,660 --> 00:01:08,360
And of course, there's other things as well.

18
00:01:09,240 --> 00:01:14,790
Laravel jumps through some rather serious hoops in order to implement web sockets pretty easily, and

19
00:01:14,790 --> 00:01:17,580
they call it broadcasting an echo and things like that.

20
00:01:18,210 --> 00:01:22,190
And of course, this is relatively simple to implement in Go.

21
00:01:22,200 --> 00:01:27,300
And in fact, I have a course on web sockets up on Udemy already, but adding that functionality would

22
00:01:27,300 --> 00:01:29,550
make our project ever so much more useful.

23
00:01:30,300 --> 00:01:33,930
In the same way, Laravel has great testing functionality.

24
00:01:33,960 --> 00:01:38,040
Now we've already written some tests, and you see it's relatively straightforward to testing and go.

25
00:01:38,610 --> 00:01:43,680
But one thing they do have is something called Laravel Dusk, which is browser based testing, which

26
00:01:43,680 --> 00:01:47,370
actually takes a snapshot of the web page when you encounter an error.

27
00:01:48,030 --> 00:01:52,680
And I've already written code that implements this functionality in Go, and it would be relatively

28
00:01:52,680 --> 00:01:55,050
straightforward to add this to our project as well.

29
00:01:55,830 --> 00:02:01,410
And finally, Q's and this is just an overview of the sorts of things we could add to this in the future,

30
00:02:02,700 --> 00:02:09,390
because Laravel is written and it doesn't handle parallel tasks or synchronous tasks and very well.

31
00:02:09,660 --> 00:02:11,690
That's the nature of PHP, and you can do it.

32
00:02:11,700 --> 00:02:17,790
It's just a lot of work and it's error prone, whereas go with go routines handles this sort of thing

33
00:02:17,790 --> 00:02:22,170
right out of the box so that a lot of cases you don't actually need to implement queues.

34
00:02:22,290 --> 00:02:23,490
But in some cases you do.

35
00:02:23,520 --> 00:02:26,850
You need to connect to rabbit MQ or something like that.

36
00:02:27,210 --> 00:02:32,010
And that, again, is the sort of functionality that would be convenient to have in celebrities, and

37
00:02:32,010 --> 00:02:33,360
we could add that easily enough.

38
00:02:34,380 --> 00:02:38,730
Now I'm already planning a follow up course to this one, and if there's enough interest in this course,

39
00:02:38,730 --> 00:02:39,660
I'll actually do it.

40
00:02:39,930 --> 00:02:43,920
That will add at least this functionality and more as well.

41
00:02:44,220 --> 00:02:49,470
But in any case, this is just a suggestion to point you in a few directions if you want to expand on

42
00:02:49,470 --> 00:02:50,880
the code base on your own.

43
00:02:51,660 --> 00:02:52,020
All right.

44
00:02:52,590 --> 00:02:53,160
Take care.
