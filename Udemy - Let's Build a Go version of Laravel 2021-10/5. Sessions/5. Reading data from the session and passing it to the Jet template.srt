1
00:00:01,080 --> 00:00:07,110
So let's try passing some data to our session, and because we're using jet templates, this is remarkably

2
00:00:07,110 --> 00:00:07,590
easy.

3
00:00:08,280 --> 00:00:14,400
So I'm looking at handlers Dot go in the My App project, and first thing I want to do is get these

4
00:00:14,400 --> 00:00:14,940
backwards.

5
00:00:15,030 --> 00:00:16,190
I want this to be better.

6
00:00:16,570 --> 00:00:20,190
I want that to be the data and I want the context to be full.

7
00:00:20,610 --> 00:00:21,030
OK.

8
00:00:22,790 --> 00:00:27,830
So now that we've got information in the session, as silly as it may seem, we're just testing things

9
00:00:27,830 --> 00:00:28,160
here.

10
00:00:28,490 --> 00:00:38,750
Let's say my value is assigned the value of each Dot app, dot session, dot get string.

11
00:00:39,560 --> 00:00:41,660
And we're going to look for the key food.

12
00:00:42,350 --> 00:00:44,300
OK, now this returns.

13
00:00:44,300 --> 00:00:45,200
What does it return?

14
00:00:45,230 --> 00:00:46,820
It returns a string.

15
00:00:48,560 --> 00:00:50,180
Now, of course, we have to give it the context.

16
00:00:50,720 --> 00:00:53,780
So our context, our context.

17
00:00:54,170 --> 00:00:54,680
I knew that.

18
00:00:55,310 --> 00:00:56,300
So now we have my value.

19
00:00:56,360 --> 00:01:00,530
So let's add that to the data we're going to pass to to jet now.

20
00:01:00,530 --> 00:01:05,210
Jet actually takes two kinds of data variables that we see here and then context data.

21
00:01:05,250 --> 00:01:08,330
We're going to ignore that for right now, but we might come back to it later.

22
00:01:08,360 --> 00:01:17,750
In the meantime, let's store this value my value inside a data structure that we can pass as the first,

23
00:01:17,750 --> 00:01:21,530
second, third fourth parameter to the jet page value.

24
00:01:21,740 --> 00:01:22,070
OK.

25
00:01:23,000 --> 00:01:30,570
So we do that like this first, which is a variable I'm just creating right now and we make a jetport

26
00:01:30,590 --> 00:01:32,330
VAR map, which is really simple.

27
00:01:33,020 --> 00:01:37,580
And now we just say VARs Dot set, and we're going to give it a key to look it up with.

28
00:01:37,580 --> 00:01:38,840
And we'll call it food.

29
00:01:39,410 --> 00:01:43,510
And the value will be my value, my value with that.

30
00:01:43,760 --> 00:01:49,940
OK, now this is purely an exercise to make sure things work, but we declare a variable store bar in

31
00:01:50,120 --> 00:01:50,690
a string.

32
00:01:51,170 --> 00:01:53,840
We put that in the session here on Line Thirty eight.

33
00:01:54,260 --> 00:02:00,740
Then we immediately grab it out of this session, storing the result in my value and we create a VAR

34
00:02:00,740 --> 00:02:08,080
map and we put the value, my value with the key food here, which means we have to pass that data.

35
00:02:08,090 --> 00:02:10,550
So we'll pass verbs right there.

36
00:02:12,210 --> 00:02:19,170
Now we can go back to our session, Georgette Page Sessions Dot Jet, and all we have to do is, say,

37
00:02:19,350 --> 00:02:21,580
in double curly braces food.

38
00:02:23,280 --> 00:02:26,280
So if I restart my application, make restart.

39
00:02:29,460 --> 00:02:35,220
And go back to my Web browser and click on Try Sessions.

40
00:02:36,030 --> 00:02:41,460
There is a value displayed right there, so sessions work exactly as they should.

41
00:02:42,150 --> 00:02:42,630
Perfect.

42
00:02:43,320 --> 00:02:48,900
So now let's go write some tests for our session package inside this letter test project, and we'll

43
00:02:48,900 --> 00:02:50,730
take care of that in the next lecture.
