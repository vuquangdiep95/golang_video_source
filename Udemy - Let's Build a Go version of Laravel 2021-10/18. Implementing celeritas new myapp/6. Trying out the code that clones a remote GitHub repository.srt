1
00:00:00,910 --> 00:00:05,900
So we have our code pushed to a GitHub repository, and now we can try our command line application.

2
00:00:05,920 --> 00:00:11,440
So I'm in my silver toast project and just to make things easier, I'm going to open my make file and

3
00:00:11,440 --> 00:00:14,110
I'm going to add a new command here.

4
00:00:14,890 --> 00:00:23,050
I'm going to copy this build Seelye bit and paste of below that, and I'm going to change it just to

5
00:00:23,050 --> 00:00:23,440
build.

6
00:00:23,800 --> 00:00:24,130
OK.

7
00:00:24,760 --> 00:00:30,310
So I don't want to keep switching back and forth to my between this project in my My App project.

8
00:00:30,760 --> 00:00:36,940
So builds the command line tool to temp directory to disk directly dist directory.

9
00:00:37,300 --> 00:00:47,770
OK, so I'm going to say go build and my output will be to the current folder slash dist ancillary tasks.

10
00:00:47,770 --> 00:00:50,440
And of course, if you're a windows, put a Dot X either.

11
00:00:50,590 --> 00:00:53,920
Now let's go created this directory just to make sure we have one.

12
00:00:54,460 --> 00:01:00,910
So I'll come in here and say new folder just and I should be able to build this now.

13
00:01:01,150 --> 00:01:06,700
So I open my command line, prompt my terminal and type, make built.

14
00:01:15,700 --> 00:01:19,370
And now I'll switch into my dis directory seduced.

15
00:01:20,110 --> 00:01:20,950
Clear the screen.

16
00:01:21,070 --> 00:01:22,030
I will give this a try.

17
00:01:22,270 --> 00:01:26,320
Dot slash celebrity's new and I'll just call it test.

18
00:01:27,610 --> 00:01:32,380
And it says open Dan's no such file or directory.

19
00:01:33,610 --> 00:01:35,980
Now, fortunately, that's pretty easy to fix.

20
00:01:36,100 --> 00:01:41,140
What's happened, of course, is we have a check in there that says if you're running celebrities and

21
00:01:41,140 --> 00:01:46,030
the directory you're in when you run, it doesn't have a dot on file, just dot because we need to get

22
00:01:46,030 --> 00:01:46,750
values from there.

23
00:01:46,780 --> 00:01:51,160
And of course, that's not true in the case where we're doing things like celebrities new.

24
00:01:52,030 --> 00:01:58,000
So I'll close the make file or go to the Command Seelye folder and find out where that check exists.

25
00:01:58,900 --> 00:01:59,950
So we've got a main go.

26
00:02:00,250 --> 00:02:04,500
So the first thing it checks is validate input, and I know it's not checking it there.

27
00:02:04,510 --> 00:02:06,370
It's probably in setup.

28
00:02:06,430 --> 00:02:07,390
Let's go have a look at that.

29
00:02:09,700 --> 00:02:14,470
And of course, here's where the problem is right at the beginning of the setup function.

30
00:02:14,740 --> 00:02:20,690
And in order to fix that, I just have to see if the command the person is executing happens to be new.

31
00:02:20,860 --> 00:02:25,840
Well, in order to do that, I have to receive a couple of arguments here or at least one I need to

32
00:02:25,840 --> 00:02:26,230
get heard.

33
00:02:26,230 --> 00:02:26,590
One.

34
00:02:26,740 --> 00:02:30,550
And I'm going to take our two two just to be safe, both of type string.

35
00:02:32,440 --> 00:02:42,920
And then I'll check here to see if one is not equal to new and one is not equal to new like that.

36
00:02:42,940 --> 00:02:43,390
OK.

37
00:02:44,810 --> 00:02:46,370
And there may be some others as well.

38
00:02:46,640 --> 00:02:56,570
Version, for example, and our one is not equal to version and health is another one and one is not

39
00:02:56,570 --> 00:02:57,390
equal to help.

40
00:02:58,400 --> 00:03:01,940
All of these don't require a dance that's enough for now.

41
00:03:01,970 --> 00:03:03,110
We'll check the rest of them later.

42
00:03:03,590 --> 00:03:03,980
OK.

43
00:03:04,920 --> 00:03:07,850
And all Dukas come down here in my statement.

44
00:03:10,050 --> 00:03:16,080
And say this now, of course, I need to go where I call set up and pass it earned one an hour two and

45
00:03:16,080 --> 00:03:18,090
of course, that's back in top of mean.

46
00:03:18,090 --> 00:03:19,530
Don't go right over here.

47
00:03:20,430 --> 00:03:23,010
Heard one or two?

48
00:03:24,570 --> 00:03:31,530
OK, so let's go back up one level clear the screen recompile are up our command line application.

49
00:03:31,650 --> 00:03:32,250
Make build.

50
00:03:38,850 --> 00:03:43,260
Change back into the dis directory and run celebrities.

51
00:03:43,920 --> 00:03:45,240
New cast.

52
00:03:47,260 --> 00:03:48,820
And it's cloning the repository.

53
00:03:54,260 --> 00:03:59,210
And it says repository not found, so I have something wrong in my view or else go fix that, then.

54
00:04:00,590 --> 00:04:10,280
So that was in new Doggo Am I repository is get at GitHub dot com slash T slash slash alert has dash

55
00:04:10,280 --> 00:04:10,670
apt.

56
00:04:10,850 --> 00:04:14,480
Get, let's go see what it actually is.

57
00:04:18,140 --> 00:04:19,100
So I'll copy that.

58
00:04:19,730 --> 00:04:27,110
Go back to here and I have a and of a column, I should have noticed that.

59
00:04:28,190 --> 00:04:30,110
OK, let's compile it in third time.

60
00:04:30,110 --> 00:04:30,680
Is the term

61
00:04:33,500 --> 00:04:34,100
make built?

62
00:04:40,920 --> 00:04:48,180
And changing to the Disc Directory cleared the screen and we'll say dot slash celebrity's new test.

63
00:04:50,850 --> 00:04:52,320
And there it is, it finished.

64
00:04:52,800 --> 00:04:54,840
So let's see what's inside the test directory.

65
00:04:55,140 --> 00:04:57,630
The test and do analysis.

66
00:04:58,110 --> 00:04:59,970
And there are all the files.

67
00:05:00,120 --> 00:05:00,540
Perfect.

68
00:05:00,960 --> 00:05:04,530
So a couple of typos, but nothing to overly difficult.

69
00:05:04,830 --> 00:05:05,250
All right.

70
00:05:05,400 --> 00:05:06,030
Let's move on.
