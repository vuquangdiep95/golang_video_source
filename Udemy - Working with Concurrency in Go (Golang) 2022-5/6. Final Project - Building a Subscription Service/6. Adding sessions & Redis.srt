1
00:00:00,910 --> 00:00:06,040
So we've managed to connect to the database successfully, and the next step is to connect to Redis

2
00:00:06,040 --> 00:00:08,160
and initiate our sessions.

3
00:00:08,170 --> 00:00:09,580
And that's really simple.

4
00:00:10,630 --> 00:00:15,220
So here in mean don't go under the comment, create sessions.

5
00:00:15,220 --> 00:00:20,860
Let's call a function that doesn't exist yet, which seems to be really popular these days session,

6
00:00:21,130 --> 00:00:29,390
which is just a local variable I'm declaring it's a sign the value of init session ticked up.

7
00:00:29,920 --> 00:00:34,600
Okay, now let's scroll down to the very bottom of the file and let's initialize the session.

8
00:00:34,600 --> 00:00:37,690
So we're going to have a function here which I'll call in its session.

9
00:00:39,640 --> 00:00:44,200
It takes no parameters and it returns a pointer to from the SC US package.

10
00:00:44,200 --> 00:00:49,120
That's Alex Edwards version two dot session manager right there.

11
00:00:49,660 --> 00:00:49,990
Okay.

12
00:00:50,770 --> 00:00:52,210
So it's a new sessions manager.

13
00:00:53,610 --> 00:00:54,720
That's what we're going to be returning.

14
00:00:56,040 --> 00:00:58,470
And we're also going to have another function here underneath it.

15
00:00:58,920 --> 00:01:01,620
And this one will connect to it and I'll call it in it.

16
00:01:02,340 --> 00:01:09,120
Revis Now we already have Redis running as part of our Docker compose file and this function will return

17
00:01:09,120 --> 00:01:13,410
a pointer to a retasked pool right there.

18
00:01:14,970 --> 00:01:15,300
Okay.

19
00:01:18,030 --> 00:01:19,410
So let's connect to read it first.

20
00:01:19,770 --> 00:01:22,020
Now, this is dead simple.

21
00:01:22,320 --> 00:01:26,820
We'll create a variable, which I'll call read his pool, which is a pool of reddest connections.

22
00:01:27,240 --> 00:01:32,220
And that comes from a reference to the type red is dark pool.

23
00:01:35,380 --> 00:01:35,950
Right there.

24
00:01:36,790 --> 00:01:41,830
And we fill in the necessary fields so we'll save maximum time for an idle connection.

25
00:01:41,830 --> 00:01:43,960
Is ten, which is a good default.

26
00:01:44,380 --> 00:01:45,280
I have to spell.

27
00:01:45,280 --> 00:01:46,060
I'll write though.

28
00:01:47,140 --> 00:01:47,680
That's ten.

29
00:01:48,160 --> 00:01:48,530
Okay.

30
00:01:49,600 --> 00:01:53,980
And then we just dial the read a server and we just use an inline function.

31
00:01:56,720 --> 00:01:58,850
With reddish scone.

32
00:02:00,020 --> 00:02:07,490
That's the first parameter and potentially there and we return reddest on dial.

33
00:02:07,700 --> 00:02:14,180
And just like we did with the with the database with Postgres, I will assume that this TCP connection

34
00:02:14,180 --> 00:02:19,330
that the string comes from over, don't get on credit.

35
00:02:20,660 --> 00:02:25,850
Now the great thing about this is in our Makefile, we've already specified that environment variable.

36
00:02:25,970 --> 00:02:27,230
Okay, so that's really simple.

37
00:02:27,800 --> 00:02:30,140
And then down here we have this is a closing collar.

38
00:02:31,700 --> 00:02:35,060
And outside of this, we return red as pool.

39
00:02:36,530 --> 00:02:38,510
Okay, so that will get us a red us connection.

40
00:02:38,960 --> 00:02:40,490
Now let's initialize the session.

41
00:02:40,910 --> 00:02:41,960
So this is really simple.

42
00:02:42,270 --> 00:02:48,620
We'll say set up session, and all we do is say session, which is the variable I'm declaring right

43
00:02:48,620 --> 00:02:48,950
now.

44
00:02:49,940 --> 00:02:53,270
It's assigned the value of from the X package new.

45
00:02:53,930 --> 00:02:54,310
Okay.

46
00:02:54,320 --> 00:02:56,510
And then we just set some attributes on it.

47
00:02:56,540 --> 00:02:59,990
So what are we going to use for store session, dot store?

48
00:03:00,290 --> 00:03:01,320
Well, we're using Redis.

49
00:03:02,090 --> 00:03:05,720
That's going to be equal to read this store, which I have to spell.

50
00:03:05,720 --> 00:03:06,050
Right.

51
00:03:06,260 --> 00:03:10,760
Read a store dot new and then I call that function.

52
00:03:10,760 --> 00:03:12,350
I just wrote in it.

53
00:03:12,350 --> 00:03:12,800
Read us.

54
00:03:13,550 --> 00:03:13,910
Okay.

55
00:03:14,150 --> 00:03:18,710
So that tells the session store all of your information for every session in Redis.

56
00:03:19,730 --> 00:03:22,460
Then we'll set some good default session.

57
00:03:22,700 --> 00:03:23,420
Lifetime.

58
00:03:24,260 --> 00:03:25,310
How long should it last?

59
00:03:25,340 --> 00:03:27,040
Well, let's make it 24 times.

60
00:03:27,050 --> 00:03:27,410
Time.

61
00:03:27,410 --> 00:03:28,070
Got our.

62
00:03:28,250 --> 00:03:28,480
Okay.

63
00:03:28,790 --> 00:03:33,710
The last four one day session dot cookie right there.

64
00:03:34,670 --> 00:03:36,980
And we'll set some cookie attributes to persist.

65
00:03:37,010 --> 00:03:39,980
Do we want this to persist between visits to the website?

66
00:03:40,040 --> 00:03:40,520
Sure.

67
00:03:40,610 --> 00:03:41,360
We'll make that true.

68
00:03:43,310 --> 00:03:45,410
Session dot cookie, dot.

69
00:03:45,440 --> 00:03:46,360
Same site.

70
00:03:46,860 --> 00:03:49,580
I'll make that equal to HD.

71
00:03:49,730 --> 00:03:52,370
This is a consent from the HTTP package.

72
00:03:52,580 --> 00:03:53,520
It should be dot.

73
00:03:53,960 --> 00:03:55,430
Same site lacks mode.

74
00:03:55,820 --> 00:03:56,150
Okay.

75
00:03:56,360 --> 00:03:57,680
That's sufficient for purposes.

76
00:03:58,220 --> 00:04:03,230
And session dot cookie dot secure will make that equal to true.

77
00:04:03,620 --> 00:04:08,270
It won't actually be secure in a local host connection, but it will be when it goes live.

78
00:04:08,450 --> 00:04:08,750
Okay.

79
00:04:09,290 --> 00:04:09,920
So we have that.

80
00:04:10,640 --> 00:04:18,470
Now we return the session and up here we still have an error in our code because we're not using the

81
00:04:18,470 --> 00:04:23,480
session right now, but we'll be doing that in the next lecture when we actually set up the application

82
00:04:23,480 --> 00:04:24,050
config.

83
00:04:24,080 --> 00:04:27,120
We're going to skip these two for now and we'll set up the config.

84
00:04:27,140 --> 00:04:28,580
Then we'll come back to these two.

85
00:04:28,640 --> 00:04:29,030
Okay.

86
00:04:29,780 --> 00:04:34,310
So at this point, our code will not run because we have an error, but that's because we're just in

87
00:04:34,310 --> 00:04:37,550
the middle of things and we'll take care of that in the next lecture.
