1
00:00:01,200 --> 00:00:05,370
So let's turn our attention to the final project for this course.

2
00:00:05,370 --> 00:00:10,410
And the final project is a slightly more real world use of concurrency.

3
00:00:10,830 --> 00:00:16,410
What we're going to do is we're going to build a subset of some imaginary service that allows people

4
00:00:16,410 --> 00:00:19,020
to buy one of three possible subscriptions.

5
00:00:19,440 --> 00:00:21,660
It doesn't matter what those subscriptions are for.

6
00:00:22,020 --> 00:00:27,630
Let's assume that you register for an account on this system, and then you choose to buy a bronze,

7
00:00:27,630 --> 00:00:30,090
silver or gold subscription package.

8
00:00:30,540 --> 00:00:36,960
And when you buy it, you get generated an invoice that is sent to you and you also get generated a

9
00:00:36,990 --> 00:00:38,910
user manual of some sort.

10
00:00:38,940 --> 00:00:44,790
Say this is a service that requires that you get some documentation for an API and this service wants

11
00:00:44,790 --> 00:00:50,460
to generate a very customized version of a user manual that has examples that are specific to your API

12
00:00:50,460 --> 00:00:51,900
key and that sort of thing.

13
00:00:52,080 --> 00:00:53,250
It doesn't matter what it is.

14
00:00:53,610 --> 00:00:56,640
The point is that we're building something that's going to use concurrency.

15
00:00:57,300 --> 00:01:03,060
Now, this first section in the final project is all about setting up the web application, getting

16
00:01:03,060 --> 00:01:08,010
some routes in place, and some handlers and some database logic and things like that.

17
00:01:08,310 --> 00:01:10,410
Managing sessions, rendering pages.

18
00:01:10,860 --> 00:01:12,990
So basically it's some boiler plate code.

19
00:01:12,990 --> 00:01:16,980
We have to get out of the way before we can actually start writing some concurrent code.

20
00:01:17,190 --> 00:01:18,030
So let's get Start.
