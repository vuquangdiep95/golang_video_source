1
00:00:00,840 --> 00:00:06,840
So this time around, what I want to do is to add one barber to our program and we'll add more later

2
00:00:06,840 --> 00:00:07,010
on.

3
00:00:07,020 --> 00:00:08,910
But right now, let's just get it working with one.

4
00:00:09,090 --> 00:00:15,390
And as I said last time, what I'm going to do is take this type barbershop over here and barbershop

5
00:00:15,390 --> 00:00:15,930
doggo.

6
00:00:16,590 --> 00:00:19,170
I'll add a method to it called Save and Berber.

7
00:00:19,350 --> 00:00:19,640
Okay.

8
00:00:20,310 --> 00:00:22,530
But before I do that, I mean, I'm going to add the Berber.

9
00:00:22,530 --> 00:00:25,950
The Berber will run as its go routine, as its own go routine.

10
00:00:25,980 --> 00:00:30,180
So if I add one Berber, I'll have one go routine for the Berber.

11
00:00:30,570 --> 00:00:33,630
If I had five, I'll have five go routines for the Berber.

12
00:00:34,170 --> 00:00:36,840
And of course, what does that Berber need to have access to?

13
00:00:37,020 --> 00:00:42,210
Well, obviously everything in the shop, but most importantly, a barbers job is to cut hair.

14
00:00:42,570 --> 00:00:44,700
That barber has to be able to look for clients.

15
00:00:44,970 --> 00:00:50,880
So we'll be using this client's chin field in the barber shop, type one that holds client chin that

16
00:00:50,880 --> 00:00:52,770
we created up here on line 47.

17
00:00:53,640 --> 00:00:56,160
Now, let's figure out what other things a barber has to do.

18
00:00:56,220 --> 00:00:57,870
So that's why I put these comments here.

19
00:00:58,380 --> 00:00:59,790
So the barber falls asleep.

20
00:00:59,940 --> 00:01:01,590
That's one thing the barber has to do.

21
00:01:02,010 --> 00:01:05,160
The barber has to be woken up by a client, but that's the client's job.

22
00:01:05,160 --> 00:01:06,600
So we'll ignore that for right now.

23
00:01:08,270 --> 00:01:15,140
The barber cuts hair checks, the waiting room goes to sleep and ultimately goes home.

24
00:01:15,200 --> 00:01:16,550
That's all that the barber does.

25
00:01:16,790 --> 00:01:20,030
Okay, so let's go back down over here to barber shop.

26
00:01:20,030 --> 00:01:20,930
Don't go.

27
00:01:21,500 --> 00:01:23,000
And underneath this type.

28
00:01:23,030 --> 00:01:26,720
Barber shop will create a new function with the receiver.

29
00:01:27,800 --> 00:01:28,670
And I'll call it sharp.

30
00:01:29,030 --> 00:01:31,340
And it's a pointer to the tape barber shop.

31
00:01:32,030 --> 00:01:33,500
And I'll call this ad barber.

32
00:01:34,880 --> 00:01:37,460
And what is that going to take for parameters?

33
00:01:37,490 --> 00:01:41,300
Well, the only thing I really want is a string to describe this barber's name.

34
00:01:41,300 --> 00:01:43,310
So it's called barber type string.

35
00:01:43,670 --> 00:01:48,770
Every barber will have his or her own name, and this doesn't return anything because it's a go routine.

36
00:01:50,270 --> 00:01:56,870
So the first thing I'll do every time I add a barber, I'm going to increment this value here.

37
00:01:56,900 --> 00:02:00,860
Number of barbers in the tight barber shop by one and that's easy.

38
00:02:00,860 --> 00:02:06,190
I have access to that in the receiver shop dot number of barber's plus plus.

39
00:02:06,600 --> 00:02:06,770
Okay.

40
00:02:06,860 --> 00:02:10,190
So I've now added one barber to this every time.

41
00:02:10,200 --> 00:02:13,130
One barber to the shop every time I call this function.

42
00:02:14,330 --> 00:02:16,550
And then I need to run a go routine.

43
00:02:16,580 --> 00:02:18,020
Well, I can do that this way.

44
00:02:18,080 --> 00:02:25,670
Go func and declare a an inline function that runs in the background because of that go keyword.

45
00:02:25,880 --> 00:02:26,210
Okay.

46
00:02:27,020 --> 00:02:31,270
And it's not going to take any particular values so I can leave these parentheses empty.

47
00:02:31,280 --> 00:02:32,960
But what do I want to do in here?

48
00:02:33,530 --> 00:02:40,550
Well, the very first thing I'm going to do inside of this go -- is to set a variable is sleeping

49
00:02:41,750 --> 00:02:43,130
is a sign the value of false.

50
00:02:43,430 --> 00:02:44,720
Initially the barbour's awake.

51
00:02:45,170 --> 00:02:46,640
He or she arrives at work.

52
00:02:46,790 --> 00:02:48,850
Presumably they're awake when they arrive at work.

53
00:02:48,860 --> 00:02:49,880
That's always a good thing.

54
00:02:50,840 --> 00:02:52,460
And then they have to go and check for clients.

55
00:02:52,700 --> 00:02:59,120
So we'll say color yellow and then my format string is percent s, which is the barber's name.

56
00:02:59,720 --> 00:03:05,450
Goes to the waiting room to check for clients.

57
00:03:06,750 --> 00:03:08,500
My substitution is just a barber's name.

58
00:03:09,110 --> 00:03:09,400
Okay.

59
00:03:10,750 --> 00:03:13,950
And then we check to see, is there anyone in the waiting room?

60
00:03:13,960 --> 00:03:17,570
And that's what we're going to do endlessly until the day is over.

61
00:03:17,590 --> 00:03:18,640
So just have a for loop.

62
00:03:19,480 --> 00:03:28,090
And the first thing we'll do in this for loop, if there are no clients, the barber goes to sleep and

63
00:03:28,090 --> 00:03:29,640
this is just textual feedback.

64
00:03:29,650 --> 00:03:35,380
So we'll check to see if there's anybody in the client's chair and we do that using the built in operator.

65
00:03:35,380 --> 00:03:43,090
Len if the length of from the receiver shop dot clients charm if that's equal to zero and there's nobody

66
00:03:43,090 --> 00:03:48,220
in the channel and remember this is a buffer channel the same size as the number of seats in the waiting

67
00:03:48,220 --> 00:03:48,490
room.

68
00:03:48,490 --> 00:03:53,470
And if there's nothing in that channel, that means that the waiting room is empty and any existing

69
00:03:53,470 --> 00:03:58,750
clients might be getting their haircut or that might be already finished and the shop is just empty.

70
00:03:58,750 --> 00:04:00,610
There's nobody else that needs a haircut.

71
00:04:01,540 --> 00:04:03,490
So what do we do if there's nobody in the waiting room?

72
00:04:04,180 --> 00:04:11,470
The barber goes to sleep, color yellow and my format string is there is nothing to do.

73
00:04:12,070 --> 00:04:14,350
So percent s takes them out.

74
00:04:17,200 --> 00:04:18,490
Am I substitution for that?

75
00:04:18,490 --> 00:04:25,930
Percent S is just barber the current barber's name and of course we want to set now is sleeping is equal

76
00:04:25,930 --> 00:04:27,790
to true this barber is now sleep.

77
00:04:29,860 --> 00:04:37,050
And once we get past this, we actually keep listening to that channel, to the channel, chopped up

78
00:04:37,070 --> 00:04:37,840
clients channel.

79
00:04:38,020 --> 00:04:39,940
So we get a client from the channel.

80
00:04:39,970 --> 00:04:41,830
In other words, we get a client from the waiting room.

81
00:04:41,830 --> 00:04:43,480
Somebody has arrived.

82
00:04:44,410 --> 00:04:45,940
So the line is easy.

83
00:04:45,940 --> 00:04:54,820
It's client is a sign the value of whatever comes in from sharp declension clients channel.

84
00:04:55,660 --> 00:05:02,200
Now there's one other thing we need to do here, and we need to make sure that the shop is still open

85
00:05:02,560 --> 00:05:08,980
because the rules say back in the mango file, they say that once the shop is closed, we don't accept

86
00:05:08,980 --> 00:05:09,790
any new clients.

87
00:05:10,330 --> 00:05:15,850
So you might think at this point that I could use this field open on the type barbershop.

88
00:05:16,270 --> 00:05:17,740
I could use that because that's a boolean.

89
00:05:17,770 --> 00:05:18,280
That's true.

90
00:05:18,280 --> 00:05:22,090
When the shop is open and that's false when the shop is closed.

91
00:05:22,170 --> 00:05:29,110
I could do that right now with one barber, but the minute I have more than one barber, we have a potential

92
00:05:29,110 --> 00:05:36,790
race situation a to race because we might have one more than one go routine time trying to read that

93
00:05:36,790 --> 00:05:41,350
open field on the tape barber shop or trying to write to it.

94
00:05:41,560 --> 00:05:47,410
So instead, here's a situation where we can take advantage of that second parameter you can get from

95
00:05:47,410 --> 00:05:50,200
reading a channel, and I'll call this shop open.

96
00:05:50,920 --> 00:05:56,410
And this is not the same data that's stored here in the field open on the type barbershop.

97
00:05:57,070 --> 00:06:00,100
This is a value that's either true or false.

98
00:06:00,550 --> 00:06:05,440
And remember that second return parameter we get when reading a channel.

99
00:06:05,950 --> 00:06:10,570
It indicates whether the value received from that channel was actually sent to the channel.

100
00:06:10,580 --> 00:06:17,680
In other words, it's a client that's true, or it's false, which means the channel is closed and empty.

101
00:06:18,400 --> 00:06:19,810
So that's what we're going to use.

102
00:06:20,740 --> 00:06:25,030
So now I potentially have a client and I have a Boolean, true or false, that tells me whether or not

103
00:06:25,030 --> 00:06:28,060
the shop is open so we decide what to do.

104
00:06:28,210 --> 00:06:29,680
If shop open.

105
00:06:30,520 --> 00:06:35,380
If the shop is still open, then we actually got a real client from the channel.

106
00:06:36,450 --> 00:06:37,440
And what do we do next?

107
00:06:37,470 --> 00:06:44,190
Well, let's go back and look at the main logo and it says over here at the top, if a customer arrives

108
00:06:44,190 --> 00:06:46,280
while the barber is working, the customer leaves.

109
00:06:46,290 --> 00:06:47,490
If all chairs are occupied.

110
00:06:47,490 --> 00:06:48,330
I don't care about that.

111
00:06:49,280 --> 00:06:50,600
And we have it here.

112
00:06:50,630 --> 00:06:54,080
A customer must wait the barber up if he is asleep.

113
00:06:54,380 --> 00:06:56,900
Let's go back to the barber shop to go and handle that situation.

114
00:06:56,960 --> 00:06:57,740
That's pretty easy.

115
00:06:58,460 --> 00:07:03,380
If he's sleeping, if the barber is sleeping, we'll just print a message out.

116
00:07:04,160 --> 00:07:05,090
Color dot yellow.

117
00:07:07,100 --> 00:07:09,920
Percent s weeks.

118
00:07:11,840 --> 00:07:14,510
Percent s up again.

119
00:07:15,710 --> 00:07:17,200
Percent s up.

120
00:07:17,360 --> 00:07:17,810
Period.

121
00:07:17,870 --> 00:07:21,200
And my substitutions are clients, which is just a string.

122
00:07:21,230 --> 00:07:24,830
The name of the client and barber, which is the name of the barber.

123
00:07:26,270 --> 00:07:29,840
And then we set these sleeping equal to false because the barbers.

124
00:07:29,840 --> 00:07:30,350
Now, wait.

125
00:07:32,620 --> 00:07:40,600
And the next thing we have to do if the shop is open right here is cut hair.

126
00:07:40,900 --> 00:07:41,980
We're going to cut the client's hair.

127
00:07:42,010 --> 00:07:46,810
Now, I could put all that logic right in here, but I like to keep things as clean as possible.

128
00:07:47,410 --> 00:07:54,880
So let's declare another function with the receiver of Shop Shawl pointed to barber shop and we'll call

129
00:07:54,880 --> 00:07:55,900
this cut hair.

130
00:07:57,400 --> 00:07:59,830
And this will take the barber's name.

131
00:08:00,100 --> 00:08:02,290
Barber and the client's name?

132
00:08:02,500 --> 00:08:04,210
Plant, both of which are strings.

133
00:08:06,030 --> 00:08:07,110
It doesn't return anything.

134
00:08:07,530 --> 00:08:08,910
So we'll leave that one alone for a minute.

135
00:08:09,060 --> 00:08:10,110
But we'll call it here.

136
00:08:10,260 --> 00:08:14,210
So we'll say sharp cut hair.

137
00:08:14,730 --> 00:08:17,070
And we want barber and barber.

138
00:08:18,930 --> 00:08:20,160
Barber and clerk.

139
00:08:21,010 --> 00:08:21,120
Okay.

140
00:08:21,240 --> 00:08:22,830
So that will cut the person's hair.

141
00:08:23,520 --> 00:08:32,490
But the other condition on this, if shop open logic isn't else and it's simply shop is closed.

142
00:08:33,090 --> 00:08:36,120
So send the barber home

143
00:08:39,240 --> 00:08:42,390
and closed this go routine because we're done with it.

144
00:08:43,080 --> 00:08:46,470
Okay, so we'll need another function.

145
00:08:46,470 --> 00:08:49,640
I could again do it right here, but I'll shred another function down here.

146
00:08:49,650 --> 00:08:57,330
Say Funk Shop pointed to Barber Shop and we'll call this one Send Barber Home.

147
00:08:57,960 --> 00:08:58,260
Okay.

148
00:08:58,770 --> 00:09:00,120
And it'll take the barber's name.

149
00:09:00,300 --> 00:09:03,330
So we can print that information to this screen, which is a string.

150
00:09:04,980 --> 00:09:09,150
And yeah, we'll populate this one in a little bit, but for right now, we can call it up here, we'll

151
00:09:09,150 --> 00:09:09,540
say.

152
00:09:10,990 --> 00:09:11,490
Shop.

153
00:09:13,160 --> 00:09:19,240
Don't send Barbara home with the barber's name, and we need to exit this go routine.

154
00:09:19,270 --> 00:09:20,170
And we know how to do that.

155
00:09:20,230 --> 00:09:23,650
We need to get outside of this for a loop outside of this go funk.

156
00:09:23,860 --> 00:09:26,350
What we do here is you say return and we're done.

157
00:09:26,560 --> 00:09:28,840
And that clothes that go routine will actually close.

158
00:09:30,340 --> 00:09:35,110
Now, while we're at it, since it's really simple to do this, let's fill out these two functions.

159
00:09:35,110 --> 00:09:39,340
The first one is cut here and we have the receiver shop and we have the barber's name.

160
00:09:39,340 --> 00:09:41,020
So we have everything we need to know.

161
00:09:41,290 --> 00:09:44,830
All we're going to say is color dot green or whatever color you want.

162
00:09:46,000 --> 00:09:53,350
And my format string is percent s is cutting percent s apostrophe s's hair period.

163
00:09:53,830 --> 00:09:56,650
And my substitutions are barber and client.

164
00:09:57,820 --> 00:10:02,410
And then we wait for the time necessary to cut that person's hair.

165
00:10:02,440 --> 00:10:08,200
And that's just time out sleep when we have the time, the duration right in the shop receiver it's

166
00:10:08,200 --> 00:10:09,610
shop dot haircut duration.

167
00:10:10,210 --> 00:10:22,390
Okay and then we'll print out color dot green percent as is finished cutting percent se is hair and

168
00:10:22,390 --> 00:10:25,480
my substitutions again are barber and client.

169
00:10:26,440 --> 00:10:27,040
That's easy.

170
00:10:27,940 --> 00:10:30,210
And then down here, send barber home.

171
00:10:30,610 --> 00:10:32,380
That's pretty simple as well.

172
00:10:32,830 --> 00:10:36,220
Color dot not put it cyan this time just to make it stand out.

173
00:10:37,300 --> 00:10:46,990
Percent se is going home and it's just a barber sitting and then we're not quite finished because we

174
00:10:46,990 --> 00:10:48,360
need to do one more thing.

175
00:10:48,370 --> 00:10:54,820
If this barber is done for the day, that means the go routine associated with that barber is either

176
00:10:55,090 --> 00:10:57,370
gone or just about to disappear.

177
00:10:57,370 --> 00:11:01,240
So that person can't take any more clients that's no longer available.

178
00:11:02,050 --> 00:11:05,020
So we need to send a boolean to that shop.

179
00:11:05,020 --> 00:11:09,610
Dot Barbers Dunkin so shop got barbers done.

180
00:11:10,090 --> 00:11:13,780
That channel receives crew to send a boolean to it.

181
00:11:14,020 --> 00:11:16,120
Now we know that Barber has gone home.

182
00:11:16,190 --> 00:11:17,800
Okay, we've sent a value there.

183
00:11:19,330 --> 00:11:19,840
All right.

184
00:11:19,990 --> 00:11:22,000
That's quite a bit of code for this time around.

185
00:11:22,660 --> 00:11:26,260
But we now have everything we need to add a Berber.

186
00:11:26,290 --> 00:11:28,690
So let's go back to Mongo and let's add a Berber.

187
00:11:29,610 --> 00:11:34,860
So down here, after we've printed the shop is open for the day, we're going to end burgers.

188
00:11:34,980 --> 00:11:36,870
So all we need to do now is to say.

189
00:11:38,210 --> 00:11:40,020
Shop and Berber.

190
00:11:40,040 --> 00:11:40,880
And we choose a name.

191
00:11:40,940 --> 00:11:44,120
So, Frank, we add Frank to the.

192
00:11:44,810 --> 00:11:45,410
To the shop.

193
00:11:45,530 --> 00:11:45,890
Okay.

194
00:11:45,890 --> 00:11:47,390
Now we have all this other stuff to do.

195
00:11:47,660 --> 00:11:53,600
But right now, as I come down here and say, time to sleep, just to make it pause for a while, say

196
00:11:53,600 --> 00:11:55,610
five times timed out second.

197
00:11:56,360 --> 00:11:56,730
Okay.

198
00:11:57,350 --> 00:11:58,490
And I run the program.

199
00:11:58,730 --> 00:12:02,720
What do you think you're going to get as feedback, if anything?

200
00:12:03,560 --> 00:12:07,340
Now just pause the video for a moment, review the code we've written so far.

201
00:12:08,270 --> 00:12:13,580
And in a couple of seconds I'll run it and let's see if what you think comes out is actually what we

202
00:12:13,580 --> 00:12:13,880
get.

203
00:12:14,210 --> 00:12:16,460
Or we might have made mistakes, but we'll find out in a minute.

204
00:12:16,580 --> 00:12:18,980
So go run Dot.

205
00:12:19,370 --> 00:12:22,250
And I'm going to give you a couple of seconds to pause this and think about it.

206
00:12:24,460 --> 00:12:25,300
That should be long enough.

207
00:12:25,360 --> 00:12:26,830
Let's run it and see what happens.

208
00:12:33,040 --> 00:12:36,400
And I think that's exactly what should have happened.

209
00:12:36,970 --> 00:12:39,160
So there's no question he's going to print out the title.

210
00:12:39,370 --> 00:12:44,020
There was no surprise there at all because if you look up here, all we do is random, see?

211
00:12:44,410 --> 00:12:45,700
Then we print the title.

212
00:12:45,910 --> 00:12:47,740
So that's going to happen no matter what.

213
00:12:48,190 --> 00:12:50,110
But it also created these channels.

214
00:12:50,680 --> 00:12:52,450
It also created the shop.

215
00:12:52,990 --> 00:12:55,030
It also printed out this message again.

216
00:12:55,390 --> 00:12:56,680
And then it added the barber.

217
00:12:56,680 --> 00:12:59,680
Frank and Frank did exactly what he was supposed to.

218
00:12:59,710 --> 00:13:01,870
Frank went to the waiting room to check for clients.

219
00:13:02,410 --> 00:13:03,360
There's nothing to do.

220
00:13:03,370 --> 00:13:04,570
So Frank takes a nap.

221
00:13:04,930 --> 00:13:05,270
Okay.

222
00:13:05,380 --> 00:13:07,180
Easy start to his work day.

223
00:13:08,080 --> 00:13:10,870
That clearly there's some more things we have to do.

224
00:13:11,140 --> 00:13:15,790
So right here, the next one would be start the barber shop as a go routine.

225
00:13:16,120 --> 00:13:20,860
And then we're going to send clients to the barber shop so we can start on this part, starting the

226
00:13:20,860 --> 00:13:23,590
barber shop as a go routine in the next lecture.
