1
00:00:00,190 --> 00:00:04,720
Heiser trong bài giảng này tôi muốn nói về sự khác biệt giữa nghỉ ngơi và RBC.

2
00:00:04,950 --> 00:00:11,010
Vì vậy, tôi hy vọng bạn hiểu API nghỉ ngơi là gì nếu bạn không thích nhìn vào đó

3
00:00:11,010 --> 00:00:17,370
Internet sẽ chỉ là một bản tóm tắt nhanh chóng nên api đã dừng về cơ bản có một động từ có thể là

4
00:00:17,370 --> 00:00:17,990
thu được.

5
00:00:18,090 --> 00:00:24,720
Vì vậy, chúng tôi sử dụng bài đăng và chúng tôi sẽ đăng nó làm ví dụ về url url mà bạn có thể thấy và chúng tôi sẽ đăng nó lên

6
00:00:24,720 --> 00:00:26,440
địa chỉ này ngay tại đây.

7
00:00:26,580 --> 00:00:29,020
Member ở đây là số lượng thẻ thành viên.

8
00:00:29,100 --> 00:00:32,650
Và như bạn có thể thấy giao thức ở đây là 1,1 phần trăm GDP.

9
00:00:32,730 --> 00:00:38,640
Bây giờ chúng ta có thể chuyển một số tiêu đề như ủy quyền máy chủ cung cấp tên người dùng và mật khẩu cho

10
00:00:38,640 --> 00:00:45,100
loại nội dung là ứng dụng Jason và có thể một số tiêu đề chấp nhận sẽ chuyển vào dữ liệu đó

11
00:00:45,230 --> 00:00:48,060
Jason sẽ có hai trường với số lượng rạng rỡ đáng kính.

12
00:00:48,180 --> 00:00:50,070
Như bạn có thể thấy đây là văn bản thuần túy.

13
00:00:50,190 --> 00:00:53,760
Và sau đó máy chủ sau khi xử lý yêu cầu đó sẽ trả lời một cái gì đó.

14
00:00:53,760 --> 00:01:01,230
Ví dụ: HTP 1. 1 trạng thái có 2 hoặc một trạng thái được tạo sẽ cung cấp cho bạn một số tiêu đề như loại ngày

15
00:01:01,560 --> 00:01:04,310
của nội dung và vị trí nơi nó được tạo ra.

16
00:01:04,320 --> 00:01:09,540
Vì vậy, đây là một ví dụ nhanh về việc bồi dưỡng nhanh nếu một tác phẩm hoạt động như thế nào và nó hoạt động như thế nào.

17
00:01:09,570 --> 00:01:12,420
Nhưng đây là những gì bạn sẽ thấy trên internet cho STPI.

18
00:01:12,420 --> 00:01:16,570
Bây giờ chúng ta hãy quan sát sự khác biệt giữa GURPS và phần còn lại.

19
00:01:16,610 --> 00:01:22,560
RBC sẽ sử dụng bộ đệm dọc như chúng ta có thể thấy trước khi nó nhỏ hơn, nhanh hơn.

20
00:01:22,690 --> 00:01:26,630
Hãy nghỉ ngơi, chúng tôi sẽ sử dụng Jasen dựa trên văn bản không nhị phân.

21
00:01:26,670 --> 00:01:29,370
Nó ngắn hơn và nó lớn hơn.

22
00:01:29,370 --> 00:01:31,750
OK, chúng tôi đã thấy điều đó.

23
00:01:31,770 --> 00:01:37,180
Đó là một tài sản rõ ràng đối với Jarkesy ít nhất là từ góc độ truyền thông và khía cạnh hiệu suất

24
00:01:37,180 --> 00:01:40,040
sử dụng bộ đệm dọc sẽ ít dễ dàng hơn khi bắt đầu gỡ lỗi.

25
00:01:40,050 --> 00:01:47,810
Tất nhiên, bây giờ B-2 được sử dụng bởi GOPAC, có độ trễ thấp hơn nhiều như chúng ta đã thấy trong video.

26
00:01:47,880 --> 00:01:54,030
Và bạn nên tham gia và kể từ năm 2015, tôi đã lang thang trên internet, vì

27
00:01:54,040 --> 00:02:00,610
theo như tôi biết bây giờ thì nó sử dụng HP 1.1 có độ trễ cao hơn nhiều và có từ năm 1997.

28
00:02:00,720 --> 00:02:08,250
Bây giờ tắt máy chỉ cho phép các yêu cầu máy chủ của khách hàng như chúng ta đã thấy trong khi PC của bạn đã thấy

29
00:02:08,250 --> 00:02:12,240
trong bốn loại API là hai chiều, bất kỳ sự đồng bộ nào cũng được cho phép.

30
00:02:12,270 --> 00:02:19,950
Vì vậy, giờ đây bạn linh hoạt hơn nhiều với Jarkesy, phần còn lại chỉ cho phép các yêu cầu có điện thoại trong khi JPC

31
00:02:20,160 --> 00:02:28,590
vẫn còn một số tính năng phát trực tuyến nếu bạn triển khai hoàn hảo phần còn lại và nhiều người không thực hiện phần còn lại

32
00:02:28,590 --> 00:02:32,700
hoàn toàn Nghỉ ngơi các cuộc gọi API ish không resk đầy đủ API.

33
00:02:32,970 --> 00:02:38,910
Về cơ bản, phần còn lại được gọi là Crood theo định hướng Crood có nghĩa là tạo phục hồi một ngày và động từ đã xóa

34
00:02:38,910 --> 00:02:41,170
họ sẽ bị xóa bài đăng.

35
00:02:41,400 --> 00:02:43,380
Vì vậy, phần còn lại hướng tới Crood.

36
00:02:43,380 --> 00:02:49,680
Bạn sẽ có tài nguyên chẳng hạn cho người dùng và bạn nói tạo người dùng tìm nạp dữ liệu của người dùng hoặc của

37
00:02:49,680 --> 00:02:53,880
xóa một người dùng, nhưng không thực sự tập trung vào những gì đang xảy ra.

38
00:02:53,880 --> 00:03:01,230
OK, bạn chỉ xử lý các tài nguyên trong khi DRP C hướng tới những gì API của bạn không có ràng buộc.

39
00:03:01,230 --> 00:03:06,260
Đó là một thiết kế miễn phí dành cho bạn và bạn thực sự có thể tập trung vào những gì API phải làm.

40
00:03:06,270 --> 00:03:08,100
các điểm kết thúc hoàn hảo là gì.

41
00:03:08,100 --> 00:03:10,780
Các thông số hoàn hảo cho API của bạn là gì.

42
00:03:10,900 --> 00:03:14,310
OK, vì vậy phần còn lại là định hướng tài nguyên.

43
00:03:14,400 --> 00:03:16,220
Định hướng API của Hoa Kỳ tại Châu Âu.

44
00:03:16,440 --> 00:03:20,980
Và một khi bạn nhận được điều đó, có lẽ bạn sẽ nhận được tiết lộ này tất nhiên là

45
00:03:20,980 --> 00:03:24,160
sẽ chỉ cho bạn cách làm cho GAAP trở nên mạnh mẽ như vậy.

46
00:03:24,270 --> 00:03:31,410
Giờ đây, phần còn lại không có CHP hoặc có sẵn thông qua một thứ gọi là API mở hoặc Swager, cả hai đều có sẵn

47
00:03:31,410 --> 00:03:33,900
down không phải là một phần của thông số kỹ thuật.

48
00:03:34,050 --> 00:03:40,650
Vì vậy, cái được gọi là công dân hạng hai và sáng kiến ​​API mở của Swager là khá gần đây.

49
00:03:40,650 --> 00:03:47,730
Vì vậy, bạn có thể thực hiện một số CHP bằng cách sử dụng DPR Swager mở trong khi GR PC được xây dựng từ đầu và

50
00:03:47,790 --> 00:03:51,670
sử dụng bộ đệm giao thức để xác định dịch vụ và thông báo trong API.

51
00:03:51,840 --> 00:03:57,210
Do đó, thế hệ xảy ra thông qua các bộ đệm quan trọng và là công dân hạng nhất.

52
00:03:57,390 --> 00:04:05,070
Bạn không thể sử dụng PC mà không thực hiện CHP, điều này tự nó làm cho PC của bạn siêu an toàn.

53
00:04:05,070 --> 00:04:08,170
Vì vậy, đó là một sự khác biệt rất, rất quan trọng.

54
00:04:08,220 --> 00:04:14,130
Phần còn lại cuối cùng sẽ dựa trên HTB burb, vì vậy bạn sẽ phải đọc hệ thống ống nước hoặc sử dụng thư viện của bên thứ ba

55
00:04:14,130 --> 00:04:17,760
xung quanh bài viết, chèn xóa, v.v.

56
00:04:17,940 --> 00:04:21,180
Trong khi G hay PC đều dựa trên PC.

57
00:04:21,180 --> 00:04:25,070
Điều này có nghĩa là chúng ta có thể gọi các chức năng trực tiếp trên máy chủ.

58
00:04:25,090 --> 00:04:32,490
Ok, như chúng ta đã thấy trước đây, khách hàng của bạn về cơ bản gọi một chức năng trên máy chủ và PC của bạn thực hiện tất cả

59
00:04:32,490 --> 00:04:38,940
hệ thống ống nước cho chúng tôi, vì vậy có một tiêu chuẩn hiện tại tuyệt vời tuyệt vời đã được thực hiện bởi anh chàng này

60
00:04:39,270 --> 00:04:44,460
địa chỉ và bạn chỉ có thể nhìn vào nó nhưng nó nằm trên một mốc và tìm hiểu

61
00:04:44,460 --> 00:04:49,230
cùng một API mà GOPAC sẽ có hiệu suất gấp 25 lần so với phần còn lại.

62
00:04:49,230 --> 00:04:55,440
API và hiệu suất được định nghĩa là thời gian cần thiết để nhận được phản hồi cho API.

63
00:04:55,710 --> 00:05:00,510
Và tất cả là do những khác biệt này và tất cả những cải tiến công nghệ này.

64
00:05:00,510 --> 00:05:05,820
Vì vậy, về tổng thể, nếu bạn đang tìm kiếm một API có khả năng mở rộng hiệu suất cao, GRB sẽ là một

65
00:05:05,820 --> 00:05:06,920
rằng bạn không bắt giữ.

66
00:05:07,110 --> 00:05:08,760
Tôi thực sự hy vọng nó sẽ giúp.

67
00:05:08,880 --> 00:05:10,100
Hẹn gặp lại các bạn trong bài học tiếp theo.