1
00:00:00,510 --> 00:00:04,650
OK, finalmente implementeremo una lista solo per divertimento perché faremo dello streaming.

2
00:00:04,980 --> 00:00:12,210
Quindi questo avrà una lista Blug PC che prende una lista LUGG richiede un argomento e restituirà un

3
00:00:12,210 --> 00:00:13,620
flusso di lista.

4
00:00:13,620 --> 00:00:15,610
Risposta blug.

5
00:00:15,690 --> 00:00:19,900
OK, questo è piuttosto bello perché useremo un po 'di streaming solo per divertimento.

6
00:00:20,400 --> 00:00:24,650
Ora includeremo un messaggio e la richiesta del blog sarà in realtà vuota.

7
00:00:24,690 --> 00:00:28,800
Non abbiamo bisogno di passare nulla di negativo passando i filtri che potremmo eventualmente estendere

8
00:00:28,800 --> 00:00:29,510
a filtri.

9
00:00:29,610 --> 00:00:32,050
Ma per ora avremo solo una richiesta vuota.

10
00:00:32,220 --> 00:00:34,970
E poi in termini di ciò che la risposta conterrà.

11
00:00:35,130 --> 00:00:38,730
Beh, il conto potrebbe contenere un blog e solo uno dei suoi.

12
00:00:38,940 --> 00:00:44,160
E il motivo per cui lo facciamo è che OK otterremo un flusso di Blug. Ecco come otteniamo e riceviamo un

13
00:00:44,250 --> 00:00:46,580
elenco completo di blog che utilizzano lo streaming.

14
00:00:46,860 --> 00:00:50,680
Quindi sarà una buona pratica anche la revisione del servizio di streaming.

15
00:00:50,760 --> 00:00:56,100
Così innamorato P. B. andremo avanti e genereremo del codice, quindi ci stiamo abituando.

16
00:00:56,100 --> 00:01:01,070
Qui viene generato e ora l'implementazione e la sua implementazione saranno un po 'più complicate

17
00:01:01,110 --> 00:01:02,210
ma non troppo.

18
00:01:02,420 --> 00:01:02,930
Va bene.

19
00:01:03,090 --> 00:01:08,030
Quindi prima dobbiamo trovare la firma corretta della funzione per implementare l'ultima volta.

20
00:01:08,040 --> 00:01:13,170
Quindi andremo a dare un'occhiata alla lista Blug e ad implementarla.

21
00:01:13,550 --> 00:01:14,320
Va bene.

22
00:01:14,340 --> 00:01:22,440
Quindi implementeremo una funzione e questa funzione è sul mio server e questo è chiamato Elenco blog.

23
00:01:22,810 --> 00:01:28,620
E dovrei postare questo adesso perché questo è il servizio che elimina questa cosa è un po 'diverso.

24
00:01:28,630 --> 00:01:32,250
Abbiamo un elenco di servizi Blug qui.

25
00:01:32,290 --> 00:01:35,100
Quindi questo è il nostro stream che useremo.

26
00:01:35,110 --> 00:01:41,860
E qui questa è la nostra richiesta quindi diremo la richiesta e dal modo in cui dobbiamo implementare il sangue P. B. e anche copiarlo nel

27
00:01:41,860 --> 00:01:44,050
nostro stream.

28
00:01:44,180 --> 00:01:44,820
OK.

29
00:01:44,860 --> 00:01:47,400
Quindi ora stiamo bene e possiamo implementare la nostra funzione.

30
00:01:47,860 --> 00:01:52,300
Quindi per implementare la lista Blug sarà un po 'più complicato perché ora dobbiamo usare cursori e cose del

31
00:01:52,300 --> 00:01:52,720
genere.

32
00:01:52,720 --> 00:01:54,600
Diamo un'occhiata a come possiamo farlo.

33
00:01:54,880 --> 00:02:01,080
Quindi quello che facciamo è che dovremo usare la collezione e faremo una ricerca.

34
00:02:01,090 --> 00:02:04,240
Quindi questo non è una scoperta come abbiamo fatto prima.

35
00:02:04,270 --> 00:02:09,970
Possiamo fare una ricerca e trovarla ci fornisce un contesto un filtro e alcune opzioni.

36
00:02:10,000 --> 00:02:15,610
Ora, appena prima di farlo, stampiamo una riga e diciamo che siamo nell'elenco Elenco richieste Blug. Richiesta

37
00:02:15,610 --> 00:02:16,040
Blug.

38
00:02:16,110 --> 00:02:17,070
Ok, eccellente

39
00:02:17,500 --> 00:02:22,750
Quindi questo trova che ha bisogno di un contesto che conosciamo già da prima, quindi è lo sfondo del contesto

40
00:02:22,750 --> 00:02:28,390
e quindi è un filtro perché vogliamo solo ottenere tutti i bug nel nostro database e quindi tra i database ci basteranno, quindi

41
00:02:28,990 --> 00:02:30,570
fondamentalmente non forniremo il filtro .

42
00:02:30,580 --> 00:02:34,250
Quindi mi limiterò a fornire una e-mail e quindi non forniremo alcuna opzione.

43
00:02:34,540 --> 00:02:39,870
Quindi questa è una scoperta speciale perché troverà ogni singolo blog nel nostro database.

44
00:02:39,880 --> 00:02:44,740
Ora la cosa interessante è che questo restituisce qualcosa chiamato un cursore e un errore.

45
00:02:44,860 --> 00:02:46,280
Quindi daremo un'occhiata uno per uno.

46
00:02:46,300 --> 00:02:48,850
Queste cose saranno solo un cursore.

47
00:02:49,480 --> 00:02:55,460
E poi e lì ora se c'è un errore questo è molto probabilmente un errore interno.

48
00:02:55,460 --> 00:03:06,610
Quindi copieremo questo bug e dirò un errore interno sconosciuto perché non possiamo elencare le cose per qualche motivo,

49
00:03:06,610 --> 00:03:14,660
nel qual caso restituiremo questo e questo se ovviamente l'aria è nulla.

50
00:03:14,990 --> 00:03:18,690
Inserirò questo e ha senso.

51
00:03:18,860 --> 00:03:24,720
Ora l'aria non è nuova e questo non è felice perché non torniamo, non è chiaramente il tuo Nerium

52
00:03:24,720 --> 00:03:25,050
sbagliato.

53
00:03:25,080 --> 00:03:26,520
Dobbiamo solo restituire un'aria.

54
00:03:26,820 --> 00:03:31,240
Quindi rimuoveremo l'unghia qui e restituiremo il codice di errore.

55
00:03:31,740 --> 00:03:32,050
OK.

56
00:03:32,050 --> 00:03:33,460
E poi abbiamo un cursore.

57
00:03:33,550 --> 00:03:36,510
E quindi quello che dobbiamo fare è chiudere quel cursore alla fine.

58
00:03:36,720 --> 00:03:40,310
Quindi useremo la parola chiave per dire OK, alla fine la chiuderemo.

59
00:03:40,530 --> 00:03:46,920
Quindi faremo il cursory così vicino e useremo il diagramma di contesto per chiamarlo così quando questa

60
00:03:47,400 --> 00:03:50,160
funzione termina il cursore verrà automaticamente chiuso.

61
00:03:50,160 --> 00:03:55,420
Ora dobbiamo sostanzialmente scorrere su questo cursore, fondamentalmente trovare tutti gli elementi che abbiamo.

62
00:03:55,470 --> 00:04:00,150
Quindi diciamo per il cursore il prossimo contesto sullo sfondo.

63
00:04:00,240 --> 00:04:06,750
Quindi per ogni volta che abbiamo un nuovo elemento che troviamo e questo è un caso perfetto per il taglio allora

64
00:04:06,750 --> 00:04:08,730
siamo andati devi decodificare i dati.

65
00:04:08,730 --> 00:04:14,130
Quindi, proprio come prima, quando stavamo decodificando, iniziammo una struttura vuota.

66
00:04:14,130 --> 00:04:19,460
Quindi inseriremo nuovamente una struttura vuota e poi avremo la possibilità di chiamare la funzione de-code.

67
00:04:19,920 --> 00:04:22,680
Quindi iniziamo la nostra struttura vuota.

68
00:04:22,770 --> 00:04:23,400
OK.

69
00:04:23,670 --> 00:04:29,410
E poi abbiamo fatto il cursore del de-code e lo passeremo nei dati.

70
00:04:29,700 --> 00:04:36,180
Quindi in pratica stiamo dicendo ok ogni volta che possiamo vederlo in esperimenti, prendere alcuni dati e inizializzarlo

71
00:04:36,180 --> 00:04:42,370
come uno Strutt vuoto e quindi posizionare il cursore sui dati del cursore nei nostri oggetti dati.

72
00:04:42,390 --> 00:04:45,440
Ora ovviamente questo può restituire un errore come abbiamo visto prima.

73
00:04:45,750 --> 00:04:49,580
Quindi diremo OK se c'è un errore qui cosa facciamo.

74
00:04:49,800 --> 00:04:55,680
Bene, se l'errore non è no, è ovviamente qualcosa di molto sbagliato, nel qual

75
00:04:55,680 --> 00:04:58,770
caso diremo lo stato di ritorno.

76
00:04:58,770 --> 00:05:00,520
Quella è aria.

77
00:05:00,560 --> 00:05:03,350
Se e questo è probabilmente un errore interno di nuovo.

78
00:05:03,570 --> 00:05:09,030
Quindi diremo che il codice sarà interno e quindi non sappiamo davvero cosa sia successo,

79
00:05:09,030 --> 00:05:14,650
ma fondamentalmente questo è come un errore di decodifica, quindi diremo f anti-cuts Sprint f air.

80
00:05:14,700 --> 00:05:19,600
Buona decodifica dei dati da TV non buona.

81
00:05:20,130 --> 00:05:25,420
E poi, ovviamente, esploderemo nell'aria solo nel caso in cui non sappiamo cosa sta succedendo.

82
00:05:25,490 --> 00:05:28,590
Aiutaci a prendere l'aria e abbiamo finito.

83
00:05:28,920 --> 00:05:29,440
OK.

84
00:05:29,640 --> 00:05:34,130
Quindi questo è ciò che stiamo per tornare e avere i tuoi vestiti i miei genitori è eccellente.

85
00:05:34,170 --> 00:05:36,260
Ora l'aria non è nulla.

86
00:05:36,300 --> 00:05:42,000
Quello che dobbiamo fare è inviare i dati ai nostri clienti.

87
00:05:42,000 --> 00:05:45,940
Quindi questo dirà OK l'aria non è nuova.

88
00:05:46,110 --> 00:05:47,200
Quindi cosa farò.

89
00:05:47,250 --> 00:05:50,670
Devo dire stream che manda.

90
00:05:50,670 --> 00:05:52,920
E poi dobbiamo creare una lista di sangue.

91
00:05:52,920 --> 00:06:00,180
La risposta di Blug che creerò in questo momento risulta che dobbiamo passare un plug-in su questo e abbiamo

92
00:06:00,180 --> 00:06:01,080
alcuni dati.

93
00:06:01,200 --> 00:06:05,650
Per fortuna abbiamo un dato per scrivere sul blog la funzione PV che è pronta per noi.

94
00:06:05,670 --> 00:06:08,760
Quindi, qui andiamo, abbiamo appena inviato un flusso piuttosto interessante.

95
00:06:08,790 --> 00:06:11,960
Ora tutte queste funzioni entrano in campo e vengono davvero per aiutarci.

96
00:06:12,230 --> 00:06:13,000
OK.

97
00:06:13,440 --> 00:06:18,560
Alla fine, quando tutto il cursore è prossimo, forse avrai un errore.

98
00:06:18,750 --> 00:06:23,050
Quindi dovrà affrontare ogni caso in cui va bene se c'è un errore.

99
00:06:23,060 --> 00:06:28,370
E questo viene dalla documentazione e l'errore non è Neil, quindi possiamo verificare se c'è

100
00:06:28,370 --> 00:06:32,930
un errore in meno, quindi questo è probabilmente ancora un errore sconosciuto.

101
00:06:33,050 --> 00:06:37,840
Quindi diremo di restituire un tipo di errore interno sconosciuto.

102
00:06:38,300 --> 00:06:39,550
E poi se siamo felici.

103
00:06:39,550 --> 00:06:44,300
Quindi se non ci sono errori alla fine e abbiamo inviato tutto come stream, ritorneranno

104
00:06:44,300 --> 00:06:48,840
nulli dicendo che non ci sono errori e che chiuderà il flusso al client.

105
00:06:49,280 --> 00:06:54,700
Quindi è un po 'più complicato qui, ma è piuttosto interessante perché ora vediamo l'uso dei cursori

106
00:06:55,130 --> 00:06:59,820
dalla TV e che possiamo come iterare sul cursore per la prossima funzione.

107
00:06:59,960 --> 00:07:04,580
E poi usare lo stream per inviare dati come server sta tagliando qualcosa che è un caso d'uso

108
00:07:04,580 --> 00:07:08,740
interessante per mostrare che lo streaming può essere utile quando si ha un database sul back-end.

109
00:07:08,810 --> 00:07:09,830
Quindi è tutto per il server.

110
00:07:09,830 --> 00:07:14,320
Vediamo se possiamo semplicemente pranzare, andiamo e lanciamolo.

111
00:07:14,500 --> 00:07:15,280
Sì funziona.

112
00:07:15,330 --> 00:07:19,610
Ora dovremo solo implementare i client per vedere se il codice di de-list funziona con SOSINA alla prossima lezione.

