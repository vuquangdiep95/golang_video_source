1
00:00:00,110 --> 00:00:05,550
OK jadi mari kita lanjutkan dengan streaming dua arah dengan klien dan kami akan pergi dan Anda akan

2
00:00:05,550 --> 00:00:07,460
melihat diuji dengan baik terhadap server.

3
00:00:07,500 --> 00:00:12,180
Tetapi satu hal ini adalah bahwa sekarang kita akan menggunakan rutinitas yang baik hanya untuk menunjukkan bagaimana kita

4
00:00:12,180 --> 00:00:15,190
dapat melakukan hal-hal secara paralel termasuk mengirim dan menerima secara paralel.

5
00:00:15,450 --> 00:00:20,280
Jadi akan sangat keren sedikit lebih rumit karena sekarang ada beberapa rutinitas baik yang berjalan secara

6
00:00:20,280 --> 00:00:20,770
paralel.

7
00:00:20,850 --> 00:00:22,980
Tetapi jika Anda tidak pergi harus ada.

8
00:00:23,190 --> 00:00:24,540
Kami akan menggunakan saluran juga.

9
00:00:24,540 --> 00:00:28,450
Jadi ini sedikit konsep lanjutan tetapi secara keseluruhan cukup mudah dibaca.

10
00:00:28,470 --> 00:00:30,460
Jadi mari kita lanjutkan dan coba itu.

11
00:00:31,130 --> 00:00:31,510
BAIK.

12
00:00:31,530 --> 00:00:34,900
Jadi mari kita lanjutkan dan buka klien yang menyambut.

13
00:00:35,250 --> 00:00:41,450
Dan klien Yunani sekarang akan melakukan dengan streaming streaming dua arah.

14
00:00:41,460 --> 00:00:43,520
Jadi mari kita lanjutkan dan buat fungsi itu.

15
00:00:43,530 --> 00:00:50,920
Jadi saya hanya akan menyalin garis ini di sini dan kami akan mengatakan pergi lakukan byde streaming,

16
00:00:53,900 --> 00:00:54,420
OK.

17
00:00:54,620 --> 00:00:59,170
Jadi satu hal yang harus saya lakukan adalah pada dasarnya ada dua hal yang benar.

18
00:00:59,240 --> 00:01:06,420
Jadi kami membuat aliran dengan memanggil klien dengan benar.

19
00:01:06,500 --> 00:01:14,870
Kemudian kami mengirim banyak pesan ke klien dan kami bisa melakukannya sendiri secara rutin.

20
00:01:15,590 --> 00:01:25,270
Dan kemudian kita juga bisa mengirim banyak menerima banyak pesan dari klien.

21
00:01:25,480 --> 00:01:28,000
Dan itu merupakan rutinitas terpisah.

22
00:01:28,000 --> 00:01:33,180
Dan pada dasarnya kami ingin memblokir sampai semuanya selesai.

23
00:01:33,250 --> 00:01:35,880
Jadi itulah kode semu dari apa yang kami coba lakukan.

24
00:01:35,920 --> 00:01:37,610
Jadi mari kita pergi satu per satu.

25
00:01:37,920 --> 00:01:43,810
Jika kita melihat titik, kita memiliki salam kepada semua orang dan itu adalah streaming kita di sini

26
00:01:43,810 --> 00:01:49,120
dalam konteks kita akan menjadi latar belakang dan opsi tidak ada artinya untuk saat ini.

27
00:01:49,330 --> 00:01:52,380
Ini akan mengembalikan aliran dan kesalahan.

28
00:01:52,900 --> 00:01:54,310
Jadi mari kita lanjutkan dengan ini.

29
00:01:54,670 --> 00:01:59,760
Dan seperti biasa jika udaranya tidak sama dengan nol maka kita tidak senang.

30
00:01:59,950 --> 00:02:09,460
Senang bahwa udara federal sambil menciptakan aliran dan akan berlalu di udara.

31
00:02:12,620 --> 00:02:14,390
Dan mereka akan kembali.

32
00:02:14,390 --> 00:02:17,030
Kalau tidak, alirannya benar.

33
00:02:17,030 --> 00:02:24,740
Jadi sekarang kita dapat mengirim banyak pesan ke klien sehingga untuk melakukan ini kita dapat melakukan fungsi go dan kita akan mendefinisikan fungsi

34
00:02:24,740 --> 00:02:27,470
itu dan kemudian kita akan memanggil fungsi itu.

35
00:02:27,470 --> 00:02:31,330
Jadi itulah formatnya di sini.

36
00:02:31,570 --> 00:02:36,930
Jadi di sini kita katakan fungsi untuk mengirim banyak pesan.

37
00:02:37,130 --> 00:02:37,650
Baik.

38
00:02:37,790 --> 00:02:44,420
Dan kemudian kita akan menerima banyak pesan sehingga kita juga harus pergi ke sini dan yang ini adalah

39
00:02:44,420 --> 00:02:49,020
untuk menerima banyak pesan dan kemudian kita harus memblokir sampai semuanya selesai.

40
00:02:49,040 --> 00:02:55,840
Jadi cara Anda memblokir adalah memiliki trik kecil yang merupakan saluran tunggu sehingga kami dapat melakukan saluran apa.

41
00:02:56,140 --> 00:02:57,140
BAIK.

42
00:02:57,380 --> 00:03:04,240
Dan kami akan mengatakan bahwa kami membuat saluran struct dan destructs.

43
00:03:04,440 --> 00:03:08,510
Jadi ini pada dasarnya mengatakan bahwa kita memiliki saluran sehingga kita dapat menggunakan ini kita akan pergi rutinitas.

44
00:03:08,580 --> 00:03:09,310
BAIK.

45
00:03:09,690 --> 00:03:12,210
Dan itu terdiri dari truk sehingga tidak benar-benar mengambil data apa pun.

46
00:03:12,480 --> 00:03:19,110
Tapi sekarang kita pada dasarnya dapat memblokirnya sehingga untuk memblokirnya pada akhirnya akan mengatakan tunggu, dan pada dasarnya

47
00:03:19,110 --> 00:03:21,270
kita akan menunggu saluran ditutup.

48
00:03:21,450 --> 00:03:22,210
BAIK.

49
00:03:22,530 --> 00:03:27,020
Jadi mari kita lanjutkan dan jalankan fungsi pertama untuk mengirim banyak pesan.

50
00:03:27,030 --> 00:03:29,110
Jadi untuk ini kita perlu membuat beberapa data.

51
00:03:29,130 --> 00:03:35,100
Jadi salin saja permintaan di sini kami sudah memiliki banyak permintaan.

52
00:03:35,100 --> 00:03:39,420
Jadi saya akan melanjutkan dan menyalin ini di sini supaya terlihat bagus

53
00:03:42,820 --> 00:03:47,230
dan kemudian kita akan berurusan dengan permintaan ini sehingga kita harus mengirim setiap permintaan.

54
00:03:47,230 --> 00:03:48,520
Jadi

55
00:03:50,970 --> 00:03:57,730
kita akan mengatakan misalnya untuk permintaan dalam berbagai permintaan.

56
00:03:58,370 --> 00:03:59,190
Apa yang akan kita lakukan.

57
00:03:59,180 --> 00:04:04,900
Kami akan mengirim permintaan ini sehingga kami dapat mengatakan streaming yang mengirim.

58
00:04:05,450 --> 00:04:09,300
Dan kemudian ketika Anda mengirim permintaan, OK.

59
00:04:09,740 --> 00:04:13,570
Ini terlihat cukup bagus meskipun jenis permintaannya salah.

60
00:04:13,880 --> 00:04:14,800
Itu tidak lagi dibaca.

61
00:04:14,810 --> 00:04:15,200
Kita punya.

62
00:04:15,200 --> 00:04:22,230
Kita perlu saya menyapa semua orang jadi saya hanya perlu mengubah nama semuanya menyambut semua orang, jadi izinkan

63
00:04:22,230 --> 00:04:28,400
saya untuk mengganti nama di sini semuanya dan itulah keindahan perjalanan adalah bahwa ada typesafe.

64
00:04:28,430 --> 00:04:32,180
Jadi, jika kita memiliki jenis pesan yang salah, kita ingin menerimanya dengan jelas.

65
00:04:32,200 --> 00:04:42,450
Jadi kami memiliki permintaan dan sekarang kami mengirim masing-masing dari mereka dan mungkin kami akan tidur sekitar satu detik milidetik.

66
00:04:42,620 --> 00:04:43,650
Kedengarannya benar.

67
00:04:45,010 --> 00:04:46,000
Dan itu keren.

68
00:04:46,000 --> 00:04:55,030
Jadi di sini saya akan mengatakan kita dapat mencetak sesuatu misalnya di layar kita dapat mengatakan mengirim pesan dan kemudian kita hanya

69
00:04:55,990 --> 00:05:00,700
akan meneruskan dan pesan kita mengirim permintaan dan kemudian kita tidur

70
00:05:03,990 --> 00:05:05,130
satu detik.

71
00:05:05,130 --> 00:05:08,190
Jadi ini akan berjalan dalam rutinitasnya sendiri.

72
00:05:08,280 --> 00:05:08,880
BAIK.

73
00:05:09,120 --> 00:05:16,030
Dan pada dasarnya ketika kita selesai dengan ini ketika kita melakukan karena semua yang kita bisa lakukan mengirim pakaian.

74
00:05:16,290 --> 00:05:19,340
Dan itu pada dasarnya berarti bahwa kita sudah selesai mengirimkan barang ke sungai.

75
00:05:19,410 --> 00:05:26,010
Jadi kami mengirim lima pesan dan ketika kami selesai dekat dan itu saja untuk rutinitas ini.

76
00:05:26,100 --> 00:05:29,910
Anda tidak harus menempatkan ini dalam rutinitas yang baik tetapi saya merasa jauh lebih menyenangkan untuk

77
00:05:29,910 --> 00:05:34,550
harus pergi yang berjalan dan berjalan pada saat yang sama karena itu benar-benar menunjukkan bagaimana hal-hal dapat terjadi secara paralel.

78
00:05:34,560 --> 00:05:40,090
Sekarang kita harus menerima banyak pesan dan mari kita lanjutkan dan menulis fungsi ini.

79
00:05:40,410 --> 00:05:45,510
Jadi pada dasarnya jika Anda telah mengikuti, kami telah melakukan setiap kali kami

80
00:05:45,540 --> 00:05:51,210
menerima aliran ada fungsi terima di fungsi terima mengembalikan respons semua orang menyambut dan kesalahan.

81
00:05:51,210 --> 00:05:53,030
Jadi mari kita lanjutkan dan terima ini.

82
00:05:53,040 --> 00:05:56,720
Jadi kami akan menerima respons udara.

83
00:05:56,820 --> 00:05:58,480
Jadi kalau ada kesalahan.

84
00:05:58,890 --> 00:06:04,650
Nah jika udaranya tidak sama dengan nihil maka itu tidak baik.

85
00:06:04,650 --> 00:06:16,380
Jadi itu hanya akan mencatat kesalahan ini saat menerima dan kami hanya akan lulus di udara dan sebenarnya kasus yang Anda tangani sebelumnya adalah bahwa

86
00:06:16,380 --> 00:06:22,540
jika udara adalah akhir dari kesalahan file maka yang kita inginkan adalah akhir

87
00:06:22,540 --> 00:06:26,940
dari aliran yang kita dapat menutup saluran tunggu.

88
00:06:26,950 --> 00:06:29,110
Jadi ini adalah fungsi keluar kami untuk saluran basah ini.

89
00:06:29,140 --> 00:06:35,170
Pada dasarnya ketika kita mencapai ujung aliran dari server maka kita menutup saluran dan dengan

90
00:06:35,170 --> 00:06:38,460
menutup saluran ini akan membuka blokir semuanya.

91
00:06:38,470 --> 00:06:39,750
Jadi ini terlihat bagus.

92
00:06:40,270 --> 00:06:44,740
Dan sekarang setiap kali kita mendapatkan hasil apa yang bisa

93
00:06:44,740 --> 00:06:58,510
kita lakukan banyak hal dengan hasil kita tetapi mari kita cetak saja sehingga kita dapat mengatakan jika anti-pemotongan mencetak dan kita dapat mengatakan menerima diterima dan saya hanya akan mencetak apa

94
00:06:58,510 --> 00:07:01,870
yang kita terima yang merupakan hasilnya sendiri.

95
00:07:01,930 --> 00:07:03,570
Sehingga terlihat benar dan kita bisa melakukannya.

96
00:07:03,580 --> 00:07:04,690
Dapatkan hasil.

97
00:07:05,170 --> 00:07:06,000
Baik.

98
00:07:06,010 --> 00:07:09,500
Dan bahkan di sini Anda juga bisa menutup saluran di sini.

99
00:07:09,550 --> 00:07:15,130
Ketika jika Anda mendapatkan kesalahan misalnya bisa jadi itu bisa menjadi sesuatu yang ingin Anda lakukan.

100
00:07:15,190 --> 00:07:17,200
Jadi hanya beberapa opsi untuk Anda.

101
00:07:17,770 --> 00:07:19,210
Oke jadi ini semua terlihat bagus.

102
00:07:19,210 --> 00:07:24,400
Jadi pada dasarnya kami memiliki dua fungsi satu mengirim data dalam satu menerima dan mencetak data dan mereka semua

103
00:07:24,400 --> 00:07:26,300
berjalan secara paralel satu sama lain.

104
00:07:26,470 --> 00:07:34,450
Dan kemudian ketika selesai saat itu kita akan memiliki penutupan dan ketika ditutup dilakukan maka berat itu

105
00:07:34,450 --> 00:07:35,930
sendiri akan ditutup.

106
00:07:35,950 --> 00:07:40,730
Jadi sepertinya sekarang kita harus mengujinya hanya untuk memastikan saya tidak melakukan kesalahan.

107
00:07:40,780 --> 00:07:43,430
Jadi ini bagian yang berbeda.

108
00:07:43,510 --> 00:07:48,820
Jadi mari kita lanjutkan dan jalankan server grete sehingga kita dapat melanjutkan dan menjalankan server sehingga

109
00:07:48,880 --> 00:07:53,920
klien menyesal sehingga kita bisa menjalankan klien hebat dan mari kita lihat apakah itu berhasil.

110
00:07:53,920 --> 00:07:55,900
Jadi sepertinya itu berfungsi.

111
00:07:56,140 --> 00:07:57,430
Sebenarnya itu tidak berfungsi.

112
00:07:57,430 --> 00:07:57,930
Jadi ayo.

113
00:07:58,030 --> 00:07:59,420
Ini sebenarnya sangat menarik.

114
00:07:59,440 --> 00:08:00,900
Jadi apa yang terjadi dengan benar.

115
00:08:00,940 --> 00:08:08,350
Kami memiliki klien yang menjalankannya dan mengirimkan pesan pertama Stefan dan kemudian menggunakan Helo define kemudian mengirimkan pesan kedua John

116
00:08:08,920 --> 00:08:14,500
tetapi tidak menerima apa pun saat itu mengirim pesan keempat keempat keempat dan kelima

117
00:08:14,500 --> 00:08:17,740
dan tidak menerima pesan apa pun pesan kembali.

118
00:08:17,740 --> 00:08:18,900
Dan sekarang hanya macet.

119
00:08:18,910 --> 00:08:19,900
Klien saya

120
00:08:20,080 --> 00:08:24,450
Jadi tebakan saya adalah saya melewatkan loop tetapi mari kita periksa.

121
00:08:24,730 --> 00:08:25,580
Jadi mari kita lihat.

122
00:08:25,630 --> 00:08:29,480
Dan di sini, di tengah, ini bekerja dengan baik sehingga bagus.

123
00:08:30,260 --> 00:08:35,830
Tapi ya di sisi penerima di sini pada fungsi Rissi baik saya belum melakukan hal-hal dengan benar.

124
00:08:35,910 --> 00:08:39,250
Saya perlu Anda memiliki for loop dari ini jelas.

125
00:08:39,650 --> 00:08:43,000
Jadi saya hanya akan memiliki for loop di sini.

126
00:08:43,780 --> 00:08:44,900
Kedengarannya bagus.

127
00:08:44,920 --> 00:08:52,000
Sekarang pakaian yang saya dapat benar-benar meletakkannya di luar for for loop di sini saya hanya bisa mematahkannya break for a loop

128
00:08:52,000 --> 00:08:54,990
dan di sini saya dapat mematahkan for a loop.

129
00:08:55,060 --> 00:09:01,960
Jadi dengan memiliki 4 saya akan memaksa pelatih saya untuk membaca lebih dari membaca lebih dari satu pesan lebih dari satu yang persis

130
00:09:01,960 --> 00:09:03,310
apa yang saya inginkan.

131
00:09:03,370 --> 00:09:07,870
Dan juga setiap kali kami mengirim diterima, saya ingin memiliki saluran baru.

132
00:09:07,870 --> 00:09:09,960
Jadi ini kedengarannya akan bekerja lebih baik.

133
00:09:10,060 --> 00:09:12,230
Mari kita mulai lagi.

134
00:09:12,340 --> 00:09:15,840
Jadi mari kita berhenti dan menjalankan klien lagi.

135
00:09:16,660 --> 00:09:19,520
Dan sekarang dikatakan bahwa itu bekerja dengan sempurna.

136
00:09:19,520 --> 00:09:20,740
Jadi mari kita lihat.

137
00:09:20,810 --> 00:09:22,730
Dikatakan mengirim pesan.

138
00:09:22,750 --> 00:09:27,290
Salam Stefan dan menerima bantuan mendefinisikan Stefan mengirim pesan menyapa John dan menerima.

139
00:09:27,290 --> 00:09:28,200
Halo John.

140
00:09:28,230 --> 00:09:34,310
Dan ini adalah streaming dua arah dan Anda dapat mengirim sebanyak yang Anda inginkan dan

141
00:09:34,310 --> 00:09:35,710
menerimanya secepat mungkin.

142
00:09:35,720 --> 00:09:38,210
Ini benar-benar kekuatan streaming dua arah.

143
00:09:38,540 --> 00:09:40,550
Jadi itu bekerja dengan sangat baik.

144
00:09:40,580 --> 00:09:46,520
Apa yang saya benar-benar ingin Anda tunjukkan adalah bahwa sekarang Anda dapat menggunakan fungsi go untuk memanggil hal-hal secara paralel pada kode

145
00:09:46,520 --> 00:09:48,310
Anda dan itu benar-benar luar biasa.

146
00:09:48,680 --> 00:09:50,030
Jadi saya harap itu membantu.

147
00:09:50,030 --> 00:09:53,300
Harapan itu masuk akal dan harap Anda melihat kesalahan sebelum saya melihatnya.

148
00:09:53,330 --> 00:09:56,720
Saya yakin Anda melakukannya dan kami akan melihat Anda di kuliah berikutnya setelah latihan Anda.

