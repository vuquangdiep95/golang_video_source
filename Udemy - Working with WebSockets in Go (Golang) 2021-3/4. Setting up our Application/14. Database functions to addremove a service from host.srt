1
00:00:01,010 --> 00:00:06,800
OK, so now we need to write some database functions that will update the status of a hosted service

2
00:00:06,800 --> 00:00:09,080
for a given service for a given host.

3
00:00:09,470 --> 00:00:16,520
So let's go back to our ID and let's look at this handler, which is right over here, under handlers,

4
00:00:18,110 --> 00:00:19,190
under handlers.

5
00:00:19,220 --> 00:00:22,610
The very last one in my code, I put it at the bottom of the page.

6
00:00:22,610 --> 00:00:27,020
But the the function is called toggle service for host.

7
00:00:27,230 --> 00:00:30,370
And at this point, we have three pieces of information.

8
00:00:30,380 --> 00:00:37,220
We have the host I.D., the service ID and the active what we want to set active to for the given entry

9
00:00:37,220 --> 00:00:37,970
in the database.

10
00:00:38,420 --> 00:00:43,340
And if we look at the database over here, this is the host services table.

11
00:00:43,340 --> 00:00:48,740
We have all these fields, so we're going to be looking it up by host IDs and service ID because we

12
00:00:48,740 --> 00:00:53,390
don't actually have the ID of this record at this point in our request lifecycle.

13
00:00:53,420 --> 00:00:58,670
What we can look it up by host I.D. and service I.D. because there will only be one entry with a given

14
00:00:58,670 --> 00:01:01,960
service ID for a given host ID in this table.

15
00:01:02,180 --> 00:01:03,440
So that's how we're going to look it up.

16
00:01:03,710 --> 00:01:07,330
And what we want to change is this value active.

17
00:01:07,880 --> 00:01:12,440
So let's go back to our host, PostgreSQL.

18
00:01:12,980 --> 00:01:19,460
And at the very bottom, I'll define a new function func and it will be of like I used M for the receiver.

19
00:01:19,460 --> 00:01:30,440
Yeah, M is a postgrads DB repo and I'll call this toggle service and I'll just call it update host

20
00:01:30,620 --> 00:01:32,240
service status.

21
00:01:33,630 --> 00:01:40,080
And I'm going to take and host it and I'm going to take a service indeed and I'm going to take active,

22
00:01:40,080 --> 00:01:46,220
all of which will be events and I'll return potentially an error or nil if there's no error.

23
00:01:46,980 --> 00:01:54,690
And as I always do, I'll get the context bit and I'll paste it in here and then I'll write my statement.

24
00:01:57,600 --> 00:02:08,760
So I'm going to update host services set active equal to dollar sign one where host ID equals dollar

25
00:02:08,760 --> 00:02:12,770
sign to and service ID equals dollar sign three.

26
00:02:13,020 --> 00:02:15,840
And that's all I have to do for the query.

27
00:02:15,960 --> 00:02:17,320
I need to execute the query.

28
00:02:17,580 --> 00:02:25,680
So let's go execute the query and we're going to use error is assigned the value of IMDB that exact

29
00:02:25,680 --> 00:02:27,720
context and I think that returns to things.

30
00:02:27,720 --> 00:02:28,710
But we'll find out in a minute.

31
00:02:29,300 --> 00:02:35,760
Sirtex EMT and my first ID is active or my first placeholder is active.

32
00:02:36,440 --> 00:02:40,770
My second one is host ID and my third one is service ID.

33
00:02:43,160 --> 00:02:45,200
And that does return to things, doesn't it?

34
00:02:46,630 --> 00:02:51,220
It returns a result in an areas I don't care about the results all ignore that.

35
00:02:52,510 --> 00:02:54,190
So we do that, we check for an error.

36
00:02:54,370 --> 00:03:02,660
If error is not equal to nil, return error, otherwise return nil.

37
00:03:04,960 --> 00:03:07,570
OK, let's format this, give it a comment.

38
00:03:10,870 --> 00:03:16,960
Update the active status of a host service there.

39
00:03:17,800 --> 00:03:25,900
So this is our signature, which I need to copy and I need to go to my repository and paste that in

40
00:03:25,900 --> 00:03:26,340
right here.

41
00:03:27,520 --> 00:03:35,740
OK, now back in my handler, now that I have that available to me, I need to actually update the information.

42
00:03:36,730 --> 00:03:42,610
So before I give my response and after I log this information, we'll just say error is assigned the

43
00:03:42,610 --> 00:03:48,040
value of not not assigned as they already have an error equals repo.

44
00:03:48,250 --> 00:03:57,910
DB update um, hosts service status and it requires my host I.D. It requires my service ID and it requires

45
00:03:57,910 --> 00:03:58,420
an active

46
00:04:01,080 --> 00:04:01,370
OK.

47
00:04:03,180 --> 00:04:12,270
So if air is not equal to nil, then what I'm going to do at this point is set my response, which I'm

48
00:04:12,270 --> 00:04:13,950
going to take right here.

49
00:04:15,100 --> 00:04:25,810
I'm going to get it out of here and put it right up here, I'm going to say my resp dot, OK, he calls

50
00:04:25,810 --> 00:04:27,490
false because something failed.

51
00:04:27,870 --> 00:04:32,280
OK, and I'm also going to log the air logged our print line air.

52
00:04:33,390 --> 00:04:36,940
OK, so here I try to update the information.

53
00:04:36,940 --> 00:04:39,930
If it works, I set OK to follow to true.

54
00:04:40,210 --> 00:04:40,760
OK, leave.

55
00:04:40,820 --> 00:04:41,710
OK, that's a true.

56
00:04:41,710 --> 00:04:48,370
If it doesn't work I set it to false, I just send back that one response and that really should do

57
00:04:48,370 --> 00:04:49,510
it for that part.

58
00:04:49,570 --> 00:04:56,740
Now back on the host jet page, OK, at some point I'm going to have to determine whether or not to

59
00:04:56,740 --> 00:04:58,850
have this checked when it shows up.

60
00:04:58,870 --> 00:05:05,110
OK, so that means I'm going to need to have that information available to me from my home services

61
00:05:05,110 --> 00:05:05,860
when I render this.

62
00:05:05,860 --> 00:05:06,790
And I might have that already.

63
00:05:06,790 --> 00:05:07,300
I don't know.

64
00:05:07,300 --> 00:05:08,600
I'll figure that out in the next lecture.

65
00:05:08,920 --> 00:05:11,050
Right now, let's just test this and see if it works.

66
00:05:11,050 --> 00:05:14,080
So we'll stop our application, start our application.

67
00:05:16,830 --> 00:05:24,340
I'll go look at this House page, so I'll go right to the beginning, I'll go to hosts localhost services.

68
00:05:24,900 --> 00:05:31,290
So at this point, when I look in the database, if I look at the content of hosted services and refresh

69
00:05:31,290 --> 00:05:36,740
it, I have one hosted service that is currently set to zero.

70
00:05:36,750 --> 00:05:37,920
It is not active.

71
00:05:37,950 --> 00:05:40,040
OK, so it's not active.

72
00:05:40,050 --> 00:05:41,220
Now, I'm going to do this.

73
00:05:42,180 --> 00:05:44,610
And hopefully this changed it.

74
00:05:44,880 --> 00:05:50,880
Let's go look at our log file, no errors, let's go refresh this database table refresh and now it's

75
00:05:50,880 --> 00:05:51,390
active.

76
00:05:51,390 --> 00:05:52,230
So it works.

77
00:05:53,100 --> 00:05:59,010
So really not helpful to just say, OK, here, maybe I should do something like this.

78
00:06:00,420 --> 00:06:06,460
This is back on House Jet, and it's on the last then of my fetch, I don't want to have nothing happen.

79
00:06:06,460 --> 00:06:14,380
I want to give some feedback to the user so I can say if data OK, if it worked, do something else,

80
00:06:14,410 --> 00:06:15,250
do something else.

81
00:06:15,940 --> 00:06:18,180
So if it worked, maybe I could just go successful.

82
00:06:18,190 --> 00:06:24,700
The changes saved and if it failed, error alert.

83
00:06:24,880 --> 00:06:25,300
Oops.

84
00:06:27,610 --> 00:06:30,590
Something went wrong.

85
00:06:32,860 --> 00:06:41,170
OK, so let's go back here and reload this page and go to my managed services and active changes saved.

86
00:06:41,170 --> 00:06:41,680
Perfect.

87
00:06:41,680 --> 00:06:44,980
And that should go away after a few seconds and it does change.

88
00:06:44,990 --> 00:06:46,390
You saved much better.

89
00:06:47,170 --> 00:06:53,290
OK, so the next step is to in the next lecture to actually do a few things if we can do them all in

90
00:06:53,300 --> 00:06:53,830
one lecture.

91
00:06:53,830 --> 00:06:55,210
If not, we'll split it into a couple.

92
00:06:55,600 --> 00:07:01,300
But I want this to be checked or unchecked when the page is first rendered based upon the actual contents

93
00:07:01,300 --> 00:07:02,860
of the information in the database.

94
00:07:03,670 --> 00:07:09,400
And on the overview page, maybe I should list my host here as well, along with some information,

95
00:07:09,400 --> 00:07:13,380
along with what services are being saved for this being monitored for this house.

96
00:07:13,960 --> 00:07:14,830
So we'll give that there.

97
00:07:15,370 --> 00:07:20,410
And then after that, we're going to be able to start scheduling our monitoring services and actually

98
00:07:20,410 --> 00:07:27,250
populating this bit of the page, the four possible statuses with meaningful information and then finally

99
00:07:27,250 --> 00:07:30,610
will be able to use WebSocket to update things in real time.

100
00:07:30,730 --> 00:07:32,770
So let's get started on that in the next lecture.
