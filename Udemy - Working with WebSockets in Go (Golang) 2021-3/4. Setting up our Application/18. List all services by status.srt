1
00:00:01,490 --> 00:00:08,480
OK, so we have our list of hosts showing up on the overview page, we have all of the service count

2
00:00:08,480 --> 00:00:09,050
showing up.

3
00:00:09,530 --> 00:00:10,880
So this page is done.

4
00:00:10,880 --> 00:00:12,950
And what we want to do now is this page.

5
00:00:12,950 --> 00:00:14,680
We want to have one page for each of these.

6
00:00:14,690 --> 00:00:20,240
And as I said last time, I will do this one and then I'll leave the next three as an exercise for you,

7
00:00:20,240 --> 00:00:22,010
because it's exactly the same logic.

8
00:00:22,010 --> 00:00:23,960
You're just changing one thing.

9
00:00:23,960 --> 00:00:29,480
Instead of looking for host services with the status of pending, you're looking for a status of problem

10
00:00:29,480 --> 00:00:30,930
or warning or healthy.

11
00:00:31,370 --> 00:00:32,450
So let's do this one.

12
00:00:32,660 --> 00:00:38,420
So this is the page and this page has the URL slash admin slash all pending.

13
00:00:38,870 --> 00:00:43,190
So let's go back to our code, open air routes file and try that again.

14
00:00:43,370 --> 00:00:50,360
Routes file and find the one that has the correct you URL, which is all pending right here.

15
00:00:50,990 --> 00:00:51,770
All pending.

16
00:00:52,130 --> 00:00:52,850
All pending.

17
00:00:52,850 --> 00:00:54,740
So that lists all pending services.

18
00:00:56,150 --> 00:01:00,890
And it looks like all that this does right now is render that page with no information.

19
00:01:00,920 --> 00:01:07,670
So what I need to do is to get all post services with Hosta info

20
00:01:10,640 --> 00:01:12,290
for status.

21
00:01:12,440 --> 00:01:16,430
And so I need to write a query that will do that.

22
00:01:16,550 --> 00:01:17,520
And we know how to do that.

23
00:01:17,540 --> 00:01:23,870
So we'll go back to our I'm going to do it here, first of all, in my Postgres client.

24
00:01:24,170 --> 00:01:26,300
And I will look at the host services table.

25
00:01:26,780 --> 00:01:29,060
And I want to get all of this information.

26
00:01:29,390 --> 00:01:31,490
And is there anything else that I need?

27
00:01:31,490 --> 00:01:32,870
Let's look at that page again.

28
00:01:33,800 --> 00:01:36,320
We have hosted service status and message.

29
00:01:36,380 --> 00:01:38,860
I don't know what message is right now, so I'll just leave that one alone.

30
00:01:39,620 --> 00:01:40,750
But I know I can do this.

31
00:01:40,760 --> 00:01:41,960
This is pretty straightforward.

32
00:01:41,960 --> 00:01:44,180
So we can look at the structure for this.

33
00:01:44,900 --> 00:01:47,630
We're going to get the ID, the whole study and the service IDs.

34
00:01:47,630 --> 00:01:55,670
So my query is select ID, host ID, service ID.

35
00:01:57,790 --> 00:02:05,380
Try that again, and it is here, active schedule, no schedule unit.

36
00:02:10,220 --> 00:02:22,460
Active schedule, no schedule unit, comma, and then last check created an updated Eisenstat status

37
00:02:23,330 --> 00:02:38,060
soldi status, first status, sorry, last check status created at updated apart from host services

38
00:02:39,350 --> 00:02:45,830
where status equals and I want pending.

39
00:02:47,090 --> 00:02:49,340
So that will get all the information.

40
00:02:49,490 --> 00:02:52,460
Now, it's not doing it in any particular sorted order.

41
00:02:52,790 --> 00:02:54,650
So maybe I should make this a little bit better.

42
00:02:54,650 --> 00:02:55,700
Maybe I should say.

43
00:02:55,700 --> 00:03:04,910
Host Services has left join hosts h bon hÃ¸st hosted ID equals H ID.

44
00:03:05,150 --> 00:03:11,630
Now I joined the host table, which means I need to prepend hs dot to all these.

45
00:03:12,260 --> 00:03:13,160
Let me copy that.

46
00:03:15,710 --> 00:03:19,490
Paste, paste, paste.

47
00:03:23,900 --> 00:03:25,250
And the wrong spot.

48
00:03:34,330 --> 00:03:41,650
And then from the host, I want to get the host name, OK, so that should work.

49
00:03:41,910 --> 00:03:42,610
We run this.

50
00:03:43,090 --> 00:03:43,720
There it is.

51
00:03:43,720 --> 00:03:45,490
And the hosting should be the last thing.

52
00:03:45,490 --> 00:03:47,120
And it is OK.

53
00:03:47,620 --> 00:03:49,510
Is there anything else that I need to have here?

54
00:03:49,540 --> 00:03:53,100
Well, I have the idea that I also want to get the service name.

55
00:03:53,110 --> 00:04:05,740
So let's join services services as on and it's escort service ID equals estcourt ID and now we'll put

56
00:04:05,920 --> 00:04:07,950
escort service name.

57
00:04:09,490 --> 00:04:13,150
No point in telling you that you have a problem or something is pending if you don't know what the actual

58
00:04:13,150 --> 00:04:13,790
services.

59
00:04:13,810 --> 00:04:14,650
So let's run that.

60
00:04:16,460 --> 00:04:17,180
That was good.

61
00:04:17,420 --> 00:04:27,920
OK, so I'm going to copy this query and I'll go back to my Idy and I will open my in my internal folder

62
00:04:27,920 --> 00:04:34,850
in repository under debri, I'll open host Postgres and at the very bottom I'll read any function.

63
00:04:35,420 --> 00:04:39,180
Func M a pointer to Postgres DB Repo.

64
00:04:39,200 --> 00:04:40,190
Now what am I doing here.

65
00:04:40,580 --> 00:04:47,660
I want to get services by status, so get services by status.

66
00:04:48,230 --> 00:04:54,380
And I'm going to actually pass in one parameter which I'll call status and it will be a string and I'm

67
00:04:54,380 --> 00:04:56,990
going to return a slice of something.

68
00:04:57,170 --> 00:05:04,040
Models dot host seems like the most appropriate one and potentially an error.

69
00:05:05,780 --> 00:05:06,220
OK,

70
00:05:09,470 --> 00:05:11,660
now that's caused me grief.

71
00:05:11,900 --> 00:05:12,610
Get rid of that.

72
00:05:13,280 --> 00:05:14,540
So let's paste in our query.

73
00:05:14,750 --> 00:05:21,920
Query is assign the value of and I'll paste that in there and then tab it over so it's a little more

74
00:05:21,920 --> 00:05:31,970
attractive and move that back, tick up and I'll copy my context lines from another method, paste them

75
00:05:31,970 --> 00:05:37,520
in and now I just need to do my query but I need to make one modification here.

76
00:05:37,530 --> 00:05:44,900
I don't want to hard code pending because I want to use this same method for problems and for warnings

77
00:05:44,900 --> 00:05:45,590
and for healthy.

78
00:05:45,590 --> 00:05:47,870
So I'll just make that a placeholder.

79
00:05:50,720 --> 00:05:58,040
And now we can do our query executed on the database so we get rows and potentially an error or assign

80
00:05:58,040 --> 00:06:07,400
the value of IMDB dot query, context, pasada, context, passata, query and pass it our status,

81
00:06:07,430 --> 00:06:10,280
which we get as a parameter up here in the method signature.

82
00:06:11,990 --> 00:06:13,190
Then we check for an error.

83
00:06:13,220 --> 00:06:18,740
If error is not equal to nil return and we have nothing to return yet.

84
00:06:18,740 --> 00:06:20,960
So we have to find a variable to hold the results.

85
00:06:21,980 --> 00:06:27,830
VAR services, which is a slice of models post.

86
00:06:30,110 --> 00:06:40,580
And we want to return services and our air otherwise and errors, just E.R., we defer our rose close.

87
00:06:45,120 --> 00:06:50,500
OK, now we scan through our rows and start spending things to this slice.

88
00:06:50,510 --> 00:06:59,980
So four rows dot next will create a variable to hold our current iteration.

89
00:07:00,590 --> 00:07:08,680
And that would be var H is of type models dot host and now we just scan into this row.

90
00:07:09,050 --> 00:07:12,170
So scan, try that again.

91
00:07:12,590 --> 00:07:16,820
Rows dot scan and we want to scan into

92
00:07:19,430 --> 00:07:19,980
H.

93
00:07:20,540 --> 00:07:25,280
So ampersand H and the first thing we're getting is our host ID and that is our.

94
00:07:26,240 --> 00:07:27,650
This is a type models host.

95
00:07:27,650 --> 00:07:27,820
Yes.

96
00:07:27,830 --> 00:07:28,580
So it's not.

97
00:07:31,370 --> 00:07:32,840
The second thing is.

98
00:07:34,410 --> 00:07:42,120
Hmm, that's the whole service, let's try that again, HD host service Dog Idee.

99
00:07:46,440 --> 00:07:49,410
Let better look at the model for hosts models.

100
00:07:49,440 --> 00:07:50,640
I don't want to get this all wrong.

101
00:07:51,690 --> 00:08:00,030
So a host right here has a host service which has a hosted service and that, yeah, I don't want to

102
00:08:00,040 --> 00:08:01,520
scare this into a house service.

103
00:08:01,680 --> 00:08:02,840
I want to sell into a house.

104
00:08:02,850 --> 00:08:04,410
I want to scan this into a host.

105
00:08:04,410 --> 00:08:05,960
So it's hosted service.

106
00:08:06,010 --> 00:08:13,340
I just go back here, find this and change this into host services, host service.

107
00:08:14,010 --> 00:08:19,250
And here this will be a model of hosting service that makes more sense.

108
00:08:19,800 --> 00:08:21,560
And then we just scan in the ID.

109
00:08:21,720 --> 00:08:26,750
OK, so we'll have to add some attributes to our hosts service model in a moment, but that's OK.

110
00:08:28,140 --> 00:08:35,400
So Ampersand ID gives us a host service ID and then ampersand host ID and I'll just duplicate this a

111
00:08:35,400 --> 00:08:35,950
few times.

112
00:08:36,870 --> 00:08:45,060
Next we're getting our service ID, then we're getting our host services active or not.

113
00:08:45,360 --> 00:08:48,210
That's always going to be one because we're only looking for active ones.

114
00:08:48,540 --> 00:08:50,700
I think we're have to check that in a moment.

115
00:08:53,510 --> 00:08:57,360
Then our schedule number, which we don't really need, but it's not going to hurt to get it in there,

116
00:08:57,810 --> 00:08:58,950
that our schedule unit.

117
00:09:01,440 --> 00:09:04,560
OK, and then our last check.

118
00:09:07,500 --> 00:09:09,390
And then our status.

119
00:09:11,190 --> 00:09:21,420
Which will always be pending when we pass it pending, then created and then updated at now hostname

120
00:09:21,420 --> 00:09:24,710
and service name, they actually aren't part of our models.

121
00:09:24,710 --> 00:09:29,430
So if we go back to our models, which are over here and we look at a host service, we have no where

122
00:09:29,430 --> 00:09:31,530
to put a service name or a hostname.

123
00:09:31,530 --> 00:09:37,020
But we can we put the service name under service service's name, OK, so we know where to put a host

124
00:09:37,020 --> 00:09:37,210
name.

125
00:09:37,230 --> 00:09:38,520
So I'll just put it added here.

126
00:09:39,030 --> 00:09:41,000
It's a string, OK?

127
00:09:41,790 --> 00:09:45,450
And I might want to put a comment there saying it's not part of the database, but for our purposes

128
00:09:45,450 --> 00:09:47,510
right now, I can just store the information there.

129
00:09:47,520 --> 00:09:48,510
So let's go back here.

130
00:09:49,560 --> 00:09:53,070
And that is ampersand H Hostname.

131
00:09:54,660 --> 00:10:00,360
And the last thing I'm getting is a service name, which I can put in an H service.

132
00:10:03,520 --> 00:10:10,180
Service name, because that's part of the model structure, so that is our skin and we check for an

133
00:10:10,180 --> 00:10:10,510
error.

134
00:10:12,190 --> 00:10:20,320
If error is not equal to nil, just return nil and error if error is not equal to nil.

135
00:10:20,350 --> 00:10:24,250
I've got to, of course, create errors, assign the value of there.

136
00:10:24,280 --> 00:10:24,840
That's better.

137
00:10:25,240 --> 00:10:26,380
So we check for error.

138
00:10:26,680 --> 00:10:34,480
If everything worked as we expected, then we say our variable name, which is services, is assigned

139
00:10:34,480 --> 00:10:38,650
the order of equals append services.

140
00:10:38,950 --> 00:10:40,310
And I called this one.

141
00:10:41,620 --> 00:10:46,490
OK, so how service what is this services.

142
00:10:47,740 --> 00:10:48,220
That's right.

143
00:10:48,250 --> 00:10:49,510
This has to be a service.

144
00:10:50,150 --> 00:10:50,770
That's better.

145
00:10:51,670 --> 00:10:55,680
OK, so now we have this information and we can just return it.

146
00:10:55,840 --> 00:11:00,160
So we'll say return services and nil.

147
00:11:01,780 --> 00:11:07,000
Now let's look at this query and make sure we've got it right from where status equals dollars, sign

148
00:11:07,000 --> 00:11:07,320
one.

149
00:11:07,330 --> 00:11:12,130
There's one more thing I want to add there and start active

150
00:11:15,310 --> 00:11:16,090
equals one.

151
00:11:16,340 --> 00:11:19,530
So I don't want to return inactive services as part of this query.

152
00:11:19,960 --> 00:11:21,340
So that should do the trick.

153
00:11:21,340 --> 00:11:22,720
So let's copy this signature.

154
00:11:25,360 --> 00:11:31,990
Go to our repository, paste it in there, so it's available to our handlers, close that and go back

155
00:11:31,990 --> 00:11:37,590
to our handlers and I share, but go back to my roots so I can find the appropriate handler.

156
00:11:37,990 --> 00:11:40,380
That was all pending right here.

157
00:11:41,140 --> 00:11:41,580
This one.

158
00:11:41,590 --> 00:11:42,060
Yes.

159
00:11:42,070 --> 00:11:50,050
So we want to now get that information so we can just say services and potentially an error are assigned

160
00:11:50,050 --> 00:11:57,970
the value of repo DB, get services by status and the status I want is pending.

161
00:11:59,380 --> 00:12:00,820
OK, check for an hour.

162
00:12:00,850 --> 00:12:07,540
If Bear is not equal to nil and I'll do what I've been doing right along, log it and return.

163
00:12:07,840 --> 00:12:11,170
And I'm not going to bother telling you you shouldn't do that in production because you know that by

164
00:12:11,170 --> 00:12:11,460
now.

165
00:12:12,310 --> 00:12:14,180
No, I need to create a vase.

166
00:12:14,880 --> 00:12:15,620
How did I do that?

167
00:12:15,640 --> 00:12:16,600
Let's find that again.

168
00:12:16,630 --> 00:12:21,610
So that would be under handlers and there it is right there.

169
00:12:21,610 --> 00:12:24,010
Vase make jet via a map.

170
00:12:24,280 --> 00:12:33,280
So back to this one and paste this into here and we can say vase dot set and we'll call this services

171
00:12:34,660 --> 00:12:42,420
and we'll pass in our services and then we pass that data to this map refers to this template.

172
00:12:43,060 --> 00:12:46,950
And this is now an equals because I've declared an air up here.

173
00:12:47,620 --> 00:12:48,570
So that's that.

174
00:12:48,580 --> 00:12:54,250
So let's stop our application, make sure everything compiles more than one character in Rune Litoral

175
00:12:54,250 --> 00:12:59,080
and that's on services status page go thirty seven, which is right.

176
00:12:59,080 --> 00:13:00,280
These are double quotes.

177
00:13:03,700 --> 00:13:04,360
Try that again.

178
00:13:04,630 --> 00:13:05,080
Run.

179
00:13:07,640 --> 00:13:08,270
Perfect.

180
00:13:08,420 --> 00:13:15,050
OK, now we know we stored this in our very map and called it services, so let's find the all service

181
00:13:15,050 --> 00:13:20,080
are depending page and it is pending jet lag views.

182
00:13:20,090 --> 00:13:20,900
I think this is it.

183
00:13:21,770 --> 00:13:22,780
Pending services.

184
00:13:22,790 --> 00:13:23,400
Yes, it is.

185
00:13:23,870 --> 00:13:28,190
So I have no services there right now, which is what I probably see on this page.

186
00:13:28,520 --> 00:13:41,240
So let's delete that and let's range through our services that we just passed to this page and end and

187
00:13:41,240 --> 00:13:45,980
in the middle we have a table row for every entry and a closing table row for every entry.

188
00:13:47,600 --> 00:13:51,710
Get rid of this and this because you don't want to row within a row.

189
00:13:53,510 --> 00:13:54,890
Try that again there.

190
00:13:55,400 --> 00:14:00,800
So let's tab these in so it's a little more attractive and let's filter values TD and that's just going

191
00:14:00,800 --> 00:14:02,610
to be hostname.

192
00:14:04,190 --> 00:14:07,810
Pretty sure that's what I called it to make sure in their models hostname.

193
00:14:09,560 --> 00:14:15,230
And underneath that, I'm going to have the service, which is Dott Service DOT service name.

194
00:14:18,410 --> 00:14:25,100
And underneath that I'm going to have the status which is dot status I think.

195
00:14:25,190 --> 00:14:26,000
Let's make sure.

196
00:14:27,260 --> 00:14:28,480
Yeah, that's the status.

197
00:14:29,330 --> 00:14:32,030
And after that is a message and we don't know anything about that yet.

198
00:14:32,030 --> 00:14:33,240
So we're just going to leave that empty.

199
00:14:33,950 --> 00:14:40,280
So if I've spelled everything right and stop the application and start it and go back here, I should

200
00:14:40,280 --> 00:14:42,020
be able to reload this page.

201
00:14:42,470 --> 00:14:42,950
And I do.

202
00:14:42,950 --> 00:14:46,510
I have a great OK, so pending should be a little more attractive.

203
00:14:46,550 --> 00:14:48,630
Let's make that kind of a gray.

204
00:14:49,250 --> 00:14:50,690
So let's wrap that in a badge.

205
00:14:55,490 --> 00:15:02,340
Spanned class equals badge, and it's big, big dash.

206
00:15:04,100 --> 00:15:05,480
I'm not sure which one it is.

207
00:15:05,510 --> 00:15:06,740
Let's just try.

208
00:15:09,040 --> 00:15:12,640
Let's try secondary dark and see what that looks like

209
00:15:15,520 --> 00:15:16,420
doesn't really matter.

210
00:15:16,600 --> 00:15:18,460
I just want it to look a little more attractive.

211
00:15:18,700 --> 00:15:20,120
Reload pending.

212
00:15:20,320 --> 00:15:21,010
OK, that works.

213
00:15:21,500 --> 00:15:24,500
OK, so there is our status picture.

214
00:15:24,520 --> 00:15:33,250
Now, what I want, of course, is I want this to be a link to go over to my hosts page and right over

215
00:15:33,250 --> 00:15:35,440
to my hosts.

216
00:15:35,440 --> 00:15:40,180
Click on localhost if you want it to bring up this tab and that tab.

217
00:15:40,180 --> 00:15:45,820
If you roll over the link here, you can see that in the bottom left hand corner of my browser, it

218
00:15:45,820 --> 00:15:51,910
has hosted six and then hash pending dash content.

219
00:15:52,330 --> 00:15:54,010
So maybe we can link directly to that.

220
00:15:54,610 --> 00:15:58,660
Now, let's go back over here and make this an actual link.

221
00:16:01,310 --> 00:16:09,740
So I will say, hey, HPF equals admin's host host Idy, which I can get from the data I'm passing here,

222
00:16:09,740 --> 00:16:15,770
host ID and then a hash pending dash content.

223
00:16:16,430 --> 00:16:17,330
Let's see if that works.

224
00:16:18,140 --> 00:16:25,320
I'll copy this or cut it, paste it here and just reformat this by tabbing in a little bit.

225
00:16:25,850 --> 00:16:26,760
Let's see how that works.

226
00:16:26,760 --> 00:16:30,080
So let's go back to our overview and look at our pending services.

227
00:16:30,500 --> 00:16:36,530
And this is now a link to slash admin, slash host, slash six hash pending dash content.

228
00:16:37,640 --> 00:16:40,400
All right, that's exactly what I wanted to do to take it right to this page.

229
00:16:41,240 --> 00:16:47,990
OK, so that is how we're going to populate the information for all of those tabs are all of these tables.

230
00:16:48,300 --> 00:16:49,340
So I've done this one.

231
00:16:49,670 --> 00:16:53,230
You should be able to do these three with no difficulty whatsoever.

232
00:16:53,600 --> 00:16:59,420
So if you do have difficulty, just look at the source for the next for this lecture, because I finished

233
00:16:59,420 --> 00:17:00,950
it without recording it.

234
00:17:01,190 --> 00:17:05,750
And it's right up there on the source for this lecture if you run into any difficulties at all.
