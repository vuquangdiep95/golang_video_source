1
00:00:14,250 --> 00:00:19,440
Head on and then come to the gold and programming language course in the previous session, we talked

2
00:00:19,440 --> 00:00:22,950
about function with parameters and indecision.

3
00:00:23,130 --> 00:00:26,100
We want to talk about the other function concept.

4
00:00:29,890 --> 00:00:37,240
Function with return times, their return is a value that the function returns to the conning function

5
00:00:37,240 --> 00:00:39,310
bit and completes its task.

6
00:00:40,240 --> 00:00:45,430
You use the written statement to send the value back to user defined function.

7
00:00:46,900 --> 00:00:54,460
You can return the value as a literal value or retain a variable when it function returns the value

8
00:00:54,790 --> 00:00:56,430
to the user defined function.

9
00:00:56,440 --> 00:01:01,120
You must restore that value in either a local or global variable.

10
00:01:02,350 --> 00:01:04,360
Now you can see the syntax.

11
00:01:05,470 --> 00:01:15,100
So go to the school program and illustrate how to use function with return tight finish, creating a

12
00:01:15,100 --> 00:01:25,480
function with two parameters of each type that adds together and return and each value function and

13
00:01:27,160 --> 00:01:35,860
set parameters type like X by the tight end and lie by the Typekit.

14
00:01:36,520 --> 00:01:40,240
And I don't have the parentheses set the return type.

15
00:01:41,010 --> 00:01:49,720
He didn't go to the body of function defined a variable named the total death restores some of two variables

16
00:01:50,680 --> 00:02:03,250
to Todd Colin because x plus y go to the next line and return total variable as return times return

17
00:02:04,120 --> 00:02:05,730
to town validator.

18
00:02:07,570 --> 00:02:13,480
Now, save the project and go to the main function and invoke app function inside it.

19
00:02:15,820 --> 00:02:24,100
The main function calling app function and values as arguments inside it has set the return value of

20
00:02:24,100 --> 00:02:27,520
function in a variable for the example.

21
00:02:27,910 --> 00:02:37,150
Create a variable for return value on involved and function first at set two arguments for the example

22
00:02:37,150 --> 00:02:39,520
20 comma 30.

23
00:02:39,670 --> 00:02:46,630
This function returns and end type value, so sign this function to a variable.

24
00:02:47,260 --> 00:02:52,900
For the example, some column equals and display value.

25
00:02:52,900 --> 00:02:54,260
Add some value.

26
00:02:54,790 --> 00:02:55,540
If F.

27
00:02:57,060 --> 00:02:57,980
Some

28
00:03:00,390 --> 00:03:14,280
X plus y equals person de la Kazan's set the variable song here, save the project and execute the program.

29
00:03:18,290 --> 00:03:26,720
Now we can see the output sum of X Plus Y equals fifty in this sample to add function, takes input

30
00:03:26,720 --> 00:03:35,130
off to integer numbers and returns and integer values, as some of them together in order not to prolong

31
00:03:35,130 --> 00:03:39,840
the time of decision, will initiate and continue the content in the next session.

32
00:03:39,860 --> 00:03:40,340
Goodbye.
