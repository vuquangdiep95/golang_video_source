1
00:00:12,510 --> 00:00:19,380
Hello and welcome to the Golang programming language course in the previous session, we could define

2
00:00:19,380 --> 00:00:23,610
multiple variables of a different type in the single declaration.

3
00:00:25,260 --> 00:00:28,200
And in this session, we want to do another case.

4
00:00:28,770 --> 00:00:37,440
If you declared a variable Veit-Wild, assigning it a value go blank will automatically bind a different

5
00:00:37,440 --> 00:00:38,700
value to the variable.

6
00:00:40,680 --> 00:00:42,180
Let's do an example.

7
00:00:43,350 --> 00:00:46,890
First, define some variable without initialize.

8
00:00:46,890 --> 00:01:04,140
Then, for example, that no one by the time followed 32 and that norm two by the time

9
00:01:06,660 --> 00:01:07,380
16.

10
00:01:10,620 --> 00:01:16,830
And that first name by the time is three.

11
00:01:20,060 --> 00:01:26,720
And why, for example, married by the time, Paul.

12
00:01:30,360 --> 00:01:30,740
OK.

13
00:01:31,290 --> 00:01:39,120
We could define for variable without initialize, then in this case, the compiler considers the default

14
00:01:39,120 --> 00:01:45,930
value for the defined variable and base of its type, assigned the default value to that variable.

15
00:01:47,190 --> 00:01:53,950
Now we want to display the value of these variables, so we'll be right if emptied out field and

16
00:01:57,120 --> 00:02:02,610
known one and FP.

17
00:02:06,160 --> 00:02:10,150
No to FP.

18
00:02:13,880 --> 00:02:18,310
First name and FP.

19
00:02:22,490 --> 00:02:22,850
OK.

20
00:02:23,480 --> 00:02:30,920
Reformat the call, save the project and execute the program first, go to the project folder, see

21
00:02:30,920 --> 00:02:39,110
the variables clear screen and execute the program by the comment Go round dot slash.

22
00:02:39,110 --> 00:02:40,400
May that go.

23
00:02:42,590 --> 00:02:44,240
Now we can see the output.

24
00:02:44,810 --> 00:02:50,420
The default value for the number one by the time flow 32 is zero.

25
00:02:51,470 --> 00:02:56,450
The default value for the nom to by the time integer is zero.

26
00:02:57,710 --> 00:03:05,600
The default value for the first name by the time is string is Neal and the default value for the mattei

27
00:03:05,600 --> 00:03:08,300
by the time Boolean is false.

28
00:03:09,200 --> 00:03:17,780
Now we could see that Golang initialize the variables by the default values in order, not by allowing

29
00:03:17,780 --> 00:03:22,700
the time of decision and will finish it, and we'll continue the content in the next session.

30
00:03:22,730 --> 00:03:23,240
Goodbye.
