1
00:00:13,160 --> 00:00:19,730
Hello and welcome to the Golang programming language course in the previous sessions, we defined the

2
00:00:19,730 --> 00:00:26,060
variable indigo language through Divine Keyboard and examined its different cases.

3
00:00:26,630 --> 00:00:32,140
And in this session, we will define the variable true, the short variable declaration.

4
00:00:33,320 --> 00:00:40,430
The local variables, which are declared and initialized in the functions, are declared by using shorthand

5
00:00:40,430 --> 00:00:41,750
variable declaration.

6
00:00:42,980 --> 00:00:48,020
In this syntax, the time of the variable is determined by the time of the expression.

7
00:00:48,920 --> 00:00:51,560
Now let's do one example for this case.

8
00:00:53,240 --> 00:01:05,450
First, we define the short variable declaration, for example, that one column equals a hundred in

9
00:01:05,450 --> 00:01:09,530
this case set the type of variable based on the expiration.

10
00:01:10,100 --> 00:01:17,510
This means that the nominal value 100 is stored inside rather than and its type is integer.

11
00:01:18,020 --> 00:01:21,350
So go to the next line and define another variable.

12
00:01:21,530 --> 00:01:29,450
For example, that two column equals and such as string type gold programming.

13
00:01:31,640 --> 00:01:38,600
This means that the text when you go programming is stored inside that data and its type is a string

14
00:01:39,020 --> 00:01:42,380
and go to the next line and define another variable.

15
00:01:42,380 --> 00:01:49,010
Like that, three column equals a hundred and thirty five point ninety four.

16
00:01:51,130 --> 00:01:57,340
This means that the float value a hundred and thirty four point ninety four is stored inside the factory

17
00:01:57,550 --> 00:02:04,420
and its type is float for display, then print variables be used to print the function from this empty

18
00:02:04,660 --> 00:02:05,290
package.

19
00:02:05,590 --> 00:02:19,450
So we write if the value of that one Collins Person D as formatted string, because the time of the

20
00:02:19,450 --> 00:02:28,810
variable one is integer and set that one and go to the next line and display type of the variable.

21
00:02:29,080 --> 00:02:44,200
So we write F if the tide of that one columns per cent t off case because we want to display the type

22
00:02:44,200 --> 00:02:50,830
of the variables so we use from Theodorakis as format history and Cert VI one.

23
00:02:51,670 --> 00:03:00,760
OK, copy these two lines and go to the new line and paste here for displayed another variable.

24
00:03:01,900 --> 00:03:10,750
So we change name and value of this variable VAR tool because the type of string to change that format

25
00:03:10,750 --> 00:03:16,060
is turning into a person as large case and that tool.

26
00:03:22,530 --> 00:03:24,240
And for the very little three

27
00:03:27,060 --> 00:03:36,590
we use from percent, if because the time of the battery is fluid, so we use from person if as commerce

28
00:03:36,660 --> 00:03:42,030
in character or for math is strange and we change the name of the variable into that tree.

29
00:03:50,690 --> 00:03:51,050
OK.

30
00:03:51,830 --> 00:03:58,160
To be able to display its value in the output on new line, we use Beckett's login and then of the comment,

31
00:03:58,550 --> 00:04:03,410
so we pull back, is this end and of each comment?

32
00:04:13,810 --> 00:04:14,130
OK.

33
00:04:14,200 --> 00:04:17,620
Perform at the court, save the project and execute the program.

34
00:04:17,800 --> 00:04:25,810
Now go to Terminal First, go to Project Folder, see the variables killer screened and run the project

35
00:04:25,810 --> 00:04:30,260
by the command go run thought back as such, making that call.

36
00:04:32,050 --> 00:04:33,850
Now we can see the output.

37
00:04:34,270 --> 00:04:42,130
The value of that one is 100 and type of it is int value of that to is go programming and type of it

38
00:04:42,130 --> 00:04:48,130
is string and value of that tree is one hundred and thirty five point ninety four.

39
00:04:48,430 --> 00:04:50,230
And type of it is flawed.

40
00:04:50,240 --> 00:04:51,010
64.

41
00:04:51,970 --> 00:04:52,360
OK.

42
00:04:52,720 --> 00:04:59,830
Most of the local variables are declared and initialized by using shorthand variable declaration due

43
00:04:59,830 --> 00:05:05,410
to their brevity and flexibility in order not to prolong the time of decision.

44
00:05:05,590 --> 00:05:09,550
We will finish it and we will continue the content in the next session.

45
00:05:09,700 --> 00:05:10,150
Goodbye.
