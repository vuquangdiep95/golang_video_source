1
00:00:13,730 --> 00:00:19,640
Hello and welcome to the golden programming language course in the previous session, we talked about

2
00:00:19,640 --> 00:00:22,890
iterate over history and indecision.

3
00:00:22,910 --> 00:00:25,820
We want to talk about the other extremist concept.

4
00:00:29,780 --> 00:00:32,750
Access the individual point of this stream.

5
00:00:33,440 --> 00:00:38,720
This ring is another bite so we can access each bite of the given history.

6
00:00:39,050 --> 00:00:44,150
Now let's go to the school curriculum to illustrate how to access the bias of this stream.

7
00:00:47,200 --> 00:00:58,500
First, creating an initializing doing SDR calling equals sit value, go to ground

8
00:01:01,420 --> 00:01:15,840
now, accessing the bonds of the given history by defining a for loop for I call an equals zero I less

9
00:01:15,850 --> 00:01:26,770
than linear history and variable in this case is this TR and our last plus four set the condition for

10
00:01:26,770 --> 00:01:31,750
loop we used from the limits to obtain the length of this string.

11
00:01:31,960 --> 00:01:38,410
So in the body, a statement like quotes if this index.

12
00:01:40,100 --> 00:01:59,390
First, St D equals Person C and as T quote equals Person V for Congress and character for Person de

13
00:01:59,690 --> 00:02:00,830
CET I.

14
00:02:02,600 --> 00:02:07,950
And Person C is TR Index I and person.

15
00:02:07,960 --> 00:02:18,040
The history are index AI again display index number of y by involved AI variable and display index value

16
00:02:18,050 --> 00:02:26,840
by S TR Index AI and Person C as cognition, character and display ASCII code of each bi character.

17
00:02:27,050 --> 00:02:36,380
Y Person V as conversion character for SDR AI reformat the call, save the project and execute the program.

18
00:02:39,140 --> 00:02:49,520
Now we can see the output for the example, index eight equals eight and ASCII code equals 97 or Index

19
00:02:49,520 --> 00:02:54,500
five equals O and ASCII code equals 111.

20
00:02:54,920 --> 00:03:02,210
So we could access index value and ASCII could of each character of string in order not to prolong the

21
00:03:02,210 --> 00:03:07,090
time of decision to be finished, and we will continue the content in the next session.

22
00:03:07,100 --> 00:03:07,600
Goodbye.
