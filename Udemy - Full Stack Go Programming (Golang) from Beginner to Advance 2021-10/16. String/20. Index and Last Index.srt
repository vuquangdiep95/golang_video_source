1
00:00:13,770 --> 00:00:18,990
Hello and welcome to the goal and programming language course in the previous session.

2
00:00:19,020 --> 00:00:26,400
We talk about replays function in Estrin and in this session we want to talk about the other extreme

3
00:00:26,510 --> 00:00:27,150
concept.

4
00:00:31,460 --> 00:00:33,560
Go blank index function.

5
00:00:35,400 --> 00:00:44,130
Then the expansion enables searching particular takes within estranged its walk simply by matching the

6
00:00:44,130 --> 00:00:45,960
specific takes in history.

7
00:00:46,620 --> 00:00:56,160
Now you can see the syntax if found, then it returns the specific position starting with zero.

8
00:00:56,460 --> 00:01:00,420
And if not found, then it returns minus one.

9
00:01:01,440 --> 00:01:07,140
Now let's go to your school program to illustrate how to use in the expansion in history.

10
00:01:09,530 --> 00:01:17,390
For example, we want to search a USD value that first Neller is thought by the uppercase character

11
00:01:17,630 --> 00:01:22,140
within the Australia it's targeting by using index function.

12
00:01:23,000 --> 00:01:41,020
So right, FP use string strings package and involved index function set for first arguement us through

13
00:01:41,060 --> 00:01:45,990
Alia and set for second argument.

14
00:01:46,010 --> 00:01:57,430
We set a new test to repeat the previous Sampat, except that all the characters in the Australian string

15
00:01:57,440 --> 00:01:58,670
are lowercase.

16
00:01:59,330 --> 00:02:02,310
So if the

17
00:02:05,570 --> 00:02:06,380
Strings

18
00:02:09,260 --> 00:02:09,950
Dot

19
00:02:12,470 --> 00:02:13,280
Index

20
00:02:16,700 --> 00:02:28,560
Australia set value for first argument and for second argument is a USD and one other centre.

21
00:02:28,580 --> 00:02:39,170
In this case, we want to search a uppercase character in Australia, so we write if the strings make

22
00:02:39,270 --> 00:02:41,570
a dot index function

23
00:02:44,090 --> 00:02:54,020
and its value for first argument us through earlier and for second argument is set a averages and do

24
00:02:54,020 --> 00:02:55,130
another Sampa.

25
00:02:55,250 --> 00:02:59,270
In this case, we search a lowercase character in Australia.

26
00:03:00,170 --> 00:03:14,330
So we write if the Strings Dots Index for first argument, we set Australia and for second value that

27
00:03:14,330 --> 00:03:20,300
we set a lowercase reformat, they could save the project and execute the program.

28
00:03:21,920 --> 00:03:29,990
Now we can see the output for first we have zero for second, we have minus one for third.

29
00:03:29,990 --> 00:03:31,670
We have zero and four force.

30
00:03:31,670 --> 00:03:32,840
We have fine.

31
00:03:33,800 --> 00:03:39,230
Except for the second example, the index of the these are the Siemens retail and all.

32
00:03:39,230 --> 00:03:42,890
Sampat now go to a slide and continue.

33
00:03:47,810 --> 00:03:57,410
Go blank last index function, the last thing this function enables searching particular text character

34
00:03:57,410 --> 00:03:59,180
or listing with an asterisk.

35
00:03:59,450 --> 00:04:04,730
It returns the index of the last index of text or tracks during testing.

36
00:04:05,570 --> 00:04:07,730
Now you can see the syntax.

37
00:04:10,400 --> 00:04:17,690
If found, then it returns to a specific position as starting with zero and if not found, then it will

38
00:04:17,690 --> 00:04:19,280
return as minus one.

39
00:04:20,090 --> 00:04:25,130
Let's go to the school program to illustrate how to use last index function.

40
00:04:27,610 --> 00:04:29,200
First clear, the last school.

41
00:04:35,960 --> 00:04:42,020
For example, we want to serve as a character within the Australia extreme by using the last in the

42
00:04:42,020 --> 00:04:53,810
expansion FP from Airstreams package, the call last thing expansion for first arguement, we set value

43
00:04:54,170 --> 00:05:05,330
Australia and for second value, we set a lower case and go to the next line and repeat the previous

44
00:05:05,330 --> 00:05:09,080
sample, except that the character a is often the case.

45
00:05:09,470 --> 00:05:26,200
So if this drinks package the last index for first argument, we said Australia and for second value,

46
00:05:26,210 --> 00:05:32,510
we said a proper case before they could save the project, then execute the program.

47
00:05:34,670 --> 00:05:40,340
Now we can see the output for first we have eight and four.

48
00:05:40,350 --> 00:05:42,650
Second, we have minus one.

49
00:05:43,070 --> 00:05:47,560
For the first example, the index of the desired is doing is returned.

50
00:05:48,660 --> 00:05:51,200
OK, we have reached the end of this decision.

51
00:05:51,200 --> 00:05:55,890
I hope you have taken full advantage of this decision until next session.

52
00:05:55,910 --> 00:05:56,450
Goodbye.
