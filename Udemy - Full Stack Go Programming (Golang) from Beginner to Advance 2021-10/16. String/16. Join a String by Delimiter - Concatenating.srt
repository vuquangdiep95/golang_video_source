1
00:00:13,430 --> 00:00:16,760
Hello and welcome to the Golang programming language course.

2
00:00:17,210 --> 00:00:23,600
In the previous session, we talked about campaign extremes in goading and indecision.

3
00:00:23,630 --> 00:00:26,740
We want to talk about the other's strengths concept.

4
00:00:30,530 --> 00:00:39,650
John Estrin, by Delimiter or a separate or concatenating is strings, this strings package of gold

5
00:00:39,650 --> 00:00:45,650
provides a join metal that can be used to join a string based upon a delimiter.

6
00:00:47,180 --> 00:00:49,430
Now you can see the scene techs.

7
00:00:51,640 --> 00:00:59,620
As you can notice, dysfunction takes a slice of string and a delimiter and return a combined issing

8
00:00:59,620 --> 00:01:01,180
joined by a Delhi metro.

9
00:01:01,810 --> 00:01:07,150
The Delhi metro or separately was placed between elements of the input, destroying a slice.

10
00:01:08,200 --> 00:01:15,010
Please note it will return and interesting if the length of the input is nice is zero.

11
00:01:15,730 --> 00:01:23,290
It will output a string component from the noise of strings if the input limit or secretary is A..

12
00:01:24,190 --> 00:01:31,240
Now let's go to the school program to illustrate how to use concatenating strings and go like.

13
00:01:35,730 --> 00:01:43,320
First, we create an initialized string variable by assigned joint function that contains separator.

14
00:01:43,650 --> 00:02:00,090
So first, define a variable life result column equals strings package and select join function

15
00:02:02,580 --> 00:02:06,510
and first set a slice of a string variable.

16
00:02:07,200 --> 00:02:27,060
This life is strange and initialize it like a b and C D and E F and sit there as separate or comma,

17
00:02:27,870 --> 00:02:29,350
then dash.

18
00:02:31,560 --> 00:02:34,980
Now display the very eager if the

19
00:02:38,520 --> 00:02:39,180
result

20
00:02:42,450 --> 00:02:45,150
in chase to this list is empty.

21
00:02:45,360 --> 00:02:55,530
Go to the next line resolved equals the strings dot join.

22
00:02:58,370 --> 00:03:09,910
Sit a slice of history that is empty, her slice her string and set the ash separator.

23
00:03:10,880 --> 00:03:14,030
And again, this really there isn't.

24
00:03:19,460 --> 00:03:22,160
And in case separately, is A..

25
00:03:22,190 --> 00:03:24,020
Go to the next line.

26
00:03:25,380 --> 00:03:34,040
Resolved equals strength package don't in will join function.

27
00:03:36,970 --> 00:03:38,920
Sit a slice of string

28
00:03:41,980 --> 00:03:48,540
the string and initialize it for the accented G Edge.

29
00:03:51,040 --> 00:03:55,270
I J and K L

30
00:03:58,900 --> 00:04:11,350
and sit on four separate or go to the next line and display the variation of the result, reformat the

31
00:04:11,350 --> 00:04:15,010
code, save the project and execute the program.

32
00:04:17,150 --> 00:04:26,130
Now we can see the output, a b dash, c, d dash if and in second line non.

33
00:04:26,480 --> 00:04:30,350
And in third non g is i k akl.

34
00:04:30,590 --> 00:04:38,540
In first case, we said dash as delimiter and it will output a slice of length three and in second case,

35
00:04:38,540 --> 00:04:39,950
a slice is empty.

36
00:04:40,190 --> 00:04:43,250
And it will output a emptiest string.

37
00:04:43,490 --> 00:04:51,380
And in the third case, separator is empty and it will output is string combine from this slice of strings.

38
00:04:52,640 --> 00:04:59,240
Now we could see how to use concatenating esters in order not to prolong the time of decision.

39
00:04:59,420 --> 00:05:03,650
We will finish sheet and we will continue the content in the next session.

40
00:05:03,920 --> 00:05:04,430
Goodbye.
