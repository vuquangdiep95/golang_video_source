1
00:00:13,640 --> 00:00:18,960
Hello and welcome to the Golang Programming Languages course independent news station.

2
00:00:19,130 --> 00:00:23,360
We talked about print function and indecision.

3
00:00:23,390 --> 00:00:26,690
We want to talk about the others if empty package concept.

4
00:00:30,410 --> 00:00:32,270
This print alone function.

5
00:00:34,710 --> 00:00:42,930
It's print and function in go language formats, using the different formats for its offerings and returns,

6
00:00:42,930 --> 00:00:50,160
the resulting string, this being in function the same way as print and does.

7
00:00:50,850 --> 00:00:54,500
The only difference is that it's print and returns.

8
00:00:54,510 --> 00:00:58,980
The input is streamed instead of printing on the output console.

9
00:01:00,040 --> 00:01:06,790
Here, its cases are always added between operations and a new line is appended at the end.

10
00:01:07,600 --> 00:01:11,560
Moreover, this function is defined under the F.A. package.

11
00:01:11,830 --> 00:01:16,270
Here, you'll need to import this empty package in order to use this function.

12
00:01:16,930 --> 00:01:19,120
Now you can see the syntax.

13
00:01:21,350 --> 00:01:30,020
A 3.0 interface is containing some strings, along with the specified constant variables and return

14
00:01:30,020 --> 00:01:30,500
value.

15
00:01:30,680 --> 00:01:32,990
It returns the resulting string.

16
00:01:33,920 --> 00:01:40,520
Now let's go to this school program to illustrate the uses of its print and function.

17
00:01:42,410 --> 00:01:53,120
First, declaring some missing variables that name and venue equals go and.

18
00:01:55,190 --> 00:01:56,120
Programming.

19
00:01:57,470 --> 00:01:58,310
Language.

20
00:02:00,450 --> 00:02:06,990
Now, Corning Estrin and function from the empty package first defining variable like these are calling

21
00:02:06,990 --> 00:02:07,530
equals.

22
00:02:07,950 --> 00:02:21,110
If Empty Dot is print and function and set variables to its name, comma set a value for a string like

23
00:02:21,120 --> 00:02:25,980
is a and common and another value.

24
00:02:25,980 --> 00:02:33,900
Then George Bagyo, now calling write a string function to write the contents of the string result to

25
00:02:33,900 --> 00:02:43,960
always start a study out now right i o dot write the string and set arguements first from the package

26
00:02:44,220 --> 00:02:50,100
is thought out and then search results.

27
00:02:52,750 --> 00:02:56,640
OK, now let's define some other variables.

28
00:02:57,060 --> 00:03:11,730
So go to the next line and define that number one, number two and number three and number four and

29
00:03:11,730 --> 00:03:19,140
initialized for the example, at five, 10, 15 and 50.

30
00:03:20,610 --> 00:03:27,670
Now calling sprint and function and display class and multiplication of these variable is again.

31
00:03:28,410 --> 00:03:31,740
So define a variable like result.

32
00:03:31,950 --> 00:03:45,630
One call equals from this empty package is sprint and function and set variables number one, comma

33
00:03:47,130 --> 00:04:02,700
class, number two, comma equals and set number three and go to the next line.

34
00:04:03,360 --> 00:04:11,040
Define another variable like resolved to call an equals F.A. Dot.

35
00:04:11,160 --> 00:04:13,710
Select Sprint and function.

36
00:04:14,190 --> 00:04:21,930
And Set variable number one camera multiplication and no.

37
00:04:22,200 --> 00:04:29,500
Two Comma equals and select norm.

38
00:04:29,880 --> 00:04:38,040
For many of us, now, cutting right is adding function to write the contents of strings results and

39
00:04:38,040 --> 00:04:41,750
then result to two always thought study out so right.

40
00:04:41,760 --> 00:04:44,430
I o the arthritis three.

41
00:04:46,150 --> 00:04:57,460
And sits, oh, is that a study out as writer and said variable result Juan and go to the next line

42
00:04:57,460 --> 00:05:08,900
and i o dot select writers string function and sit o is thought out as writer argument and said result

43
00:05:08,900 --> 00:05:12,070
to variable the format.

44
00:05:12,070 --> 00:05:15,430
They could save the project and execute the program.

45
00:05:16,570 --> 00:05:20,350
Now we can see the output go is a programming language.

46
00:05:20,770 --> 00:05:23,800
Five plus 10 equals 15 and five.

47
00:05:23,800 --> 00:05:26,200
Multiplication 10 equals 15.

48
00:05:26,620 --> 00:05:31,060
First, we create this string variable and using the print alone function.

49
00:05:31,360 --> 00:05:37,870
Then we assign the return value inside the result variable and finally be preaching the value of the

50
00:05:37,870 --> 00:05:43,030
results variable inside the standard output in the second code.

51
00:05:43,180 --> 00:05:50,140
Now new line or space is used nested this function up a new line in the space between the operators

52
00:05:51,070 --> 00:05:56,500
in order not to prolong the time of decision to be finished, and we will continue the content in the

53
00:05:56,500 --> 00:05:57,310
next session.

54
00:05:57,550 --> 00:05:58,090
Goodbye.
