1
00:00:13,410 --> 00:00:19,800
Hello and welcome to the golden programming language course in the previous session, we talked about

2
00:00:19,950 --> 00:00:21,570
screen and function.

3
00:00:21,930 --> 00:00:26,910
And in this session, we want to talk about the author's empty package concept.

4
00:00:30,330 --> 00:00:31,710
If print function.

5
00:00:33,690 --> 00:00:40,860
The f print function and go language formats using the different formats, both its offerings and rise

6
00:00:40,860 --> 00:00:42,230
to eyeball writers.

7
00:00:43,200 --> 00:00:49,890
Unlike other print function, the print does not read or print anything on the console.

8
00:00:50,730 --> 00:00:58,860
If print formats, the input is strong as per the default formatting and rise the formatted input entering

9
00:00:58,860 --> 00:01:00,420
into the input file.

10
00:01:01,740 --> 00:01:07,800
Here, the spaces are added between operations, then any string is not used as a parameter.

11
00:01:08,400 --> 00:01:12,720
Moreover, this function is defined and or death empty package here.

12
00:01:12,900 --> 00:01:17,280
You'll need to import the empty package in order to use this function.

13
00:01:17,880 --> 00:01:20,250
Now you can see this syntax.

14
00:01:22,560 --> 00:01:31,590
Parameters this function, access to parameters which are illustrated below first W Time I cowriter,

15
00:01:31,830 --> 00:01:37,920
this is this specify the standard input or output and a tree interface.

16
00:01:38,220 --> 00:01:45,120
This is containing some strings or constant variables used in the code and return value.

17
00:01:45,270 --> 00:01:50,160
It returns the number of by written and any write error encountered.

18
00:01:50,880 --> 00:01:57,030
Now let's go to this school with Cary Grant to illustrate the uses of f print function

19
00:01:59,730 --> 00:02:01,590
first declaring song value.

20
00:02:01,590 --> 00:02:07,800
This for the example that no one and No.

21
00:02:07,800 --> 00:02:09,510
Two and No.

22
00:02:09,660 --> 00:02:22,080
Three and initialize then by value five, 10 and 15 now calling if print function is free to too many

23
00:02:22,080 --> 00:02:30,540
of us, for the example, first number as the number of by 310 and error as any error encountered.

24
00:02:31,200 --> 00:02:37,050
So number and e are

25
00:02:39,510 --> 00:02:44,880
equals from the empty package select f print function.

26
00:02:48,500 --> 00:02:51,200
First, always thought this out

27
00:02:54,350 --> 00:03:00,380
as a standard output and select value, there's no one and No.

28
00:03:00,500 --> 00:03:03,020
Two and No.

29
00:03:03,860 --> 00:03:12,200
Three and defiant and back end now printing the number of by 310.

30
00:03:12,980 --> 00:03:24,590
So if empty dot print function, no comma bytes written.

31
00:03:26,950 --> 00:03:29,680
That's like a slash and.

32
00:03:32,420 --> 00:03:45,950
And printing, if any, are encountered, if A. Don and said the value of reformat the code, save the

33
00:03:45,950 --> 00:03:48,210
project and execute the program.

34
00:03:49,690 --> 00:03:55,600
Now we can see the output five, 10, 15 and eight by 310.

35
00:03:55,840 --> 00:04:01,750
And no error in the amount of code variables used are numbers.

36
00:04:01,900 --> 00:04:05,650
Hands spaces are added in between two numbers.

37
00:04:06,010 --> 00:04:09,640
First, we create a variable and using the f print function.

38
00:04:09,850 --> 00:04:16,000
Then we assign a retain value inside to variables like number and URL.

39
00:04:16,330 --> 00:04:23,170
And finally, we print the number of buys written as number, and if there is an error, we will display

40
00:04:23,170 --> 00:04:24,790
it as error value.

41
00:04:24,820 --> 00:04:30,490
In order not to prolong the time of decision, we will finish it and we will continue the content in

42
00:04:30,490 --> 00:04:31,330
the next session.

43
00:04:31,540 --> 00:04:32,050
Goodbye.
