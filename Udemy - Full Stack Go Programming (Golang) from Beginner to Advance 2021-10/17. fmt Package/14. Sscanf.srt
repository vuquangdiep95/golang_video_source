1
00:00:13,200 --> 00:00:19,080
Hello and welcome to the golden programming language course in the previous session, we talked about

2
00:00:19,080 --> 00:00:21,960
its a function and indecision.

3
00:00:21,990 --> 00:00:25,380
We want to talk about the other FMV package concept.

4
00:00:29,170 --> 00:00:30,880
Is this kind of function?

5
00:00:32,850 --> 00:00:40,470
The scan, a function in Golden Goose, it scans the specified string, and it's towards the successive

6
00:00:40,590 --> 00:00:48,720
space separated values into successive arguements, as determined by the format as this Caniff walks

7
00:00:48,720 --> 00:00:51,100
similar to a scan of exit.

8
00:00:51,120 --> 00:00:58,140
The difference that if this kind of collects input as the argument is string and not the input format,

9
00:00:58,140 --> 00:01:00,900
the consulate screen in mentioned formatting.

10
00:01:01,530 --> 00:01:05,460
Moreover, this function is defined under the empty package.

11
00:01:06,100 --> 00:01:10,890
Here, you'll need to import the empty package in order to use this function.

12
00:01:11,640 --> 00:01:16,350
Now you can see the syntax parameters.

13
00:01:16,560 --> 00:01:24,120
This function accepts three parameters which are illustrated below SDR and type is issuing.

14
00:01:24,390 --> 00:01:29,250
This parameter contains the specified text, which is going to be scanned.

15
00:01:30,870 --> 00:01:33,030
Format type is this string.

16
00:01:33,420 --> 00:01:40,980
This parameter is the different types of format for each element of the specified string and a three

17
00:01:40,980 --> 00:01:41,970
dot interface.

18
00:01:42,150 --> 00:01:47,220
This parameter receives each elements of this string and returns value.

19
00:01:47,220 --> 00:01:50,550
It returns the number of items successfully passed.

20
00:01:51,270 --> 00:01:57,600
Now let's go to this school program to illustrate the usage of its scanner function.

21
00:02:00,770 --> 00:02:04,190
First declaring some variables by different types.

22
00:02:04,580 --> 00:02:07,730
That name is strange.

23
00:02:09,410 --> 00:02:15,030
That age ain't that mark.

24
00:02:15,560 --> 00:02:19,580
Float 32 and there.

25
00:02:21,430 --> 00:02:24,490
Is exit board.

26
00:02:26,790 --> 00:02:33,250
Now, calling the scan the function, which returns the number of elements successfully is scanned and

27
00:02:33,250 --> 00:02:35,250
erode if it persists.

28
00:02:35,520 --> 00:02:43,290
So we defined two variables as return in time for the scan, the function and the sign it to these variables

29
00:02:43,650 --> 00:02:53,190
like number and e are calling equals inward scan if from the FMT package.

30
00:02:58,250 --> 00:03:11,710
Set values like Robert for May 25 for age, seventeen point fifteen for Mark and two for his exit.

31
00:03:12,320 --> 00:03:18,410
And here we assign extreme formatting for each variable as a string, arguing this

32
00:03:21,500 --> 00:03:34,310
person s four main person D for each person, f for mark and per cent T for is accept and pass the variable

33
00:03:34,310 --> 00:03:35,150
as argument.

34
00:03:35,150 --> 00:03:42,290
So we use ampersand symbol B for each variable and name.

35
00:03:44,030 --> 00:03:53,990
Ampersand H and her son Mark and Ampersand is accent

36
00:03:57,020 --> 00:03:57,370
below.

37
00:03:57,380 --> 00:04:04,460
Statements get executed if there is any or if D are not equals need.

38
00:04:07,020 --> 00:04:18,120
Panic and now printing the number of elements and each element also F.A. Dot print, if

39
00:04:21,180 --> 00:04:22,290
no.

40
00:04:23,820 --> 00:04:32,680
Of Elon's person, the display, the numbers, dash person.

41
00:04:32,730 --> 00:04:44,230
It has for name Person D for disability, the age person, if for disability, the March and Person

42
00:04:44,460 --> 00:04:51,510
T for display is accept variable and set variables for these conversion characters.

43
00:04:51,810 --> 00:04:52,560
No.

44
00:04:55,320 --> 00:05:08,040
Name, age, march and is accept OK, reform, and they could save the project and execute the program.

45
00:05:11,330 --> 00:05:19,220
Now we can see the output number of elements is four and values are Roberts four nine two five four

46
00:05:19,220 --> 00:05:24,800
eight seven two Dot fifty four mark and true for ease accept.

47
00:05:25,430 --> 00:05:32,480
So if you're able to get the variable, its value from using Iskandar function and print, then in order

48
00:05:32,480 --> 00:05:37,910
not to prolong the time of decision, we will finish it and we will continue the content in the next

49
00:05:37,910 --> 00:05:38,330
session.

50
00:05:38,520 --> 00:05:39,080
Goodbye.
