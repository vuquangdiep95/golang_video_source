1
00:00:14,710 --> 00:00:20,950
Hello and welcome to the goal and programming language course in the previous session, we talked about

2
00:00:21,190 --> 00:00:24,040
print function and indecision.

3
00:00:24,070 --> 00:00:27,430
We want to talk about the authors this empty package concept.

4
00:00:31,550 --> 00:00:33,710
This print Earth function.

5
00:00:35,100 --> 00:00:43,230
The sprint function in go language formats, according to a format, is specified and returns the resulting

6
00:00:43,230 --> 00:00:43,950
estrange.

7
00:00:45,410 --> 00:00:49,320
This sprint, it functions the same way as print.

8
00:00:49,320 --> 00:00:57,060
If that's the only difference is that Sprint is free to the format at the input string instead of printing

9
00:00:57,060 --> 00:00:58,530
on the output council.

10
00:00:59,490 --> 00:01:03,390
Moreover, this function is defined under the empty package.

11
00:01:03,570 --> 00:01:07,680
Here, you need to import this empty package in order to use this function.

12
00:01:08,370 --> 00:01:10,410
Now you can see the syntax.

13
00:01:12,430 --> 00:01:18,220
Parameter dysfunction accepts two parameters which are illustrated below first.

14
00:01:18,410 --> 00:01:26,080
Format Typekit this room, this includes some verbs along with some strings and second, a triggered

15
00:01:26,080 --> 00:01:26,920
interface.

16
00:01:26,950 --> 00:01:31,530
This is the specified constant variables and return value.

17
00:01:31,540 --> 00:01:33,850
It returns the resulting string.

18
00:01:34,480 --> 00:01:44,290
Now let's go to this good program to illustrate the use age offspring f function first, declaring some

19
00:01:44,380 --> 00:01:51,820
string variables that name Croma value equals, he said.

20
00:01:51,820 --> 00:01:53,080
Where do you go?

21
00:01:53,290 --> 00:02:03,460
And for value visa programming language now calling its print function?

22
00:02:04,000 --> 00:02:17,040
First, define a variable like resolved calling equals f empty package dot s preened f function first

23
00:02:17,050 --> 00:02:31,030
and s lowercase for S2 variable and is a and percent is lowercase dot bank slashed and set a string

24
00:02:31,030 --> 00:02:35,110
variable name and value.

25
00:02:38,230 --> 00:02:45,460
Now calling write a string function from i o package to write the contents of the S10 result to oldest

26
00:02:45,820 --> 00:02:46,420
city out.

27
00:02:46,420 --> 00:03:00,250
So Ryan i o dot rather history and set arguments as to the outfrom OS package or s dot this p the out

28
00:03:01,330 --> 00:03:06,340
and search results and save the project.

29
00:03:06,460 --> 00:03:10,780
Now, go to the next line and define some other variables.

30
00:03:10,780 --> 00:03:27,890
For the example, VI number one, number two and number three initialized in five, 10 and 15 and calling

31
00:03:27,890 --> 00:03:41,770
your sprint function again resolved equals if emptied out as plaintiff and set variable first in the

32
00:03:42,220 --> 00:03:52,780
class percent the equals first, then the and set variables for these converging characters.

33
00:03:53,230 --> 00:04:08,050
Number one and number two and set number three now calling write a string function to write the contents

34
00:04:08,050 --> 00:04:09,590
of this and result to all.

35
00:04:09,670 --> 00:04:23,620
Statistically, the again i o dot write the string history the are front always package and set result

36
00:04:23,800 --> 00:04:24,370
variable.

37
00:04:26,140 --> 00:04:30,310
Reformat the code, save the project and execute the program.

38
00:04:32,240 --> 00:04:38,090
Now we can see the output go is a programming language and five plus 10 equals 15.

39
00:04:38,540 --> 00:04:45,320
First, we create this string variable and using the ESP function to four months, according to a format

40
00:04:45,460 --> 00:04:46,070
specified.

41
00:04:46,370 --> 00:04:50,390
Then we assign the return value inside the recent event.

42
00:04:50,660 --> 00:04:58,610
And finally, we bring the value of the result variable inside the standard output in order not to prolong

43
00:04:58,610 --> 00:04:59,720
the time of decision.

44
00:04:59,930 --> 00:05:04,130
We will finish sheet and we will continue the content in the next session.

45
00:05:04,340 --> 00:05:04,820
Goodbye.
