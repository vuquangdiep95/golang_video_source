1
00:00:00,240 --> 00:00:07,130
So removing unused dependencies is going to be a little bit tricky because we have those dependencies

2
00:00:07,130 --> 00:00:08,600
are still used in other folders.

3
00:00:08,600 --> 00:00:13,550
So we almost have to create another repo and kind of throw it all in there and then go through the whole

4
00:00:13,550 --> 00:00:14,060
process.

5
00:00:14,060 --> 00:00:15,170
So let's do that.

6
00:00:15,170 --> 00:00:16,710
I'll lead the charge you ready.

7
00:00:16,720 --> 00:00:17,370
OK.

8
00:00:17,390 --> 00:00:17,660
All right.

9
00:00:17,660 --> 00:00:23,720
So this is throwing all caution to the wind here and here's the situation because we want to show how

10
00:00:23,720 --> 00:00:26,900
to remove all unused dependencies.

11
00:00:26,900 --> 00:00:30,020
And Daniel are you current on GitHub if you pushed everything.

12
00:00:30,050 --> 00:00:31,170
Yes.

13
00:00:31,250 --> 00:00:37,660
And so he's pulled in now get get status and let's add that that's my works.

14
00:00:37,670 --> 00:00:38,050
That's fine.

15
00:00:38,060 --> 00:00:38,880
So that's your name.

16
00:00:38,900 --> 00:00:44,600
So you don't need that so I'm going to pull everything down get pull and already up today.

17
00:00:44,600 --> 00:00:49,300
And so if I do that go Liz dash em all go list dash em all.

18
00:00:49,700 --> 00:00:57,070
I could see our dependencies and for our most recent version of the code base which was 0 4 here.

19
00:00:57,110 --> 00:01:07,160
And if we look at Hello we are all Hello we are only importing a CIO quote version 3 and we are no longer

20
00:01:07,160 --> 00:01:11,540
using RCI quote version one point five two.

21
00:01:11,720 --> 00:01:16,930
In this example but because we're keeping this in a hierarchical structure we're saying look here's

22
00:01:16,940 --> 00:01:17,780
the first step.

23
00:01:17,780 --> 00:01:19,040
Here's the next step here.

24
00:01:19,100 --> 00:01:22,160
We're still using those other versions in these other steps.

25
00:01:22,160 --> 00:01:29,930
So to kind of fully illustrate how you clean up your code base I'm going to create a new get hub repo.

26
00:01:29,930 --> 00:01:33,050
I'm going to go through some of these steps right here.

27
00:01:33,050 --> 00:01:37,820
Get those packages that I need in earlier steps.

28
00:01:37,820 --> 00:01:41,720
Go to the later steps and then I'll no longer need those earlier packages.

29
00:01:41,840 --> 00:01:48,250
And then we'll clean it all up in the way you clean it all up is you just do go mod tidy and go mod

30
00:01:48,260 --> 00:01:50,210
titles get and pull everything out.

31
00:01:50,210 --> 00:01:51,800
So let's just look at that right now.

32
00:01:51,830 --> 00:01:55,580
Because when I do go list dash I'm all right now.

33
00:01:55,580 --> 00:01:57,310
Here are my dependencies.

34
00:01:57,410 --> 00:02:04,040
And then we're gonna run go mod tidy and we're gonna see if anything changes between those and so I

35
00:02:04,040 --> 00:02:11,600
went from one two three four five six to one two three four five six so exactly the same because those

36
00:02:11,600 --> 00:02:15,320
dependencies are still needed in these previous examples.

37
00:02:15,320 --> 00:02:20,930
So to see that get cleaned up from this point forward in the video maybe you got everything you need

38
00:02:20,930 --> 00:02:22,770
from this video which is great.

39
00:02:22,850 --> 00:02:26,100
All it is is go mod tidy.

40
00:02:26,120 --> 00:02:27,390
So that's what it does.

41
00:02:27,410 --> 00:02:32,740
But to see it in action we're going to quickly kind of walk through those previous examples again.

42
00:02:32,750 --> 00:02:37,310
And also you're going to see just creating a get hub account all of that once more.

43
00:02:37,310 --> 00:02:41,760
So I'm going to go in here and create a new hub account a new repository.

44
00:02:41,760 --> 00:02:48,140
Sorry and that new repository I'm going to call it go modules example.

45
00:02:48,140 --> 00:02:51,140
Actually I just found out you can create a goldmine here.

46
00:02:51,240 --> 00:02:54,940
So for Yeah it's Dublin.

47
00:02:55,050 --> 00:02:55,330
All right.

48
00:02:55,330 --> 00:02:56,260
Make sure you take a lead.

49
00:02:56,260 --> 00:02:57,590
Show us what you discover.

50
00:02:57,610 --> 00:02:58,180
So.

51
00:02:58,240 --> 00:03:07,030
So what I did was I ran go mod in it inside the 0 4 folder with the full namespace down including the

52
00:03:07,030 --> 00:03:09,570
sub the sub folder packages.

53
00:03:09,820 --> 00:03:13,540
And so that created a go mod file here in this sub folder.

54
00:03:13,570 --> 00:03:20,350
So this in this folder is now a sub is now a module in and of itself separate from this go mod outside

55
00:03:21,140 --> 00:03:22,330
this etc. from the go.

56
00:03:22,330 --> 00:03:25,470
So it's keeping track of all the dependencies and everything it's software.

57
00:03:25,470 --> 00:03:27,060
Just this one folder.

58
00:03:27,060 --> 00:03:30,370
And so this got the quote v 3 in there by itself.

59
00:03:30,370 --> 00:03:35,890
So if I if I roll the code back roll the claim back to what Scott

60
00:03:39,100 --> 00:03:40,950
Robert would back to the courthouse today.

61
00:03:40,960 --> 00:03:41,470
Go.

62
00:03:41,940 --> 00:03:42,420
Go.

63
00:03:42,790 --> 00:03:43,390
Test

64
00:03:46,300 --> 00:03:47,530
so there's still work to do.

65
00:03:47,570 --> 00:03:48,740
Go let's go.

66
00:03:48,770 --> 00:03:49,710
I've got that.

67
00:03:49,730 --> 00:03:51,640
So you're going this way.

68
00:03:51,710 --> 00:03:56,400
Oh so this one also includes the indirect tab dependencies like text and sampler.

69
00:03:56,840 --> 00:04:02,900
You got one point five two and three point one zero major minor patch.

70
00:04:02,930 --> 00:04:03,510
Yep.

71
00:04:03,530 --> 00:04:13,330
So now if I then read re re re upgrade this to the v 3 only go test to make sure it's still all working

72
00:04:15,220 --> 00:04:16,150
go list.

73
00:04:16,160 --> 00:04:18,620
Dash and all so you can see those.

74
00:04:18,650 --> 00:04:23,800
It's got all the dependencies including it still has this one even though this is no longer in use anywhere.

75
00:04:23,870 --> 00:04:27,440
So now there's a go mod tidy cleans it all up.

76
00:04:27,780 --> 00:04:31,830
So now if I go this dash and all the version one is no longer there.

77
00:04:31,850 --> 00:04:35,890
Yes awesome genius.

78
00:04:35,990 --> 00:04:44,530
So and then as we were discussing last video you go dark R S C I O slash quote.

79
00:04:46,060 --> 00:04:47,240
It's this version.

80
00:04:47,240 --> 00:04:47,700
This is.

81
00:04:47,720 --> 00:04:48,580
Nope.

82
00:04:48,930 --> 00:04:50,890
That's still a pretty one I still version one.

83
00:04:50,930 --> 00:04:57,610
And so if I just do what if I just do quote that's again still the spiritual version you to quote slash

84
00:04:57,630 --> 00:05:01,320
v 3.

85
00:05:01,510 --> 00:05:02,160
Interesting.

86
00:05:02,170 --> 00:05:02,520
All right.

87
00:05:02,590 --> 00:05:03,270
So yeah.

88
00:05:03,280 --> 00:05:03,770
Good to know.

89
00:05:04,000 --> 00:05:04,700
Yeah.

90
00:05:04,840 --> 00:05:05,040
All right.

91
00:05:05,050 --> 00:05:08,290
Well I think that was clear enough with go mod tidy.

92
00:05:08,320 --> 00:05:16,660
That was the point of the video was to see Argo muddy muddy how go mod tidy works to go mod tidy.

93
00:05:16,660 --> 00:05:18,940
Also has another side effect too.

94
00:05:19,090 --> 00:05:26,350
If there is a dependency that only work is required on a particular OS or architecture so say there

95
00:05:26,380 --> 00:05:33,130
some package it's only imported on Linux for example go mod tidy will add it to the go mod file even

96
00:05:33,130 --> 00:05:39,350
though I may be on windows and so different actually downloads and runs it thanks.

97
00:05:39,510 --> 00:05:44,670
So if you're on Windows you run go mod tidy and something is needed for this to run on Linux.

98
00:05:44,670 --> 00:05:51,270
It adds to the code base it adds to the game and files dependency list and and then if somebody was

99
00:05:51,270 --> 00:05:59,950
to down load your your packages your module and they're on Linux then have everything need it.

100
00:06:00,180 --> 00:06:00,720
OK cool.

101
00:06:02,740 --> 00:06:11,000
So yeah so go my tidy tidy that up to the smallest complete list of dependencies for all platforms.

102
00:06:11,020 --> 00:06:11,440
Thanks.
