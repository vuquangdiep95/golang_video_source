1
00:00:00,480 --> 00:00:03,680
Well I hope you've had a nice time since the last video.

2
00:00:03,960 --> 00:00:08,790
I went home and got some sleep and that was awesome.

3
00:00:08,790 --> 00:00:10,250
I can't remember anything else I did.

4
00:00:10,260 --> 00:00:16,140
I was up for a couple hours in the night again and and when I was up a few of the things I reflected

5
00:00:16,140 --> 00:00:22,830
on were few reflections that we could share with you about what we did in the yesterday in the previous

6
00:00:22,830 --> 00:00:25,120
day and in the previous videos.

7
00:00:25,200 --> 00:00:30,200
And so one of the reflections was something Daniel on to chairs were going to take a look at that.

8
00:00:30,360 --> 00:00:36,030
And anyhow We're gonna go through a few reflections from yesterday and we'll start off with the two

9
00:00:36,030 --> 00:00:37,020
versions of Twitter.

10
00:00:37,020 --> 00:00:38,370
Why don't you tell people about that.

11
00:00:38,890 --> 00:00:39,090
Yeah.

12
00:00:39,120 --> 00:00:42,170
So it was not really thing I could really manage.

13
00:00:42,240 --> 00:00:49,290
I don't actually have a Twitter account but a going going to this page here.

14
00:00:49,290 --> 00:00:52,250
As someone who doesn't have a Twitter account it looks like this.

15
00:00:52,380 --> 00:00:58,230
And then here's what it looks like if you on my computer go to Twitter and you do have an account.

16
00:00:58,260 --> 00:00:59,300
It's like wait a minute.

17
00:00:59,310 --> 00:01:00,870
Totally different Twitter.

18
00:01:01,200 --> 00:01:03,330
And I'm logged in right.

19
00:01:03,330 --> 00:01:06,170
You could see I don't know.

20
00:01:06,190 --> 00:01:07,500
Well I guess I could tweet.

21
00:01:07,530 --> 00:01:10,310
I have a big tweet but you can tweet when you're logged in.

22
00:01:10,500 --> 00:01:19,680
And if I go down and look at that tweet that we put up so much about Twitter which is I don't know where

23
00:01:19,680 --> 00:01:20,310
it is.

24
00:01:20,350 --> 00:01:24,080
There it is a little bit noise outside.

25
00:01:24,080 --> 00:01:24,930
That'll pass.

26
00:01:24,940 --> 00:01:26,940
So here here's that tweet.

27
00:01:26,940 --> 00:01:27,890
So looks really different.

28
00:01:27,900 --> 00:01:33,240
And not only is a look different here but when you go into developer tools and again to get there you

29
00:01:33,480 --> 00:01:41,920
they're more tools developer tools or option command high option command.

30
00:01:41,940 --> 00:01:42,420
There you go.

31
00:01:42,450 --> 00:01:47,380
When you go into developer tools and you check that out you have really different tags in there.

32
00:01:47,460 --> 00:01:49,230
So it's different CSX.

33
00:01:49,820 --> 00:01:52,620
And so it's a different version of Twitter.

34
00:01:52,650 --> 00:01:52,850
Yeah.

35
00:01:52,880 --> 00:01:53,160
So.

36
00:01:53,200 --> 00:01:58,590
So it's important to note that your crawler will be crawling as someone who's logged out it does not

37
00:01:58,590 --> 00:01:59,660
have any.

38
00:02:00,390 --> 00:02:05,020
Any cookies showing that it's logged in or any other credentials.

39
00:02:05,110 --> 00:02:11,220
And so to to make sure that you are looking at the same kind of page and seeing the same kind of CSX

40
00:02:11,250 --> 00:02:21,140
as your crawler you should examine the page using a private or incognito browsing window which basically

41
00:02:21,140 --> 00:02:28,860
gives the same effect of someone who is not logged in and has no has never visited Twitter before.

42
00:02:28,860 --> 00:02:30,610
So in this case means the same thing for me.

43
00:02:30,630 --> 00:02:35,820
As Twitter is just going based off whether I've walked in or not and for most web sites this does not

44
00:02:35,820 --> 00:02:36,430
matter.

45
00:02:36,450 --> 00:02:42,960
Usually there's not really any difference between anything but just in Twitter's case you may have a

46
00:02:42,960 --> 00:02:44,170
slightly different site.

47
00:02:44,220 --> 00:02:50,010
If you're logged it was not logged in with different CSF classes your crawler may may require changes

48
00:02:51,420 --> 00:02:51,780
yeah.

49
00:02:51,790 --> 00:02:59,320
And crawling is one of those deals where it's always you're relying upon somebody else's system and

50
00:02:59,320 --> 00:03:00,670
that system could change.

51
00:03:00,670 --> 00:03:02,420
You don't have control over that.

52
00:03:02,550 --> 00:03:09,220
And so something that needs monitoring says the first thing we wanted to point out anything I'll say

53
00:03:09,220 --> 00:03:09,820
about that one.

54
00:03:09,960 --> 00:03:10,430
No.

55
00:03:10,820 --> 00:03:15,190
And and then just someone that can give a little bit of an overview or maybe have a quick discussion

56
00:03:15,190 --> 00:03:17,250
of an overview of your solution.

57
00:03:17,320 --> 00:03:22,090
We don't have to look at the code but basically your process was you found a good library right or you

58
00:03:22,090 --> 00:03:23,010
found some good code.

59
00:03:23,020 --> 00:03:24,990
You can get a good package go Callie.

60
00:03:25,060 --> 00:03:30,100
We're gonna do a little terminology disintegration between module package and library.

61
00:03:30,100 --> 00:03:31,740
We're going to revisit that here one second.

62
00:03:32,200 --> 00:03:40,280
But you found you found a good library package and then you looked at the examples and you said okay

63
00:03:40,330 --> 00:03:41,700
here's an example.

64
00:03:41,720 --> 00:03:47,650
And so how much of the code that you use was just kind of like you know pretty much just copy pasta

65
00:03:47,940 --> 00:03:51,340
and encoding they sometimes say copy positive instead of copy paste right.

66
00:03:51,400 --> 00:03:51,610
Yeah.

67
00:03:51,620 --> 00:03:52,240
Kind of funny.

68
00:03:52,330 --> 00:03:57,490
Yeah I've heard that but I'm just checking in to see if that's accurate because since I'm over the age

69
00:03:57,490 --> 00:04:04,600
of 30 by a long ways now I fortunately I don't always understand all the lingo.

70
00:04:04,600 --> 00:04:06,180
I don't get that one either.

71
00:04:06,400 --> 00:04:07,650
Copy pasta.

72
00:04:07,780 --> 00:04:10,150
So yeah copy paste.

73
00:04:10,330 --> 00:04:10,510
Yeah.

74
00:04:10,540 --> 00:04:15,430
How much of your code was copying and just pasting and then you know adjusting a little bit for the

75
00:04:15,430 --> 00:04:16,480
current situation.

76
00:04:16,480 --> 00:04:22,610
A lot of the archives so say it well it ends up that it ended up being very similar to how to read it

77
00:04:22,610 --> 00:04:28,880
when you read it example here worked out as extremely similar but I did not actually.

78
00:04:29,800 --> 00:04:35,020
I came to that kind of design kind of almost independently.

79
00:04:35,020 --> 00:04:37,030
I use the example less as.

80
00:04:37,040 --> 00:04:41,740
Here's how you do this and more along the lines that these are the functions you need and then looked

81
00:04:41,740 --> 00:04:47,020
up with its functions were in the documentation and it turned out my design ended up being near identical

82
00:04:47,030 --> 00:04:48,460
to this Reddit example.

83
00:04:48,520 --> 00:04:51,730
Overall it's a nice way to do is to design it on your own.

84
00:04:51,880 --> 00:04:56,340
If you have an example compare their solution and see if there's anything you can learn from it.

85
00:04:58,050 --> 00:05:02,990
Like that and then the terminology terminology disambiguate and revisited.

86
00:05:02,990 --> 00:05:04,270
I just want to.

87
00:05:04,290 --> 00:05:09,660
For me I don't know why I really like to have precision over what words are being used and make sure

88
00:05:09,660 --> 00:05:10,870
that we understand those.

89
00:05:10,860 --> 00:05:17,340
Because when you're learning coding there's so many different new words and there's a language for talking

90
00:05:17,340 --> 00:05:20,060
about programming and languages.

91
00:05:20,390 --> 00:05:26,880
And if you don't understand those words it could just be like a sea of confusion like a foreign language

92
00:05:26,880 --> 00:05:28,730
like I don't know what you're talking about.

93
00:05:28,950 --> 00:05:36,580
I don't know what those words are and so I found some definitions for module package and library and

94
00:05:36,980 --> 00:05:42,420
and then I put those in here and along with the resource so this is just kind of what it refers to in

95
00:05:42,420 --> 00:05:43,630
computer science.

96
00:05:43,800 --> 00:05:46,650
And and then this is kind of what it refers to and go.

97
00:05:47,010 --> 00:05:53,760
And so in computer science module and software modules part of a program programs are composed of one

98
00:05:53,760 --> 00:05:59,630
or more independently developed modules that are not combined until the program is linked.

99
00:05:59,730 --> 00:06:06,090
A single module can contain one or several routines in hardware modules self-contained component and

100
00:06:06,090 --> 00:06:10,740
the thing which is a little bit tricky about this terminology is I could have used the word function

101
00:06:10,740 --> 00:06:14,230
there right and it would have worked just as well right.

102
00:06:14,340 --> 00:06:20,240
Programs are combined of different functions and add or components even rights.

103
00:06:20,250 --> 00:06:25,860
There's different words that but anyhow that's the definition came up the module but it gets back to

104
00:06:25,860 --> 00:06:32,760
this general idea of the trend that software engineering and develops take him in which is to module

105
00:06:32,760 --> 00:06:38,760
arise our code to take spaghetti code one big document full of code and break it up into chunks which

106
00:06:38,760 --> 00:06:42,990
then can be called in and used and reused and do not repeat yourself.

107
00:06:42,990 --> 00:06:45,290
Keep your code dry.

108
00:06:45,720 --> 00:06:52,710
So modular izing your code gets back whether it's module component function gets back to this general

109
00:06:52,710 --> 00:06:56,340
trend of breaking things up and reads usable chunks.

110
00:06:56,340 --> 00:07:02,310
And so that's a module definition we came up with or I came up with here at this link and then go a

111
00:07:02,310 --> 00:07:04,230
module or go module.

112
00:07:04,230 --> 00:07:10,620
Either one is name spacing for your work space dependency management which includes managing direct

113
00:07:10,620 --> 00:07:13,820
pendency is an indirect dependencies and versioning.

114
00:07:13,910 --> 00:07:21,540
So which versions of your dependencies and you can have one or more packages in a module and usually

115
00:07:21,540 --> 00:07:24,600
a module is one to one with a repo.

116
00:07:24,600 --> 00:07:31,120
So that's that's module definition module and then we have package you have anything to say about module.

117
00:07:31,470 --> 00:07:32,070
OK.

118
00:07:32,460 --> 00:07:40,420
And then we have package and package is a namespace that organizes a set of related classes and interfaces.

119
00:07:40,440 --> 00:07:46,080
This is a definition that comes from Oracle Java conceptual you can think of packages as being similar

120
00:07:46,080 --> 00:07:48,120
to different folders on your computer.

121
00:07:48,300 --> 00:07:53,510
You might keep H.M. pages in one folder images and another in scripts and applications and yet another.

122
00:07:53,530 --> 00:08:00,120
So that's one definition we came up with for a package and in go package is a higher level grouping

123
00:08:00,120 --> 00:08:05,870
of codes so if you look at the scope and go and scope if that's foreign to you.

124
00:08:05,870 --> 00:08:12,480
Please go back to the earlier classes but we have the universe scope and then we have the package scope

125
00:08:12,480 --> 00:08:14,400
and then we have file scope.

126
00:08:14,400 --> 00:08:17,270
So the universe is the entire program.

127
00:08:17,280 --> 00:08:20,100
The entire program can be made up of packages.

128
00:08:20,100 --> 00:08:26,190
Packages can be made up of files and then files can be made up of code blocks and those code blocks.

129
00:08:26,190 --> 00:08:32,220
I think of them as stuff between curly braces and so you have stuff between curly braces and functions

130
00:08:32,250 --> 00:08:34,570
but you can also just have curly braces.

131
00:08:34,590 --> 00:08:35,880
I call him curly.

132
00:08:35,910 --> 00:08:44,250
You could have curly braces inside your code at various points to limit scope and so that's that's kind

133
00:08:44,250 --> 00:08:50,600
of where the package falls in this and so packages we make you know to higher level grouping of codes.

134
00:08:50,610 --> 00:08:57,360
We have the strings package where we have the fucked package and then so that's and I included here

135
00:08:57,360 --> 00:09:01,760
from the going specification where it talks about scope.

136
00:09:01,830 --> 00:09:09,650
So if you just want to read that that's from the go spec source going spec and then down here we have

137
00:09:09,660 --> 00:09:10,640
library.

138
00:09:10,800 --> 00:09:18,270
And so in computer science a library is a collection of non-volatile resources used by computer programs

139
00:09:18,300 --> 00:09:26,070
often for software development and these may include configuration data collection of non-volatile resources

140
00:09:26,070 --> 00:09:31,890
like that's used by computer programs non-volatile means that they aren't going to go away.

141
00:09:32,340 --> 00:09:34,600
So it's just a resource right.

142
00:09:34,680 --> 00:09:41,070
Could include configuration dad documentation helped out a message templates pre written code and subroutines

143
00:09:41,850 --> 00:09:45,450
classes if we're doing classical P.

144
00:09:45,690 --> 00:09:50,430
Object Oriented Programming values or type specifications and so on go.

145
00:09:50,430 --> 00:09:57,990
You know like I if I if I'm typing going libraries the first result I get a Google is the programming

146
00:09:57,990 --> 00:09:59,920
language packages.

147
00:10:00,150 --> 00:10:06,120
But what it points to is the standard library and so I think it's nice that they call the library right

148
00:10:06,150 --> 00:10:12,530
because this library is all of the different packages in the standard library so library contains all

149
00:10:12,550 --> 00:10:13,680
the packages.

150
00:10:13,680 --> 00:10:21,290
So that's a little bit of you know a little bit of disintegration between module.

151
00:10:21,450 --> 00:10:28,560
What it kind of generally speaking is in computer science and then what it is and go package what it

152
00:10:28,560 --> 00:10:34,070
generally is in computer science and what it is and go and kind of where that ties in with scope and

153
00:10:34,470 --> 00:10:38,090
and then how we modular ize our code and break it up into little chunks.

154
00:10:38,100 --> 00:10:39,740
He could see all these terms get confusing.

155
00:10:39,750 --> 00:10:41,750
You talked about it and then a library.

156
00:10:41,760 --> 00:10:42,070
Right.

157
00:10:42,090 --> 00:10:47,010
Because we've been using module or library or package sometimes these words can shift back and forth

158
00:10:47,010 --> 00:10:48,270
as we use them.

159
00:10:48,300 --> 00:10:50,700
All right says just terminology disambiguate.

160
00:10:50,700 --> 00:10:56,910
I know that's a lot about those terms but for me it's important to be precise about the language and

161
00:10:56,910 --> 00:11:03,610
also if you're newer to programming and you hear people using these terms to understand that you know

162
00:11:03,960 --> 00:11:13,930
there is an absolute division between those terms module component library package function right.

163
00:11:14,000 --> 00:11:16,040
And depending upon the language you're working in.

164
00:11:16,070 --> 00:11:21,740
They might have used different terminology to talk about very similar things in different languages.

165
00:11:21,740 --> 00:11:26,900
So not to be intimidated by that when you're talking with other developers and somebody is using different

166
00:11:26,900 --> 00:11:28,060
term.

167
00:11:28,070 --> 00:11:32,680
You kind of understand what that means and then you can also even explain it if it's needed to be anything

168
00:11:32,690 --> 00:11:34,080
you want to add.

169
00:11:34,640 --> 00:11:37,350
For reals now for reals.

170
00:11:37,400 --> 00:11:37,790
That's right.

171
00:11:37,790 --> 00:11:39,730
We were joking about that yesterday.

172
00:11:39,740 --> 00:11:40,100
All right.

173
00:11:40,130 --> 00:11:42,320
So that's that's our little reflection.

174
00:11:42,320 --> 00:11:46,780
We'll see you in the next section where we're going to take a look at the second crawler.

175
00:11:46,790 --> 00:11:47,600
Daniel put together.
