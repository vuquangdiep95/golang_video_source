1
00:00:01,280 --> 00:00:08,060
So at this point, we have a new version of our log in jet page that will allow users to authenticate

2
00:00:08,060 --> 00:00:14,750
using a standard username and password for our application or at some point in the not too distant future

3
00:00:14,750 --> 00:00:16,780
to authenticate using GitHub or Google.

4
00:00:16,820 --> 00:00:21,560
So we may will set up some routes just to make sure that everything displays the way that it should.

5
00:00:22,220 --> 00:00:23,140
So let's go to our roots.

6
00:00:23,150 --> 00:00:28,700
Don't go file inside the Maya project, and let's just add a few roots just to display that page and

7
00:00:28,700 --> 00:00:29,900
to call the in handler.

8
00:00:30,080 --> 00:00:30,440
So.

9
00:00:30,680 --> 00:00:33,560
So we'll put them right here at the top right after the home route.

10
00:00:33,680 --> 00:00:37,910
And it's as simple as calling a Dot app dot roots dot.

11
00:00:37,910 --> 00:00:43,070
Get it to display the page and I'll use users slashed log in.

12
00:00:43,790 --> 00:00:46,400
And that's going to call the handler aid dot handlers.

13
00:00:46,580 --> 00:00:49,520
And this is the one installed by celebrities user log in.

14
00:00:50,390 --> 00:00:56,930
Then I'll duplicate this and changes to a post request when someone submits the form.

15
00:00:56,960 --> 00:00:58,420
We're not going to call user log in.

16
00:00:58,430 --> 00:01:00,320
We're going to call post user log in.

17
00:01:00,860 --> 00:01:01,160
OK.

18
00:01:02,810 --> 00:01:08,060
So assuming I have mine Docker images running in my My App folder, I should now be able to type it

19
00:01:08,060 --> 00:01:10,520
make stop just in case the application is running.

20
00:01:10,520 --> 00:01:17,570
It wasn't, and I'll take make start and it looks like I have to run a couple of go get commands, so

21
00:01:17,570 --> 00:01:19,520
it wants this one, so I'll copy that.

22
00:01:23,080 --> 00:01:28,630
This is not unusual when we're working on two packages at the same time, so I'll run that one first.

23
00:01:28,940 --> 00:01:32,560
Then it looks like I have to do this one as well.

24
00:01:34,110 --> 00:01:35,940
So I'll copy that while the other one's working.

25
00:01:40,310 --> 00:01:41,500
We'll start in.

26
00:01:43,730 --> 00:01:46,190
And the last one it seems to want is this mini oh, go.

27
00:01:48,610 --> 00:01:54,160
For whatever reason, you get used to doing this when you're working on two projects at the same time,

28
00:01:54,160 --> 00:01:55,540
and it's not terribly onerous.

29
00:01:59,110 --> 00:02:00,280
The paste in the last one.

30
00:02:05,300 --> 00:02:09,620
And now I should be able to clear the screen and type make start, and hopefully that's all it needs.

31
00:02:12,980 --> 00:02:15,390
And I have an ear here, models DOT tokens.

32
00:02:15,410 --> 00:02:16,520
Oh, yes, OK.

33
00:02:16,610 --> 00:02:24,140
So I need to come up here to my data folder and open models dot go and I'll just hide the terminal.

34
00:02:25,680 --> 00:02:30,420
So it's this part here, I need to add something to the model struct that I need to return something

35
00:02:30,420 --> 00:02:31,620
down here, probably.

36
00:02:32,490 --> 00:02:36,630
So up here, I'll add the three things that were installed by the make off command.

37
00:02:37,020 --> 00:02:44,640
I'll call the first one remember token, and it's equal to remember tokens and tokens, which is token

38
00:02:47,130 --> 00:02:54,720
and users, which has to have a lowercase asked users, which is of type user that will take care of

39
00:02:54,720 --> 00:02:55,650
the first part.

40
00:02:56,880 --> 00:03:04,290
And then down here where I'm returning my models, I'll add remember token, which is a type remember

41
00:03:04,290 --> 00:03:11,520
token empty and I'll add users, which is a type user empty.

42
00:03:13,380 --> 00:03:22,920
And finally, tokens tokens plural is a token, and it's an empty token format that and that should

43
00:03:22,920 --> 00:03:24,060
take care of that problem.

44
00:03:24,090 --> 00:03:24,540
All right.

45
00:03:24,570 --> 00:03:26,190
Third time's the charm mixture.

46
00:03:33,100 --> 00:03:33,730
And there it goes.

47
00:03:34,030 --> 00:03:34,620
It's running.

48
00:03:34,640 --> 00:03:36,070
So let's go back to our web browser.

49
00:03:37,550 --> 00:03:41,450
And let's just go to local host, 4000, local host, 4000.

50
00:03:42,830 --> 00:03:48,050
And at this point, I should be able to go to my users menu and choose log in and see the log in screen.

51
00:03:49,150 --> 00:03:54,040
And I can't perfect how these buttons don't do anything, but clearly they're where they need to be.

52
00:03:54,190 --> 00:03:59,050
So at this point, I don't have any users in the database, so I can't actually log in, but I don't

53
00:03:59,050 --> 00:04:00,030
care about that right now.

54
00:04:00,040 --> 00:04:02,020
We already know that works from the last course.

55
00:04:02,950 --> 00:04:04,570
These are the things I want to work on.

56
00:04:04,990 --> 00:04:07,810
So we'll get started with GitHub in the next election.

