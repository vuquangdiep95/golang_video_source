1
00:00:01,330 --> 00:00:06,280
So let's give this a try and see if our maintenance mode functionality works as expected.

2
00:00:06,400 --> 00:00:12,130
So I have a terminal window open and I'm in the solicitor's project and I want to build the new executable

3
00:00:12,130 --> 00:00:13,870
and copy it over to my app.

4
00:00:14,080 --> 00:00:16,610
So make build underscore seal.

5
00:00:18,040 --> 00:00:19,780
And there it's built the executable.

6
00:00:20,200 --> 00:00:25,780
Now I'll go over to another terminal in the My App folder and make sure my application is running.

7
00:00:25,840 --> 00:00:26,440
Make start.

8
00:00:28,590 --> 00:00:35,160
There, so it's now listening and running, so I should be able to go to my web browser and I'm already

9
00:00:35,160 --> 00:00:35,900
on this page.

10
00:00:35,940 --> 00:00:37,560
Let's reload it and make sure it works.

11
00:00:37,980 --> 00:00:38,580
It does.

12
00:00:39,210 --> 00:00:44,430
Now let's go back to our terminal in the Miami project and Typekit slash salaries horse.

13
00:00:44,430 --> 00:00:48,630
And of course, for Windows users, there's a Z at the end and that's all you need to use.

14
00:00:49,660 --> 00:00:52,390
And we'll put down and actually put it in maintenance mode.

15
00:00:52,420 --> 00:00:55,540
Well, we got the right response back from our PC, so that's good.

16
00:00:55,730 --> 00:01:00,610
Let's go see if it worked and we'll reload this and it's in maintenance mode.

17
00:01:00,760 --> 00:01:07,690
And now I can go back to my terminal and Typekit slash Celerio toss up and it should be live.

18
00:01:07,900 --> 00:01:13,660
So I should be able to click on this or refresh the page and everything works as expected.

19
00:01:14,830 --> 00:01:19,870
Now there are some enhancements we could make to this, and I'm not going to do it, but I'll talk about

20
00:01:19,870 --> 00:01:22,270
them a little bit if we go back to our code right now.

21
00:01:22,510 --> 00:01:25,510
If the servers in maintenance mode, it doesn't matter where I go.

22
00:01:25,600 --> 00:01:27,910
I'll always get that maintenance mode message.

23
00:01:28,420 --> 00:01:33,670
But there may be situations where you want certain functionality to still be active and available,

24
00:01:33,670 --> 00:01:40,060
for example, perhaps a login screen or any URL that begins with slash admin or something like that.

25
00:01:40,660 --> 00:01:45,010
Well, we've actually fixed that, and we could make that something that's actually editable by the

26
00:01:45,010 --> 00:01:45,430
user.

27
00:01:45,640 --> 00:01:53,430
So if we went back to our code and say in the dart on file in my app, we put something like this.

28
00:01:53,440 --> 00:01:56,620
And as I said, I'm not actually going to do this, but I might be able to.

29
00:01:56,920 --> 00:02:01,750
I could put something like this allowed the URLs equals.

30
00:02:01,900 --> 00:02:10,600
And then as a string, I could put slash log in comma slash admin and whatever else you want to do anything

31
00:02:10,600 --> 00:02:11,770
separated by commas.

32
00:02:12,850 --> 00:02:22,330
Well, if you recall over here in middleware, in the celebrities project, which is right here, we're

33
00:02:22,330 --> 00:02:26,290
actually doing a check here in the check for maintenance, for middleware.

34
00:02:26,470 --> 00:02:32,260
We're actually saying, if not, strings contains the URL path, which is whatever the user is trying

35
00:02:32,260 --> 00:02:34,690
to get to and then something that's permitted.

36
00:02:34,940 --> 00:02:43,600
OK, we could actually read that string allowed URLs from dart ons when celerity starts up store, that

37
00:02:43,600 --> 00:02:44,950
is a slice of strings.

38
00:02:45,340 --> 00:02:50,080
And then just make sure that in this if statement, if we can check for anything that's in that slice

39
00:02:50,080 --> 00:02:59,160
of strings and actually if it's not slash public slash maintenance dot html, but it isn't allowed URL,

40
00:02:59,170 --> 00:03:01,330
we can allow an allowed path.

41
00:03:01,690 --> 00:03:04,030
Then we had a permit that page to be displayed.

42
00:03:04,120 --> 00:03:08,980
So what that would allow us to do, for example, is something like any page on the site.

43
00:03:08,980 --> 00:03:15,460
That's a public page will display the servers in maintenance mode message unless it's one of the allowed

44
00:03:15,460 --> 00:03:16,070
URLs.

45
00:03:16,090 --> 00:03:21,010
So, for example, if you had all of your admin functionality for a certain web application stored in

46
00:03:21,010 --> 00:03:27,190
you URLs to begin with slash admin, then you could put the public site into maintenance mode, but

47
00:03:27,190 --> 00:03:29,770
still do some maintenance in the admin back end.

48
00:03:30,160 --> 00:03:33,790
And that's an exercise I'll leave to you if you so desire.

49
00:03:34,360 --> 00:03:34,720
All right.

50
00:03:34,810 --> 00:03:35,590
Time to move on.

