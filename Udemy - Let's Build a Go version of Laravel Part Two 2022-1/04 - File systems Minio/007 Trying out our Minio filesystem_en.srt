1
00:00:00,960 --> 00:00:04,560
So we've set up our file systems in Celerity House, at least for a minute.

2
00:00:04,830 --> 00:00:09,990
And we have the appropriate values in our on file and let's make sure things will actually compile.

3
00:00:10,290 --> 00:00:16,140
So I'm back in my I.D. and I'll open the terminal and I'll make sure I'm using my app directory.

4
00:00:16,379 --> 00:00:17,040
I am.

5
00:00:17,520 --> 00:00:18,920
And let's just try running this.

6
00:00:18,930 --> 00:00:20,310
So make it start.

7
00:00:20,520 --> 00:00:23,380
And it should tell me that I need to go get some things.

8
00:00:23,400 --> 00:00:23,970
And it does.

9
00:00:24,930 --> 00:00:25,650
So right here.

10
00:00:25,920 --> 00:00:31,360
It gives me two things I need to go get go, get celebrities, file system slash.

11
00:00:31,410 --> 00:00:32,820
Meanwhile, file system.

12
00:00:32,820 --> 00:00:34,410
And that's all I need.

13
00:00:34,440 --> 00:00:35,490
So I'll copy this.

14
00:00:38,160 --> 00:00:44,810
And paste it, and it should go get it from our local directory up one level, the folder name celebrities

15
00:00:44,820 --> 00:00:46,950
and it finds the appropriate thing and adds it.

16
00:00:47,610 --> 00:00:51,480
So now I should be able to run this make start just to make sure it works.

17
00:00:53,690 --> 00:00:57,170
And there it goes, it's running, so I'll stop it, make stop.

18
00:00:57,950 --> 00:00:58,520
Let's try that.

19
00:00:59,390 --> 00:01:04,190
So just to make sure things actually work, let's open up the routes file in my app.

20
00:01:04,459 --> 00:01:05,570
So we'll go to routes.

21
00:01:07,190 --> 00:01:09,290
And here I'll just add a test route.

22
00:01:09,560 --> 00:01:15,980
So I'll add a route that says, don't get and we'll say Test, meanwhile, is the route and then I'll

23
00:01:15,980 --> 00:01:17,120
do an inline function.

24
00:01:17,840 --> 00:01:24,320
W. A. Ebola response rider and a pointer to H-E-B request, which I'll call out as they usually do.

25
00:01:27,790 --> 00:01:36,970
And in here, let's just get the current value of our file systems right from our app, which is stored

26
00:01:36,970 --> 00:01:38,200
as part of our application.

27
00:01:38,980 --> 00:01:45,760
So if it's just a variable name I'm declaring comes from a Dot app.

28
00:01:46,240 --> 00:01:49,240
Dart file systems.

29
00:01:49,750 --> 00:01:52,330
And we're going to get Mineo, which is what I named it.

30
00:01:52,540 --> 00:02:01,480
So we now have that value and will actually cast that to a Mineo file system, Mineo file systems.

31
00:02:01,740 --> 00:02:02,260
I mean, I o.

32
00:02:03,430 --> 00:02:10,449
So that gives me a variable F, which is my file systems, and I should be able to call an actual method

33
00:02:10,449 --> 00:02:10,930
on that.

34
00:02:11,650 --> 00:02:19,930
So I'll say files in error come from afterthought list and we'll give it a prefix of nothing.

35
00:02:21,110 --> 00:02:21,470
OK.

36
00:02:22,520 --> 00:02:25,400
And we'll check for error if error is not equal to nil.

37
00:02:25,430 --> 00:02:32,450
We'll just log it logged the print line the error and return it.

38
00:02:32,900 --> 00:02:35,280
Otherwise we'll rip through it.

39
00:02:35,360 --> 00:02:42,560
So for I don't care about the index, but I do care about the current value, which I'll call file.

40
00:02:43,980 --> 00:02:48,240
Is assigned the value of ranging through files.

41
00:02:50,660 --> 00:02:55,760
And now I'll say log print line, file dot key to give the file name.

42
00:02:57,680 --> 00:03:02,660
OK, now in order for that to work, of course, it would be useful to have something in a criminal

43
00:03:02,660 --> 00:03:03,320
file system.

44
00:03:03,980 --> 00:03:07,790
So I'll switch to my finder and I'll open up the DB data.

45
00:03:07,790 --> 00:03:13,330
Mineo files right there and test bucket that folder, and I'll put this picture in there.

46
00:03:13,340 --> 00:03:15,200
You can put any file you want in there.

47
00:03:15,560 --> 00:03:16,760
It doesn't matter what it is.

48
00:03:17,090 --> 00:03:19,940
As long as we can actually look at it, it's not.

49
00:03:19,940 --> 00:03:24,410
If I come back here and start my application again, make a start.

50
00:03:24,860 --> 00:03:26,270
Make sure it all compiles and runs.

51
00:03:28,210 --> 00:03:28,900
And it does.

52
00:03:29,050 --> 00:03:31,280
OK, so now I have a log file running.

53
00:03:31,300 --> 00:03:38,670
So let's go to our web browser and go to local host whatever port you're listening to, test Dash,

54
00:03:38,790 --> 00:03:46,090
you know, so I'll open up Firefox and we'll go to localhost four thousand slashed Test Dash.

55
00:03:46,270 --> 00:03:49,600
You know, I should get nothing on the screen and I don't.

56
00:03:49,720 --> 00:03:51,610
But if I go back and look at my log file.

57
00:03:54,380 --> 00:04:00,020
There it is, it found we'll dash tailed Dash toddler dog JPAC, so we know we can connect and we know

58
00:04:00,020 --> 00:04:01,580
we can list things perfect.

59
00:04:02,000 --> 00:04:07,910
So now in the next lecture, we'll try building some functionality to upload files and to display them

60
00:04:07,910 --> 00:04:11,630
in a web browser just to make sure all of the functions work properly.

